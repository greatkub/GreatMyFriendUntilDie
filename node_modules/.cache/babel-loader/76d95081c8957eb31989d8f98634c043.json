{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Alert, ScrollView } from 'react-native';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  heder: {\n    width: '100%',\n    padding: theme.spacing(1),\n    marginTop: '-2%'\n  },\n  Card: {\n    width: '80%',\n    padding: theme.spacing(3),\n    margin: 'auto'\n  },\n  Cards: {\n    width: '100%',\n    padding: theme.spacing(2),\n    margin: 'auto'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  Btn: {\n    marginLeft: \"92%\",\n    marginTop: \"-6%\"\n  },\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 80\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: '100%',\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: 'absolute',\n    width: \"30%\",\n    top: 10,\n    left: 0,\n    right: 0,\n    margin: '0 auto'\n  },\n  buttonsubmit: {\n    width: \"407px\",\n    height: \"42.8px\",\n    position: \"absolute\",\n    top: 620,\n    left: \"35%\"\n  },\n  inputbox: {\n    width: 128,\n    height: 39\n  }\n}));\nexport default function CreateRoom(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 18\n  }, this);\n\n  const [allroom, setAllroom] = useState([]);\n  const [inputRoomToAdd, setInputRoomToAdd] = useState(null);\n  const [arrayFloor, setArrayFloor] = useState(2);\n  const [getRoomName, setRoomName] = useState();\n  const {\n    id\n  } = useParams();\n  const [buildingName, setBuildName] = useState([]);\n  useEffect(async () => {\n    console.log(id + \"in Use Eff first row\");\n    console.log();\n    await axios(`/building/building/id/${id}`).then(response => {\n      console.log(response.data, \"in response\");\n      setBuildName(response.data[0].buildingName);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  useEffect(() => {\n    setArrayFloor(props.allFloor); // axios('/building/rooms/1')\n    //     .then(response => {\n    //         // console.log(\"hi\" + response.data)\n    //         setAllroom(response.data);\n    //     })\n    //     .catch(error => {\n    //         console.log('Error getting fake data: ' + error);\n    //     })\n    // console.log(\"In useeffect\")\n  }, []); // building/floor-room/building/5\n\n  const api = axios.create({\n    baseURL: `/building/floor-room/building/${id}`\n  });\n\n  const addFloorandRoom = async () => {\n    let res = await api.post('/', arrayFloor).then(response => {\n      alert(\"Add Room successfully\");\n      window.location.href = `/st_initialize/${id}`;\n    }).catch(error => {\n      alert(\"Fail\");\n      console.log('Error getting fake data: ' + error);\n    });\n  };\n\n  function handlerClick() {\n    const a = 100; // inputRoomToAdd\n    // allroom\n\n    const roomObject = {\n      \"room_number\": \"101\"\n    }; // console.log(allroom)\n\n    for (var i = 0; i < arrayFloor.length; i++) {\n      for (var j = 0; j < parseInt(inputRoomToAdd); j++) {\n        const formattedNumber = (\"0\" + (j + 1)).slice(-2);\n        const roomNumber = String(i + 1) + formattedNumber;\n        const roomObject = {\n          \"room_number\": roomNumber\n        };\n        arrayFloor[i].Rooms.push(roomObject);\n        console.log(roomNumber);\n      }\n    }\n\n    setArrayFloor(arrayFloor);\n    console.log(arrayFloor);\n    console.log(\"end\");\n  } // return (\n  //     <div style={{ width: '100%' }}>\n  //         <ScrollView>\n  //             <div className=\"container \">\n  //                 <div style={{ width: '100%', height: '650px' }}>\n  //                     <div style={{ width: '100%', height: '550px' }}>\n  //                         {/* <Link to='/st_initialize'> */}\n  //                         {/* <button onClick={() => console.log(arrayFloor)}>\n  //                         </button> */}\n  //                         {/* </Link> */}\n  //                         <Card className={classes.Card} variant=\"outlined\">\n  //                             <Table aria-label=\"caption table\">\n  //                                 <TableHead >\n  //                                     <TableRow>\n  //                                         <TableCell className={classes.heder}>\n  //                                             <div style={{ display: 'flex' }}>\n  //                                                 <h4>Rooms</h4>\n  //                                                 <input\n  //                                                     placeholder=\"No of Room\"\n  //                                                     type=\"number\"\n  //                                                     // value={inputfloorToAdd}\n  //                                                     onChange={(e) => setInputRoomToAdd(parseInt(e.currentTarget.value))}\n  //                                                 />\n  //                                                 <Button className={classes.buttongenerate}\n  //                                                     size=\"small\" variant=\"contained\" color=\"primary\" disableElevation\n  //                                                     style={{ backgroundColor: '#485D84' }}\n  //                                                     onClick={() =>\n  //                                                         handlerClick()\n  //                                                     }\n  //                                                 >Generate Floor</Button>\n  //                                             </div>\n  //                                         </TableCell>\n  //                                     </TableRow>\n  //                                 </TableHead>\n  //                                 <TableBody>\n  //                                     <div className=\"container\">\n  //                                         <h5 className={classes.heder}> {buildingName}</h5>\n  //                                         {arrayFloor != undefined && arrayFloor.length > 0 ? arrayFloor.map((set) => {\n  //                                             { console.log(set) }\n  //                                             return (\n  //                                                 <div>\n  //                                                     <div style={{ width: \"100%\", minHeight: \"200px\", border: \"1px solid #AAAAAA\", borderRadius: 5 }}>\n  //                                                         <div style={{ height: \"86.5px\", width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n  //                                                             <h4> Floor {set.FloorName} </h4>\n  //                                                         </div>\n  //                                                         {set.Rooms.map((r, index) => {\n  //                                                             return (\n  //                                                                 <div style={{ display: 'flex', height: 50, width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n  //                                                                     <div>\n  //                                                                         <h4>  {r.room_number}</h4>\n  //                                                                     </div>\n  //                                                                     <input\n  //                                                                         onChange={e => r.room_number = e.target.value}\n  //                                                                     >\n  //                                                                     </input>\n  //                                                                     <button>\n  //                                                                         delete\n  //                                                                     </button>\n  //                                                                 </div>\n  //                                                             )\n  //                                                         })}\n  //                                                     </div>\n  //                                                     <div style={{ height: '20px' }}>\n  //                                                     </div>\n  //                                                 </div>\n  //                                             )\n  //                                         }) : \"\"}\n  //                                         {/* {arrayFloor.map((set) => {\n  //                                         return (\n  //                                             <Card className={classes.Cards} variant=\"outlined\">\n  //                                                 <h5 className={classes.heder}>{set.FloorName}</h5>\n  //                                                 <Table>\n  //                                                     <TableHead >\n  //                                                         <h5 className={classes.heder}>Floor{set.FloorNumber}</h5>\n  //                                                         <TableRow>\n  //                                                             <TableCell>Rooms</TableCell>\n  //                                                             <TableCell align=\"center\">Edit Name Rooms</TableCell>\n  //                                                             <TableCell>Delete</TableCell>\n  //                                                         </TableRow>\n  //                                                     </TableHead> */}\n  //                                         {/* {set.room.map((r) => {\n  //                                                         return (\n  //                                                             <TableBody>\n  //                                                                 <TableRow >\n  //                                                                     <TableCell align=\"left\">{r.roomNumber}</TableCell>\n  //                                                                     <TableCell align=\"center\">\n  //                                                                         <TextField\n  //                                                                             size=\"small\"\n  //                                                                             variant=\"outlined\"\n  //                                                                         />\n  //                                                                     </TableCell>\n  //                                                                     <TableCell align=\"left\">\n  //                                                                         <Button>Delete </Button>\n  //                                                                     </TableCell>\n  //                                                                 </TableRow>\n  //                                                             </TableBody>\n  //                                                         )\n  //                                                     })} */}\n  //                                         {/* </Table>\n  //                                             </Card>\n  //                                         )\n  //                                     })} */}\n  //                                     </div>\n  //                                 </TableBody>\n  //                             </Table>\n  //                         </Card>\n  //                     </div>\n  //                     <div>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </ScrollView>\n  //         {/* <Link to=\"/initial\">\n  //             <Button\n  //                 onClick={addFloorandRoom}\n  //                 className={classes.buttonsubmit}\n  //                 variant=\"contained\" color=\"primary\" disableElevation\n  //                 style={{ backgroundColor: '#485D84' }} >\n  //                 Save\n  //             </Button>\n  //         </Link> */}\n  //         {/* <Link to={`/st_initialize/${id}`}> */}\n  //         <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n  //             <Button onClick={addFloorandRoom}\n  //                 style={{\n  //                     backgroundColor: \"#485D84\", width: 406,\n  //                     height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1,\n  //                     position: 'absolute', left: 540, top: 40\n  //                 }}>\n  //                 SAVE\n  //             </Button>\n  //             <div style={{\n  //                 backgroundColor: '#385CA8', opacity: 0.5\n  //                 , width: \"100%\", height: 200, position: 'relative'\n  //             }}>\n  //             </div>\n  //         </div>\n  //         {/* </Link> */}\n  //     </div>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ScrollView, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpened ? classes.scrollspace36 : classes.scrollspace,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.frame,\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Datetoday, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title2,\n              children: \"Verificated Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.segwrap,\n              style: {\n                position: 'absolute',\n                top: 101\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: currentSelect == 0 ? classes.segmentbtnBlue : classes.segmentbtnWhite,\n                onClick: () => setCurrentSelect(0),\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: classes.makeCenter,\n                  children: \"Electricity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: currentSelect == 1 ? classes.segmentbtnBlue : classes.segmentbtnWhite,\n                onClick: () => setCurrentSelect(1),\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: classes.makeCenter,\n                  children: \"Water\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title2bl,\n              children: allData.length > 0 ? allData[0].buildingName : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: allData.length > 0 && allData[0].floors.map((floor, index) => {\n                return /*#__PURE__*/_jsxDEV(Paper, {\n                  className: classes.papercard,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.headfloor,\n                    children: [\"Floor \", floor.floorName, /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        position: 'absolute',\n                        paddingTop: '6px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Room\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        style: {\n                          marginRight: '163px'\n                        },\n                        children: \"Bill Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Previos Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Previous Reading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Current Reading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Usage\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    style: {\n                      backgroundColor: \"#AAAAAA\",\n                      marginTop: \"50px\",\n                      height: 0.5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 49\n                  }, this), floor.rooms.map((room, i) => {\n                    return /*#__PURE__*/_jsxDEV(Paper, {\n                      className: classes.paperrow,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 45\n                        },\n                        children: room.roomName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 196\n                        },\n                        children: [moment(room.startTime).format(\"DD/MM/YYYY\"), \"-\", moment(room.endTime).format(\"DD/MM/YYYY\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 422\n                        },\n                        children: moment(room.previousDate).format(\"DD/MM/YYYY\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          right: 441\n                        },\n                        children: currentSelect == 0 ? room.electricityPreviousReading : room.waterPreviousReading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.inputbox,\n                        style: {\n                          right: 154\n                        },\n                        children: currentSelect == 0 ? room.electricityCurrentReading : room.waterCurrentReading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          right: 74\n                        },\n                        children: currentSelect == 0 ? room.electricityUsage : room.waterUsage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 57\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: 200,\n        top: 655\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: sureVeuify,\n        style: {\n          backgroundColor: \"#485D84\",\n          width: 406,\n          height: 42.87,\n          color: \"#FFFFFF\",\n          fontSize: 21,\n          zIndex: 1,\n          position: 'absolute',\n          left: 540,\n          top: 40\n        },\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#385CA8',\n          opacity: 0.5,\n          width: \"100%\",\n          height: 200,\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CreateRoom, \"fOfC9wRzKa+jobaMQe9nzLt+Sjg=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = CreateRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/CreateRoom.js"],"names":["React","useEffect","useState","makeStyles","Card","Button","TableHead","TableRow","TableBody","TableCell","Table","TextField","axios","Alert","ScrollView","BrowserRouter","Rounter","Route","Link","NavLink","Switch","Paper","useParams","useStyles","theme","root","minWidth","heder","width","padding","spacing","marginTop","margin","Cards","bullet","display","transform","title","fontSize","pos","marginBottom","Btn","marginLeft","text","paper","paddingBottom","list","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","left","right","buttonsubmit","height","inputbox","CreateRoom","props","classes","bull","allroom","setAllroom","inputRoomToAdd","setInputRoomToAdd","arrayFloor","setArrayFloor","getRoomName","setRoomName","id","buildingName","setBuildName","console","log","then","response","data","catch","error","allFloor","api","create","baseURL","addFloorandRoom","res","post","alert","window","location","href","handlerClick","a","roomObject","i","length","j","parseInt","formattedNumber","slice","roomNumber","String","Rooms","push","isOpened","scrollspace36","scrollspace","frame","title2","segwrap","currentSelect","segmentbtnBlue","segmentbtnWhite","setCurrentSelect","makeCenter","title2bl","allData","floors","map","floor","index","papercard","headfloor","floorName","paddingTop","floortext","marginRight","rooms","room","paperrow","newdetext","roomName","moment","startTime","format","endTime","previousDate","electricityPreviousReading","waterPreviousReading","electricityCurrentReading","waterCurrentReading","electricityUsage","waterUsage","sureVeuify","color","zIndex","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Alert, ScrollView } from 'react-native';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { useParams } from 'react-router';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n\n    heder: {\n        width: '100%',\n        padding: theme.spacing(1),\n        marginTop: '-2%',\n    },\n\n    Card: {\n        width: '80%',\n        padding: theme.spacing(3),\n        margin: 'auto',\n    },\n\n    Cards: {\n        width: '100%',\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    title: {\n        fontSize: 14,\n    },\n\n    pos: {\n        marginBottom: 12,\n    },\n\n    Btn: {\n        marginLeft: \"92%\",\n        marginTop: \"-6%\",\n    },\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 80,\n    },\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: '100%',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        width: \"30%\",\n        top: 10,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n    buttonsubmit: {\n        width: \"407px\",\n        height: \"42.8px\",\n        position: \"absolute\",\n        top: 620,\n        left: \"35%\"\n    },\n\n    inputbox : {\n        width: 128,\n        height: 39\n    }\n\n\n}));\n\n\n\nexport default function CreateRoom(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [allroom, setAllroom] = useState([]);\n    const [inputRoomToAdd, setInputRoomToAdd] = useState(null)\n    const [arrayFloor, setArrayFloor] = useState(2)\n\n    const [getRoomName, setRoomName] = useState()\n    const { id } = useParams()\n\n    const [buildingName, setBuildName] = useState([])\n\n    useEffect(async () => {\n        console.log(id + \"in Use Eff first row\")\n        console.log()\n        await axios(`/building/building/id/${id}`)\n            .then(response => {\n                console.log(response.data, \"in response\")\n                setBuildName(response.data[0].buildingName)\n\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n\n\n    }, []);\n\n    useEffect(() => {\n        setArrayFloor(props.allFloor)\n        // axios('/building/rooms/1')\n        //     .then(response => {\n        //         // console.log(\"hi\" + response.data)\n        //         setAllroom(response.data);\n        //     })\n        //     .catch(error => {\n        //         console.log('Error getting fake data: ' + error);\n        //     })\n        // console.log(\"In useeffect\")\n    },[]);\n\n    // building/floor-room/building/5\n\n\n    const api = axios.create({\n        baseURL: `/building/floor-room/building/${id}`\n    })\n\n    const addFloorandRoom = async () => {\n        let res = await api.post('/',\n            arrayFloor\n        ).then(response => {\n            alert(\"Add Room successfully\")\n            window.location.href = `/st_initialize/${id}`;\n        })\n            .catch(error => {\n                alert(\"Fail\")\n                console.log('Error getting fake data: ' + error);\n            })\n\n    }\n\n    function handlerClick() {\n        const a = 100\n        // inputRoomToAdd\n        // allroom\n        const roomObject = {\n            \"room_number\": \"101\"\n        }\n        // console.log(allroom)\n\n        for (var i = 0; i < arrayFloor.length; i++) {\n\n            for (var j = 0; j < parseInt(inputRoomToAdd); j++) {\n                const formattedNumber = (\"0\" + (j + 1)).slice(-2)\n                const roomNumber = String(i + 1) + formattedNumber\n                const roomObject = {\n                    \"room_number\": roomNumber\n                }\n                arrayFloor[i].Rooms.push(roomObject)\n                console.log(roomNumber)\n            }\n        }\n\n        setArrayFloor(arrayFloor)\n        console.log(arrayFloor)\n\n        console.log(\"end\")\n\n    }\n\n    // return (\n    //     <div style={{ width: '100%' }}>\n    //         <ScrollView>\n\n    //             <div className=\"container \">\n    //                 <div style={{ width: '100%', height: '650px' }}>\n    //                     <div style={{ width: '100%', height: '550px' }}>\n\n    //                         {/* <Link to='/st_initialize'> */}\n    //                         {/* <button onClick={() => console.log(arrayFloor)}>\n\n    //                         </button> */}\n    //                         {/* </Link> */}\n\n\n    //                         <Card className={classes.Card} variant=\"outlined\">\n    //                             <Table aria-label=\"caption table\">\n    //                                 <TableHead >\n    //                                     <TableRow>\n    //                                         <TableCell className={classes.heder}>\n    //                                             <div style={{ display: 'flex' }}>\n    //                                                 <h4>Rooms</h4>\n    //                                                 <input\n    //                                                     placeholder=\"No of Room\"\n    //                                                     type=\"number\"\n    //                                                     // value={inputfloorToAdd}\n    //                                                     onChange={(e) => setInputRoomToAdd(parseInt(e.currentTarget.value))}\n    //                                                 />\n\n    //                                                 <Button className={classes.buttongenerate}\n    //                                                     size=\"small\" variant=\"contained\" color=\"primary\" disableElevation\n    //                                                     style={{ backgroundColor: '#485D84' }}\n    //                                                     onClick={() =>\n    //                                                         handlerClick()\n    //                                                     }\n    //                                                 >Generate Floor</Button>\n    //                                             </div>\n\n    //                                         </TableCell>\n\n    //                                     </TableRow>\n    //                                 </TableHead>\n\n    //                                 <TableBody>\n\n    //                                     <div className=\"container\">\n    //                                         <h5 className={classes.heder}> {buildingName}</h5>\n\n    //                                         {arrayFloor != undefined && arrayFloor.length > 0 ? arrayFloor.map((set) => {\n    //                                             { console.log(set) }\n    //                                             return (\n\n    //                                                 <div>\n    //                                                     <div style={{ width: \"100%\", minHeight: \"200px\", border: \"1px solid #AAAAAA\", borderRadius: 5 }}>\n    //                                                         <div style={{ height: \"86.5px\", width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n    //                                                             <h4> Floor {set.FloorName} </h4>\n    //                                                         </div>\n    //                                                         {set.Rooms.map((r, index) => {\n\n    //                                                             return (\n    //                                                                 <div style={{ display: 'flex', height: 50, width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n    //                                                                     <div>\n    //                                                                         <h4>  {r.room_number}</h4>\n    //                                                                     </div>\n\n    //                                                                     <input\n    //                                                                         onChange={e => r.room_number = e.target.value}\n    //                                                                     >\n\n    //                                                                     </input>\n\n    //                                                                     <button>\n    //                                                                         delete\n    //                                                                     </button>\n    //                                                                 </div>\n\n\n    //                                                             )\n    //                                                         })}\n\n    //                                                     </div>\n    //                                                     <div style={{ height: '20px' }}>\n    //                                                     </div>\n\n\n\n    //                                                 </div>\n    //                                             )\n\n\n\n    //                                         }) : \"\"}\n    //                                         {/* {arrayFloor.map((set) => {\n    //                                         return (\n    //                                             <Card className={classes.Cards} variant=\"outlined\">\n    //                                                 <h5 className={classes.heder}>{set.FloorName}</h5>\n    //                                                 <Table>\n    //                                                     <TableHead >\n    //                                                         <h5 className={classes.heder}>Floor{set.FloorNumber}</h5>\n\n    //                                                         <TableRow>\n    //                                                             <TableCell>Rooms</TableCell>\n    //                                                             <TableCell align=\"center\">Edit Name Rooms</TableCell>\n    //                                                             <TableCell>Delete</TableCell>\n    //                                                         </TableRow>\n\n    //                                                     </TableHead> */}\n    //                                         {/* {set.room.map((r) => {\n    //                                                         return (\n    //                                                             <TableBody>\n    //                                                                 <TableRow >\n    //                                                                     <TableCell align=\"left\">{r.roomNumber}</TableCell>\n    //                                                                     <TableCell align=\"center\">\n    //                                                                         <TextField\n    //                                                                             size=\"small\"\n    //                                                                             variant=\"outlined\"\n    //                                                                         />\n    //                                                                     </TableCell>\n    //                                                                     <TableCell align=\"left\">\n    //                                                                         <Button>Delete </Button>\n    //                                                                     </TableCell>\n    //                                                                 </TableRow>\n    //                                                             </TableBody>\n    //                                                         )\n    //                                                     })} */}\n    //                                         {/* </Table>\n    //                                             </Card>\n    //                                         )\n    //                                     })} */}\n    //                                     </div>\n    //                                 </TableBody>\n    //                             </Table>\n    //                         </Card>\n\n    //                     </div>\n    //                     <div>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         </ScrollView>\n\n\n    //         {/* <Link to=\"/initial\">\n    //             <Button\n    //                 onClick={addFloorandRoom}\n    //                 className={classes.buttonsubmit}\n    //                 variant=\"contained\" color=\"primary\" disableElevation\n    //                 style={{ backgroundColor: '#485D84' }} >\n    //                 Save\n    //             </Button>\n    //         </Link> */}\n\n\n    //         {/* <Link to={`/st_initialize/${id}`}> */}\n    //         <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n    //             <Button onClick={addFloorandRoom}\n    //                 style={{\n    //                     backgroundColor: \"#485D84\", width: 406,\n    //                     height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1,\n    //                     position: 'absolute', left: 540, top: 40\n    //                 }}>\n    //                 SAVE\n    //             </Button>\n    //             <div style={{\n    //                 backgroundColor: '#385CA8', opacity: 0.5\n    //                 , width: \"100%\", height: 200, position: 'relative'\n    //             }}>\n\n    //             </div>\n    //         </div>\n    //         {/* </Link> */}\n\n    //     </div>\n\n\n\n    // );\n\n        return (\n            <div style={{ width: '100%' }}>\n                <ScrollView>\n                    <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n                        <div>\n                            <div className={classes.frame} style={{ position: 'relative' }}>\n                                <Datetoday />\n                                <div className={classes.title2} >\n                                    Verificated Expense\n                                </div>\n    \n                                <div className={classes.segwrap} style={{ position: 'absolute', top: 101 }}>\n                                    <div className={currentSelect == 0 ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n                                        onClick={() => setCurrentSelect(0)}>\n    \n                                        <text className={classes.makeCenter}>\n                                            Electricity\n                                        </text>\n    \n                                    </div>\n    \n                                    <div className={currentSelect == 1 ? classes.segmentbtnBlue : classes.segmentbtnWhite} onClick={() => setCurrentSelect(1)}>\n                                        <text className={classes.makeCenter}>\n                                            Water\n                                        </text>\n                                    </div>\n    \n                                </div>\n    \n                                <div className={classes.title2bl}>\n                                    {allData.length > 0 ? allData[0].buildingName : \"\"}\n                                </div>\n                            </div>\n    \n                            <div>\n                                <div>\n                                    {allData.length > 0 && allData[0].floors.map((floor, index) => {\n                                        return (\n                                            <Paper className={classes.papercard}>\n                                                <div className={classes.headfloor} >\n                                                    Floor {floor.floorName}\n                                                    <div style={{ position: 'absolute', paddingTop: '6px' }}>\n    \n                                                        <text className={classes.floortext}>\n                                                            Room\n                                                        </text>\n                                                        <text className={classes.floortext} style={{ marginRight: '163px' }}>\n                                                            Bill Period\n                                                        </text>\n                                                        <text className={classes.floortext}>\n                                                            Previos Date\n                                                        </text>\n                                                        <text className={classes.floortext}>\n                                                            Previous Reading\n                                                        </text>\n                                                        <text className={classes.floortext}>\n                                                            Current Reading\n                                                        </text>\n                                                        <text className={classes.floortext}>\n                                                            Usage\n                                                        </text>\n    \n                                                    </div>\n                                                </div>\n                                                <Divider style={{ backgroundColor: \"#AAAAAA\", marginTop: \"50px\", height: 0.5 }} />\n                                                {floor.rooms.map((room, i) => {\n                                                    return (\n                                                        <Paper className={classes.paperrow}>\n                                                            <div className={classes.newdetext} style={{ left: 45 }}>\n                                                                {/* {props.roomid} */}\n                                                                {room.roomName}\n                                                            </div>\n                                                            <div className={classes.newdetext} style={{ left: 196 }}>\n                                                                {/* 27/03/21-27/03/21 */}\n                                                                { moment(room.startTime).format(\"DD/MM/YYYY\")}-{moment(room.endTime).format(\"DD/MM/YYYY\")}\n    \n                                                                \n                                                            </div>\n                                                            <div className={classes.newdetext} style={{ left: 422 }}>\n                                                                {/* 27/04/2021 */}\n                                                                {/* {room.previousDate} */}\n                                                                {/* {moment(room.previousDate.replace(/[^a-zA-Z0-9]/g, \"\")).format(\"L\")} */}\n                                                                { moment(room.previousDate).format(\"DD/MM/YYYY\")}\n    \n                                                            </div>\n                                                            <div className={classes.newdetext} style={{ right: 441 }}>\n                                                                {currentSelect == 0 ? room.electricityPreviousReading : room.waterPreviousReading}\n                                                            </div>\n                                                            <div className={classes.inputbox} style={{ right: 154 }}>\n                                                                {currentSelect == 0 ? room.electricityCurrentReading : room.waterCurrentReading}\n                                                            </div>\n                                                            <div className={classes.newdetext} style={{ right: 74 }}>\n                                                                {currentSelect == 0 ? room.electricityUsage : room.waterUsage}\n                                                            </div>\n    \n                                                        </Paper>\n                                                    )\n                                                })}\n                                                {/* <Roomcard /> */}\n    \n                                            </Paper>\n                                        )\n                                    })\n                                    }\n    \n                                </div>\n                            </div>\n                        </div>\n                        <div style={{height: 100}}/>\n                    </div >\n                </ScrollView >\n    \n                <div style={{ position: 'absolute', width: '100%', height: 200, top: 655 }}>\n                    <Button\n                        onClick={sureVeuify}\n                        style={{\n                            backgroundColor: \"#485D84\", width: 406,\n                            height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1,\n                            position: 'absolute', left: 540, top: 40\n                        }}>\n                        SUBMIT\n                    </Button>\n                    <div style={{\n                        backgroundColor: '#385CA8', opacity: 0.5\n                        , width: \"100%\", height: 200, position: 'relative'\n                    }}>\n    \n                    </div>\n                </div>\n            </div >\n    \n    \n        )\n    \n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}