{"ast":null,"code":"// // import React from 'react'\n// // import Floorcard from './Expencompo/Floorcard'\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import Datetoday from '../../Components/AllComponent/Datetoday.js'\n// // import { ScrollView } from 'react-native';\n// // import { useState } from 'react';\n// // import Navbar2 from '../../Components/AllComponent/Navbar2';\n// // const useStyles = makeStyles((theme) => ({\n// //     frame: {\n// //         width: '1163px',\n// //         height: '232px',\n// //         backgroundColor: 'red',\n// //     },\n// //     scrollspace: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 110,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     scrollspace36: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 36,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     footerbtn: {\n// //     }\n// // }));\n// // export default function Expensepage({ isOpened }) {\n// //     const classes = useStyles();\n// //     return (\n// //         <div style={{width: '100%'}}>\n// //             <ScrollView>\n// //                 <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n// //                     <div>\n// //                         <div className={classes.frame}>\n// //                             <Datetoday />\n// //                         </div>\n// //                         <div>\n// //                             <Floorcard />\n// //                         </div>\n// //                     </div>\n// //                 </div>\n// //             </ScrollView>\n// //             {/* <div style={{width: '100%', backgroundColor: 'red', height: '108px'}}>\n// //                 Hivgbhjkhfjjkfkjf\n// //             </div> */}\n// //         </div>\n// //     )\n// // }\n// import { ScrollView } from 'react-native';\n// import React, { useEffect, useState } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Card from '@material-ui/core/Card';\n// import Tab from 'react-bootstrap/Tab'\n// import Nav from 'react-bootstrap/Nav'\n// import axios from \"axios\";\n// import moment from 'moment';\n// import { Button } from '@material-ui/core';\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     // display: 'flex',\n//     // marginTop: '-6%'\n//   },\n//   Cards: {\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     // padding: theme.spacing(2),\n//     // marginTop: \"-7%\",\n//     // margin: 'auto',\n//     // height: \"120%\"\n//   },\n//   heder: {\n//     // width: '90%',\n//     // padding: theme.spacing(2),\n//     // margin: '1%',\n//   },\n//   container: {\n//     // maxHeight: 440,\n//     // width: '100%'\n//   },\n//   Gridmove: {\n//     // marginLeft: 80\n//   },\n//   toolbar: {\n//     // display: 'flex',\n//     // alignItems: 'center',\n//     // justifyContent: 'flex-end',\n//     // padding: theme.spacing(0, 15),\n//     // necessary for content to be below app bar\n//     // ...theme.mixins.toolbar,\n//   },\n//   // content: {\n//   //   flexGrow: 1,\n//   //   padding: theme.spacing(1),\n//   // },\n//   Searchstyle: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 40,\n//     marginTop: -24,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//   },\n//   // Field: {\n//   //   marginTop: \"2%\"\n//   // },\n//   // Heading: {\n//   //   marginTop: \"3%\"\n//   // },\n//   // Btn: {\n//   //   marginLeft: \"60%\",\n//   //   marginTop: \"-8%\"\n//   // },\n//   fabButton: {\n//     width: \"60%\",\n//     //left: 120,\n//     top: 40,\n//     right: 50,\n//     margin: '0 auto',\n//   },\n//   Tabmove: {\n//     marginLeft: \"1%\"\n//   },\n//   Spacing: {\n//     // margin: '1%'\n//   },\n//   scrollspace: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 110,\n//     transition: 'all 0.5s ease'\n//   },\n//   scrollspace36: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 36,\n//     transition: 'all 0.5s ease'\n//   },\n//   segmentbtnBlue: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#8396B9\",\n//     color: \"#FFFFFF\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     fontWeight: 'bold',\n//     position: 'relative'\n//   },\n//   segmentbtnWhite: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#FFFFFF\",\n//     color: \"#4A4A4A\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     position: 'relative'\n//   },\n//   segwrap: {\n//     // border: '1px solid #AAAAAA'\n//     flex: 'wrap'\n//     , display: 'flex'\n//     , width: 'fit-content',\n//     backgroundColor: '#FFFFFF',\n//     borderRadius: 5\n//   },\n//   makeCenterBlue: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#FFFFFF'\n//   },\n//   makeCenterWhite: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#4A4A4A'\n//   },\n//   title2: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 60\n//   }\n//   , title2bl: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 184\n//   },\n//      //floor\n//      root: {\n//       flexGrow: 1,\n//       margin: theme.spacing(1),\n//       marginRight: 40\n//   },\n//   papercard: {\n//       width: '1163px',\n//       boxShadow: \"0px 0px 0px #E8E8E8\",\n//       minHeight: '233px',\n//       //   margin: 'auto',\n//       marginLeft: 0,\n//       marginBottom: \"16px\",\n//       //   backgroundColor:'green',\n//       position: 'relative',\n//       borderRadius: 5,\n//       border: '0.75px solid #AAAAAA'\n//   },\n//   floortext: {\n//       display: 'inline',\n//       marginRight: '113px',\n//       color: '#4A4A4A',\n//       fontSize: '13px',\n//       fontWeight: 'bold',\n//       position: 'relative',\n//   },\n//   headfloor: {\n//       // display: 'block',\n//       color: '#4A4A4A',\n//       fontWeight: 'bold',\n//       fontSize: '16px',\n//       posiotion: 'absolute',\n//       marginLeft: '45px',\n//       paddingTop: '14px'\n//   },\n//   minitext: {\n//       fontSize: '11.3px',\n//       color: '#AAAAAA',\n//       position: 'absolute',\n//       fontWeight: '300',\n//       marginLeft: '643.5px',\n//       top: 0,\n//       marginTop: '25px'\n//   },\n// }));\n// export default function Expensepage({ isOpened }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   const [currenDate, setCurrentDate] = useState(\"\")\n//   const [previousDate, setPreviousDate] = useState(\"2021-07-08\")\n//   const [elecPrevious, setElecPrevious] = useState(\"\")\n//   const [elecCurrent, setElecCurrent] = useState()\n//   const [elecUsage, setElecUsage] = useState(\"\")\n//   const [waterPrevious, setWaterPrevious] = useState(\"\")\n//   const [waterCurrent, setWaterCurrent] = useState(\"\")\n//   const [waterUsage, setWaterUsage] = useState(\"\")\n//   const [startbill, setStartbill] = useState(\"\")\n//   const [endbill, setEndbill] = useState(\"\")\n//   const [roomId, setRoomId] = useState([])\n//   const [expense, setExpense] = useState([])\n//   /*function handlerChangeJSOn() {\n//     xpense[0].buildingName = \"Laila\"\n//     console.log(xpense)\n//   }*/\n//   /* function handlerChangeJSOn() {\n//      xpense[0].buildingName = \"Laila\"\n//      setXpense(xpense[0].floors[0].rooms)\n//    }*/\n//   function handlerChangeJSOn() {\n//     /*xpense[0].buildingName = \"Laila*/\n//     let rooms = []\n//     setKeepstate(xpense[0].floors[0].rooms)\n//     console.log(keepstate)\n//     for (const i in keepstate) {\n//       console.log(i)\n//       console.log(\"hi\")\n//     }\n//   }\n//   const [keepstate, setKeepstate] = useState([])\n//   const [allroom, setAllroom] = useState()\n//   const Expensesave = event => {\n//     event.preventDefault();\n//     const expenseLists = [];\n//     for (let floor in xpense[0].floors) {\n//       for (let room in xpense[0].floors[floor].rooms) {\n//         console.log(room)\n//         console.log('fkdsakjadshgdsahgjadsjhg')\n//         var a = xpense[0].floors[floor].rooms[room];\n//         // a.CurrentDate = new Date().toISOString().substring(0, 10);\n//         //a.CurrentDate = new Date().toISOString()\n//         expenseLists.push(xpense[0].floors[floor].rooms[room]);\n//       }\n//       // console.log(i)\n//       // console.log(\"hi\")\n//     }\n//     console.log('aaaa', expenseLists.length)\n//     console.log(expenseLists);\n//     setKeepstate(expenseLists);\n//     //console.log(keepstate)\n//     //console.log(JSON.stringify(keepstate))\n//     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n//       //allroom\n//       keepstate\n//     ).then((response) => {\n//       console.log('done')\n//       console.log(response);\n//       console.log(keepstate)\n//     })\n//       .catch(error => {\n//         console.log(error.response)\n//       })\n//   };\n//   //get\n//   const [xpense, setXpense] = useState([])\n//   const [isTrue, setIsTrue] = useState(false)\n//   React.useEffect(() => {\n//     const fetchData = () => {\n//       axios.get('/rentingtransaction/electricity-water-expenses/4')\n//         .then(r => {\n//           setXpense(r.data)\n//         })\n//     };\n//     fetchData()\n//   }, [])\n//   console.log(xpense)\n//   console.log(xpense)\n//   return (\n//     // <div className=\"container\">\n//     <div style={{ width: '100%' }}>\n//       <ScrollView>\n//         <div className={isOpened ? classes.scrollspace36 : classes.scrollspace} >\n//           {/* <div style={{width: 1163, position: 'relative', margin:\"auto\"}}> */}\n//           <Tab.Container defaultActiveKey=\"home\">\n//             <div >\n//               {/* <main > */}\n//               {/* <div className={classes.toolbar} /> */}\n//               <div class=\"container d-flex-end\">\n//                 <div class=\"container d-flex-start\" >\n//                   <h4 className={classes.title2}>Expense</h4>\n//                 </div>\n//                 <Table>\n//                   <Nav variant=\"pills\" className={classes.segwrap}>\n//                     <Nav.Item\n//                     // className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#8396B9' } : { backgroundColor: '#FFFFFF' }}\n//                         onClick={() => setIsTrue(true)} eventKey=\"home\">\n//                         <div className={isTrue ? classes.makeCenterBlue : classes.makeCenterWhite}>\n//                           Electricity\n//                         </div>\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                     <Nav.Item\n//                     // className={true ? classes.segmentbtnWhite : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnWhite : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#FFFFFF' } : { backgroundColor: '#8396B9' }}\n//                         onClick={() => setIsTrue(false)} eventKey=\"link-1\">\n//                         <div className={isTrue ? classes.makeCenterWhite : classes.makeCenterBlue} >\n//                           Water\n//                         </div>\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                   </Nav>\n//                   <TableBody>\n//                     <br />\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"home\">\n//                         <input\n//                           type=\"date\" />\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody style={{ width: 2500 }}>\n//                                   {/* <div className=\"container \"> */}\n//                                   {/*<button onClick={()=> xpense}> Test </button>*/}\n//                                   <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                   {build.floors.map((f) => {\n//                                     return (\n//                                       <Card style={{\n//                                         minWidth: '1163px',\n//                                         maxWidth: '1163px',\n//                                       }} variant=\"outlined\">\n//                                         <Table style={{ width: '100%' }}>\n//                                           {/* <TableHead >\n//                                             <h5 className={classes.heder}>Floor{f.floorName}</h5>\n//                                             <TableRow > */}\n//                                             <div className={classes.headfloor} >\n//                                                 Floor \n//                                                 <div style={{ position: 'absolute', paddingTop: '6px' }}>\n//                                                     <text className={classes.floortext}>\n//                                                         Room\n//                                                     </text>\n//                                                     <text className={classes.floortext} style={{ marginRight: '163px' }}>\n//                                                         Bill Period\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previos Date\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previous Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Current Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Usage\n//                                                     </text>\n//                                                 </div>\n//                                             </div>\n//                                             {/* </TableRow>\n//                                           </TableHead> */}\n//                                           {f.rooms.map((r) => {\n//                                             return (\n//                                               <TableBody>\n//                                                 <TableRow>\n//                                                   {/*<TableCell align=\"left\">{r.roomId}</TableCell> */}\n//                                                   <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     { //moment /*(r.billPeriod).format(\"L\")*/\n//                                                       r.billPeriod\n//                                                     }\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\"\n//                                                   /*onChange={(event) =>{\n//                                                         setPreviousDate(event.target.value);\n//                                                         }}*/\n//                                                   >\n//                                                     {moment(r.previousDate).format(\"L\")}\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     {r.electricityPreviousReading}\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     <input\n//                                                       id={r.roomId}\n//                                                       size=\"small\"\n//                                                       type=\"text\"\n//                                                       onChange={(event) => {\n//                                                         /*let newXpense = xpense\n//                                                         const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                         //newXpense[objIndex]= event.target.value \n//                                                         //setXpense(newXpense); \n//                                                         r.electricityCurrentReading = event.target.value\n//                                                         //setElecCurrent(event.target.value); \n//                                                       }}\n//                                                     />\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                   </TableCell>\n//                                                 </TableRow>\n//                                               </TableBody>\n//                                             )\n//                                           })}\n//                                         </Table>\n//                                       </Card>\n//                                     )\n//                                   })}\n//                                   {/* </div> */}\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Button  \n//         style={{position:'absolute'}}\n//             type=\"submit\"   \n//             id=\"1\"          \n//             onClick={Expensesave}>\n//           <Savebtn save=\"save\"/> \n//         </Button> */}\n//                         </div>\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"link-1\">\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody>\n//                                   <div className=\"container \">\n//                                     {/* <button onClick={()=>handlerChangeJSOn()}> BTN  </button>*/}\n//                                     <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                     {build.floors.map((f) => {\n//                                       return (\n//                                         <Card className={classes.Spacing} variant=\"outlined\">\n//                                           <Table aria-label=\"caption table\">\n//                                             <TableHead >\n//                                               <h5 className={classes.heder}>Floor {f.floorName}</h5>\n//                                               <TableRow>\n//                                                 <TableCell>Room</TableCell>\n//                                                 <TableCell>Bill Period</TableCell>\n//                                                 <TableCell>Previous Date</TableCell>\n//                                                 <TableCell>Previous Reaading</TableCell>\n//                                                 <TableCell>Current Reading</TableCell>\n//                                                 <TableCell >Usage</TableCell>\n//                                               </TableRow>\n//                                             </TableHead>\n//                                             {f.rooms.map((r) => {\n//                                               return (\n//                                                 <TableBody>\n//                                                   <TableRow>\n//                                                     <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                     <TableCell align=\"left\">{r.billPeriod}</TableCell>\n//                                                     <TableCell align=\"left\">{r.previousDate}</TableCell>\n//                                                     <TableCell align=\"left\">\n//                                                     </TableCell>\n//                                                     <TableCell>\n//                                                       <input\n//                                                         id={r.roomId}\n//                                                         size=\"small\"\n//                                                         type=\"text\"\n//                                                         onChange={(event) => {\n//                                                           /*let newXpense = xpense\n//                                                           const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                           //newXpense[objIndex]= event.target.value \n//                                                           //setXpense(newXpense); \n//                                                           r['WaterCurrentReading'] = event.target.value\n//                                                           //setElecCurrent(event.target.value); \n//                                                         }}\n//                                                       />\n//                                                     </TableCell>\n//                                                     <TableCell align=\"left\">\n//                                                     </TableCell>\n//                                                   </TableRow>\n//                                                 </TableBody>\n//                                               )\n//                                             })}\n//                                           </Table>\n//                                         </Card>\n//                                       )\n//                                     })}\n//                                   </div>\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Savebtn  \n//                           type=\"submit\"  \n//                           id=\"2\"      \n//                            onClick={Expensesave} \n//                               save=\"save\"\n//        /> */}\n//                         </div>\n//                         { /*Water*/}\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                   </TableBody>\n//                 </Table>\n//               </div>\n//               {/* </main> */}\n//             </div>\n//           </Tab.Container>\n//         </div>\n//       </ScrollView>\n//       <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n//         <Button\n//           type=\"submit\"\n//           id=\"1\"\n//           onClick={Expensesave}\n//           style={{ backgroundColor: \"#485D84\", width: 406, height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1, position: 'absolute', left: 540, top: 40 }}>\n//           SAVE\n//         </Button>\n//         <div style={{\n//           backgroundColor: '#385CA8', opacity: 0.5\n//           , width: \"100%\", height: 200, position: 'relative'\n//         }}>\n//         </div>\n//       </div>\n//     </div>\n//     // </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/Expens/Expensepage.js"],"names":[],"mappingssourcesContent":["// // import React from 'react'\n// // import Floorcard from './Expencompo/Floorcard'\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import Datetoday from '../../Components/AllComponent/Datetoday.js'\n// // import { ScrollView } from 'react-native';\n// // import { useState } from 'react';\n// // import Navbar2 from '../../Components/AllComponent/Navbar2';\n\n// // const useStyles = makeStyles((theme) => ({\n// //     frame: {\n// //         width: '1163px',\n// //         height: '232px',\n// //         backgroundColor: 'red',\n// //     },\n// //     scrollspace: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 110,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     scrollspace36: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 36,\n// //         transition: 'all 0.5s ease'\n\n// //     },\n// //     footerbtn: {\n\n// //     }\n// // }));\n\n// // export default function Expensepage({ isOpened }) {\n// //     const classes = useStyles();\n\n\n\n// //     return (\n// //         <div style={{width: '100%'}}>\n// //             <ScrollView>\n// //                 <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n// //                     <div>\n// //                         <div className={classes.frame}>\n// //                             <Datetoday />\n// //                         </div>\n// //                         <div>\n// //                             <Floorcard />\n// //                         </div>\n// //                     </div>\n// //                 </div>\n// //             </ScrollView>\n// //             {/* <div style={{width: '100%', backgroundColor: 'red', height: '108px'}}>\n// //                 Hivgbhjkhfjjkfkjf\n// //             </div> */}\n// //         </div>\n\n\n// //     )\n// // }\n\n\n\n// import { ScrollView } from 'react-native';\n// import React, { useEffect, useState } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Card from '@material-ui/core/Card';\n// import Tab from 'react-bootstrap/Tab'\n// import Nav from 'react-bootstrap/Nav'\n// import axios from \"axios\";\n// import moment from 'moment';\n\n// import { Button } from '@material-ui/core';\n\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     // display: 'flex',\n//     // marginTop: '-6%'\n//   },\n\n//   Cards: {\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     // padding: theme.spacing(2),\n//     // marginTop: \"-7%\",\n//     // margin: 'auto',\n//     // height: \"120%\"\n//   },\n\n//   heder: {\n//     // width: '90%',\n//     // padding: theme.spacing(2),\n//     // margin: '1%',\n\n//   },\n\n//   container: {\n//     // maxHeight: 440,\n//     // width: '100%'\n//   },\n\n//   Gridmove: {\n//     // marginLeft: 80\n//   },\n\n//   toolbar: {\n//     // display: 'flex',\n//     // alignItems: 'center',\n//     // justifyContent: 'flex-end',\n//     // padding: theme.spacing(0, 15),\n//     // necessary for content to be below app bar\n//     // ...theme.mixins.toolbar,\n//   },\n//   // content: {\n//   //   flexGrow: 1,\n//   //   padding: theme.spacing(1),\n\n//   // },\n\n//   Searchstyle: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 40,\n//     marginTop: -24,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//   },\n\n//   // Field: {\n//   //   marginTop: \"2%\"\n//   // },\n\n//   // Heading: {\n//   //   marginTop: \"3%\"\n//   // },\n\n//   // Btn: {\n//   //   marginLeft: \"60%\",\n//   //   marginTop: \"-8%\"\n\n//   // },\n\n//   fabButton: {\n//     width: \"60%\",\n//     //left: 120,\n//     top: 40,\n//     right: 50,\n//     margin: '0 auto',\n//   },\n\n//   Tabmove: {\n//     marginLeft: \"1%\"\n//   },\n\n//   Spacing: {\n//     // margin: '1%'\n//   },\n\n//   scrollspace: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 110,\n//     transition: 'all 0.5s ease'\n//   },\n//   scrollspace36: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n\n//     margin: 'auto',\n//     paddingLeft: 36,\n//     transition: 'all 0.5s ease'\n\n//   },\n//   segmentbtnBlue: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#8396B9\",\n//     color: \"#FFFFFF\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     fontWeight: 'bold',\n//     position: 'relative'\n//   },\n//   segmentbtnWhite: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#FFFFFF\",\n//     color: \"#4A4A4A\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     position: 'relative'\n//   },\n//   segwrap: {\n//     // border: '1px solid #AAAAAA'\n//     flex: 'wrap'\n//     , display: 'flex'\n//     , width: 'fit-content',\n//     backgroundColor: '#FFFFFF',\n//     borderRadius: 5\n\n//   },\n\n//   makeCenterBlue: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#FFFFFF'\n\n\n//   },\n\n\n//   makeCenterWhite: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#4A4A4A'\n//   },\n//   title2: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 60\n\n//   }\n\n//   , title2bl: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 184\n//   },\n\n\n\n//      //floor\n\n//      root: {\n//       flexGrow: 1,\n//       margin: theme.spacing(1),\n//       marginRight: 40\n\n//   },\n//   papercard: {\n//       width: '1163px',\n//       boxShadow: \"0px 0px 0px #E8E8E8\",\n//       minHeight: '233px',\n//       //   margin: 'auto',\n//       marginLeft: 0,\n//       marginBottom: \"16px\",\n//       //   backgroundColor:'green',\n//       position: 'relative',\n//       borderRadius: 5,\n//       border: '0.75px solid #AAAAAA'\n\n//   },\n//   floortext: {\n//       display: 'inline',\n//       marginRight: '113px',\n//       color: '#4A4A4A',\n//       fontSize: '13px',\n//       fontWeight: 'bold',\n//       position: 'relative',\n\n//   },\n//   headfloor: {\n//       // display: 'block',\n//       color: '#4A4A4A',\n//       fontWeight: 'bold',\n//       fontSize: '16px',\n//       posiotion: 'absolute',\n//       marginLeft: '45px',\n//       paddingTop: '14px'\n//   },\n//   minitext: {\n//       fontSize: '11.3px',\n//       color: '#AAAAAA',\n//       position: 'absolute',\n//       fontWeight: '300',\n//       marginLeft: '643.5px',\n//       top: 0,\n//       marginTop: '25px'\n//   },\n\n// }));\n\n// export default function Expensepage({ isOpened }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n\n//   const [currenDate, setCurrentDate] = useState(\"\")\n//   const [previousDate, setPreviousDate] = useState(\"2021-07-08\")\n//   const [elecPrevious, setElecPrevious] = useState(\"\")\n//   const [elecCurrent, setElecCurrent] = useState()\n//   const [elecUsage, setElecUsage] = useState(\"\")\n//   const [waterPrevious, setWaterPrevious] = useState(\"\")\n//   const [waterCurrent, setWaterCurrent] = useState(\"\")\n//   const [waterUsage, setWaterUsage] = useState(\"\")\n//   const [startbill, setStartbill] = useState(\"\")\n//   const [endbill, setEndbill] = useState(\"\")\n//   const [roomId, setRoomId] = useState([])\n//   const [expense, setExpense] = useState([])\n\n//   /*function handlerChangeJSOn() {\n//     xpense[0].buildingName = \"Laila\"\n//     console.log(xpense)\n//   }*/\n\n//   /* function handlerChangeJSOn() {\n//      xpense[0].buildingName = \"Laila\"\n//      setXpense(xpense[0].floors[0].rooms)\n//    }*/\n\n//   function handlerChangeJSOn() {\n//     /*xpense[0].buildingName = \"Laila*/\n//     let rooms = []\n\n//     setKeepstate(xpense[0].floors[0].rooms)\n//     console.log(keepstate)\n\n//     for (const i in keepstate) {\n//       console.log(i)\n//       console.log(\"hi\")\n//     }\n//   }\n\n\n//   const [keepstate, setKeepstate] = useState([])\n//   const [allroom, setAllroom] = useState()\n\n//   const Expensesave = event => {\n//     event.preventDefault();\n//     const expenseLists = [];\n\n//     for (let floor in xpense[0].floors) {\n//       for (let room in xpense[0].floors[floor].rooms) {\n//         console.log(room)\n//         console.log('fkdsakjadshgdsahgjadsjhg')\n//         var a = xpense[0].floors[floor].rooms[room];\n//         // a.CurrentDate = new Date().toISOString().substring(0, 10);\n//         //a.CurrentDate = new Date().toISOString()\n//         expenseLists.push(xpense[0].floors[floor].rooms[room]);\n//       }\n//       // console.log(i)\n//       // console.log(\"hi\")\n//     }\n\n//     console.log('aaaa', expenseLists.length)\n//     console.log(expenseLists);\n\n\n//     setKeepstate(expenseLists);\n//     //console.log(keepstate)\n//     //console.log(JSON.stringify(keepstate))\n//     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n//       //allroom\n//       keepstate\n\n\n//     ).then((response) => {\n//       console.log('done')\n//       console.log(response);\n//       console.log(keepstate)\n//     })\n//       .catch(error => {\n//         console.log(error.response)\n//       })\n\n//   };\n\n//   //get\n//   const [xpense, setXpense] = useState([])\n//   const [isTrue, setIsTrue] = useState(false)\n\n//   React.useEffect(() => {\n//     const fetchData = () => {\n//       axios.get('/rentingtransaction/electricity-water-expenses/4')\n//         .then(r => {\n//           setXpense(r.data)\n//         })\n//     };\n//     fetchData()\n//   }, [])\n//   console.log(xpense)\n\n//   console.log(xpense)\n\n//   return (\n//     // <div className=\"container\">\n//     <div style={{ width: '100%' }}>\n//       <ScrollView>\n//         <div className={isOpened ? classes.scrollspace36 : classes.scrollspace} >\n//           {/* <div style={{width: 1163, position: 'relative', margin:\"auto\"}}> */}\n\n//           <Tab.Container defaultActiveKey=\"home\">\n//             <div >\n//               {/* <main > */}\n//               {/* <div className={classes.toolbar} /> */}\n//               <div class=\"container d-flex-end\">\n//                 <div class=\"container d-flex-start\" >\n//                   <h4 className={classes.title2}>Expense</h4>\n//                 </div>\n//                 <Table>\n//                   <Nav variant=\"pills\" className={classes.segwrap}>\n//                     <Nav.Item\n//                     // className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#8396B9' } : { backgroundColor: '#FFFFFF' }}\n//                         onClick={() => setIsTrue(true)} eventKey=\"home\">\n\n//                         <div className={isTrue ? classes.makeCenterBlue : classes.makeCenterWhite}>\n//                           Electricity\n//                         </div>\n\n\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                     <Nav.Item\n//                     // className={true ? classes.segmentbtnWhite : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnWhite : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#FFFFFF' } : { backgroundColor: '#8396B9' }}\n//                         onClick={() => setIsTrue(false)} eventKey=\"link-1\">\n\n\n//                         <div className={isTrue ? classes.makeCenterWhite : classes.makeCenterBlue} >\n//                           Water\n//                         </div>\n\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                   </Nav>\n\n//                   <TableBody>\n//                     <br />\n\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"home\">\n\n//                         <input\n//                           type=\"date\" />\n\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody style={{ width: 2500 }}>\n//                                   {/* <div className=\"container \"> */}\n\n//                                   {/*<button onClick={()=> xpense}> Test </button>*/}\n//                                   <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                   {build.floors.map((f) => {\n//                                     return (\n//                                       <Card style={{\n//                                         minWidth: '1163px',\n//                                         maxWidth: '1163px',\n//                                       }} variant=\"outlined\">\n//                                         <Table style={{ width: '100%' }}>\n//                                           {/* <TableHead >\n//                                             <h5 className={classes.heder}>Floor{f.floorName}</h5>\n//                                             <TableRow > */}\n//                                             <div className={classes.headfloor} >\n//                                                 Floor \n//                                                 <div style={{ position: 'absolute', paddingTop: '6px' }}>\n\n//                                                     <text className={classes.floortext}>\n//                                                         Room\n//                                                     </text>\n//                                                     <text className={classes.floortext} style={{ marginRight: '163px' }}>\n//                                                         Bill Period\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previos Date\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previous Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Current Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Usage\n//                                                     </text>\n\n//                                                 </div>\n//                                             </div>\n//                                             {/* </TableRow>\n//                                           </TableHead> */}\n//                                           {f.rooms.map((r) => {\n//                                             return (\n//                                               <TableBody>\n//                                                 <TableRow>\n//                                                   {/*<TableCell align=\"left\">{r.roomId}</TableCell> */}\n//                                                   <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     { //moment /*(r.billPeriod).format(\"L\")*/\n//                                                       r.billPeriod\n//                                                     }\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\"\n//                                                   /*onChange={(event) =>{\n//                                                         setPreviousDate(event.target.value);\n//                                                         }}*/\n//                                                   >\n//                                                     {moment(r.previousDate).format(\"L\")}\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n//                                                     {r.electricityPreviousReading}\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n//                                                     <input\n//                                                       id={r.roomId}\n//                                                       size=\"small\"\n//                                                       type=\"text\"\n//                                                       onChange={(event) => {\n\n//                                                         /*let newXpense = xpense\n//                                                         const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                         //newXpense[objIndex]= event.target.value \n//                                                         //setXpense(newXpense); \n//                                                         r.electricityCurrentReading = event.target.value\n//                                                         //setElecCurrent(event.target.value); \n\n//                                                       }}\n//                                                     />\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n\n//                                                   </TableCell>\n\n//                                                 </TableRow>\n//                                               </TableBody>\n//                                             )\n//                                           })}\n//                                         </Table>\n//                                       </Card>\n//                                     )\n//                                   })}\n//                                   {/* </div> */}\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Button  \n//         style={{position:'absolute'}}\n//             type=\"submit\"   \n//             id=\"1\"          \n//             onClick={Expensesave}>\n//           <Savebtn save=\"save\"/> \n//         </Button> */}\n//                         </div>\n//                       </Tab.Pane>\n//                     </Tab.Content>\n\n\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"link-1\">\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody>\n//                                   <div className=\"container \">\n//                                     {/* <button onClick={()=>handlerChangeJSOn()}> BTN  </button>*/}\n\n//                                     <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                     {build.floors.map((f) => {\n//                                       return (\n//                                         <Card className={classes.Spacing} variant=\"outlined\">\n//                                           <Table aria-label=\"caption table\">\n//                                             <TableHead >\n//                                               <h5 className={classes.heder}>Floor {f.floorName}</h5>\n//                                               <TableRow>\n//                                                 <TableCell>Room</TableCell>\n//                                                 <TableCell>Bill Period</TableCell>\n//                                                 <TableCell>Previous Date</TableCell>\n//                                                 <TableCell>Previous Reaading</TableCell>\n//                                                 <TableCell>Current Reading</TableCell>\n//                                                 <TableCell >Usage</TableCell>\n//                                               </TableRow>\n//                                             </TableHead>\n//                                             {f.rooms.map((r) => {\n//                                               return (\n//                                                 <TableBody>\n//                                                   <TableRow>\n//                                                     <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                     <TableCell align=\"left\">{r.billPeriod}</TableCell>\n//                                                     <TableCell align=\"left\">{r.previousDate}</TableCell>\n//                                                     <TableCell align=\"left\">\n\n//                                                     </TableCell>\n\n//                                                     <TableCell>\n//                                                       <input\n//                                                         id={r.roomId}\n//                                                         size=\"small\"\n//                                                         type=\"text\"\n//                                                         onChange={(event) => {\n\n\n//                                                           /*let newXpense = xpense\n//                                                           const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                           //newXpense[objIndex]= event.target.value \n//                                                           //setXpense(newXpense); \n//                                                           r['WaterCurrentReading'] = event.target.value\n//                                                           //setElecCurrent(event.target.value); \n\n//                                                         }}\n\n//                                                       />\n//                                                     </TableCell>\n//                                                     <TableCell align=\"left\">\n\n//                                                     </TableCell>\n//                                                   </TableRow>\n\n//                                                 </TableBody>\n//                                               )\n//                                             })}\n//                                           </Table>\n//                                         </Card>\n//                                       )\n//                                     })}\n//                                   </div>\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Savebtn  \n//                           type=\"submit\"  \n//                           id=\"2\"      \n//                            onClick={Expensesave} \n//                               save=\"save\"\n//        /> */}\n\n//                         </div>\n//                         { /*Water*/}\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                   </TableBody>\n//                 </Table>\n//               </div>\n//               {/* </main> */}\n\n//             </div>\n\n//           </Tab.Container>\n//         </div>\n//       </ScrollView>\n//       <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n//         <Button\n//           type=\"submit\"\n//           id=\"1\"\n//           onClick={Expensesave}\n//           style={{ backgroundColor: \"#485D84\", width: 406, height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1, position: 'absolute', left: 540, top: 40 }}>\n//           SAVE\n//         </Button>\n//         <div style={{\n//           backgroundColor: '#385CA8', opacity: 0.5\n//           , width: \"100%\", height: 200, position: 'relative'\n//         }}>\n\n//         </div>\n//       </div>\n//     </div>\n\n\n//     // </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}