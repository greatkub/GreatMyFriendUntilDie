{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Alert, ScrollView } from 'react-native';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  heder: {\n    width: '100%',\n    padding: theme.spacing(1),\n    marginTop: '-2%'\n  },\n  Card: {\n    width: '80%',\n    padding: theme.spacing(3),\n    margin: 'auto'\n  },\n  Cards: {\n    width: '100%',\n    padding: theme.spacing(2),\n    margin: 'auto'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  Btn: {\n    marginLeft: \"92%\",\n    marginTop: \"-6%\"\n  },\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 80\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: '100%',\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: 'absolute',\n    width: \"30%\",\n    top: 10,\n    left: 0,\n    right: 0,\n    margin: '0 auto'\n  },\n  buttonsubmit: {\n    width: \"407px\",\n    height: \"42.8px\",\n    position: \"absolute\",\n    top: 620,\n    left: \"35%\"\n  },\n  inputbox: {\n    width: 128,\n    height: 39\n  }\n}));\nexport default function CreateRoom(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 18\n  }, this);\n\n  const [allroom, setAllroom] = useState([]);\n  const [inputRoomToAdd, setInputRoomToAdd] = useState(null);\n  const [arrayFloor, setArrayFloor] = useState(2);\n  const [getRoomName, setRoomName] = useState();\n  const {\n    id\n  } = useParams();\n  const [buildingName, setBuildName] = useState([]);\n  useEffect(async () => {\n    console.log(id + \"in Use Eff first row\");\n    console.log();\n    await axios(`/building/building/id/${id}`).then(response => {\n      console.log(response.data, \"in response\");\n      setBuildName(response.data[0].buildingName);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  useEffect(() => {\n    setArrayFloor(props.allFloor); // axios('/building/rooms/1')\n    //     .then(response => {\n    //         // console.log(\"hi\" + response.data)\n    //         setAllroom(response.data);\n    //     })\n    //     .catch(error => {\n    //         console.log('Error getting fake data: ' + error);\n    //     })\n    // console.log(\"In useeffect\")\n  }, []); // building/floor-room/building/5\n\n  const api = axios.create({\n    baseURL: `/building/floor-room/building/${id}`\n  });\n\n  const addFloorandRoom = async () => {\n    let res = await api.post('/', arrayFloor).then(response => {\n      alert(\"Add Room successfully\");\n      window.location.href = `/st_initialize/${id}`;\n    }).catch(error => {\n      alert(\"Fail\");\n      console.log('Error getting fake data: ' + error);\n    });\n  };\n\n  function handlerClick() {\n    const a = 100; // inputRoomToAdd\n    // allroom\n\n    const roomObject = {\n      \"room_number\": \"101\"\n    }; // console.log(allroom)\n\n    for (var i = 0; i < arrayFloor.length; i++) {\n      for (var j = 0; j < parseInt(inputRoomToAdd); j++) {\n        const formattedNumber = (\"0\" + (j + 1)).slice(-2);\n        const roomNumber = String(i + 1) + formattedNumber;\n        const roomObject = {\n          \"room_number\": roomNumber\n        };\n        arrayFloor[i].Rooms.push(roomObject);\n        console.log(roomNumber);\n      }\n    }\n\n    setArrayFloor(arrayFloor);\n    console.log(arrayFloor);\n    console.log(\"end\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ScrollView, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '650px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '550px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.Card,\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"aria-label\": \"caption table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      className: classes.heder,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: \"Rooms\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          placeholder: \"No of Room\",\n                          type: \"number\" // value={inputfloorToAdd}\n                          ,\n                          onChange: e => setInputRoomToAdd(parseInt(e.currentTarget.value))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          className: classes.buttongenerate,\n                          size: \"small\",\n                          variant: \"contained\",\n                          color: \"primary\",\n                          disableElevation: true,\n                          style: {\n                            backgroundColor: '#485D84'\n                          },\n                          onClick: () => handlerClick(),\n                          children: \"Generate Floor\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: classes.heder,\n                      children: [\" \", buildingName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, this), arrayFloor != undefined && arrayFloor.length > 0 ? arrayFloor.map(set => {\n                      {\n                        console.log(set);\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            width: \"100%\",\n                            minHeight: \"200px\",\n                            border: \"1px solid #AAAAAA\",\n                            borderRadius: 5\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              height: \"86.5px\",\n                              width: \"100%\",\n                              borderBottom: \"1px solid #AAAAAA\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                              children: [\" Floor \", set.FloorName, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 250,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 61\n                          }, this), set.Rooms.map((r, index) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                display: 'flex',\n                                height: 50,\n                                width: \"100%\",\n                                borderBottom: \"1px solid #AAAAAA\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                                  children: [\"  \", r.room_number]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 257,\n                                  columnNumber: 77\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 256,\n                                columnNumber: 73\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                onChange: e => r.room_number = e.target.value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 260,\n                                columnNumber: 73\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                children: \"delete\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 266,\n                                columnNumber: 73\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 255,\n                              columnNumber: 69\n                            }, this);\n                          })]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            height: '20px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 276,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 53\n                      }, this);\n                    }) : \"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: 200,\n        top: 620\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: addFloorandRoom,\n        style: {\n          backgroundColor: \"#485D84\",\n          width: 406,\n          height: 42.87,\n          color: \"#FFFFFF\",\n          fontSize: 21,\n          zIndex: 1,\n          position: 'absolute',\n          left: 540,\n          top: 40\n        },\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#385CA8',\n          opacity: 0.5,\n          width: \"100%\",\n          height: 200,\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateRoom, \"fOfC9wRzKa+jobaMQe9nzLt+Sjg=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = CreateRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/CreateRoom.js"],"names":["React","useEffect","useState","makeStyles","Card","Button","TableHead","TableRow","TableBody","TableCell","Table","TextField","axios","Alert","ScrollView","BrowserRouter","Rounter","Route","Link","NavLink","Switch","Paper","useParams","useStyles","theme","root","minWidth","heder","width","padding","spacing","marginTop","margin","Cards","bullet","display","transform","title","fontSize","pos","marginBottom","Btn","marginLeft","text","paper","paddingBottom","list","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","left","right","buttonsubmit","height","inputbox","CreateRoom","props","classes","bull","allroom","setAllroom","inputRoomToAdd","setInputRoomToAdd","arrayFloor","setArrayFloor","getRoomName","setRoomName","id","buildingName","setBuildName","console","log","then","response","data","catch","error","allFloor","api","create","baseURL","addFloorandRoom","res","post","alert","window","location","href","handlerClick","a","roomObject","i","length","j","parseInt","formattedNumber","slice","roomNumber","String","Rooms","push","e","currentTarget","value","buttongenerate","undefined","map","set","minHeight","border","borderRadius","borderBottom","FloorName","r","index","room_number","target","color","zIndex","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Alert, ScrollView } from 'react-native';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { useParams } from 'react-router';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n\n    heder: {\n        width: '100%',\n        padding: theme.spacing(1),\n        marginTop: '-2%',\n    },\n\n    Card: {\n        width: '80%',\n        padding: theme.spacing(3),\n        margin: 'auto',\n    },\n\n    Cards: {\n        width: '100%',\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    title: {\n        fontSize: 14,\n    },\n\n    pos: {\n        marginBottom: 12,\n    },\n\n    Btn: {\n        marginLeft: \"92%\",\n        marginTop: \"-6%\",\n    },\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 80,\n    },\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: '100%',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        width: \"30%\",\n        top: 10,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n    buttonsubmit: {\n        width: \"407px\",\n        height: \"42.8px\",\n        position: \"absolute\",\n        top: 620,\n        left: \"35%\"\n    },\n\n    inputbox : {\n        width: 128,\n        height: 39\n    }\n\n\n}));\n\n\n\nexport default function CreateRoom(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [allroom, setAllroom] = useState([]);\n    const [inputRoomToAdd, setInputRoomToAdd] = useState(null)\n    const [arrayFloor, setArrayFloor] = useState(2)\n\n    const [getRoomName, setRoomName] = useState()\n    const { id } = useParams()\n\n    const [buildingName, setBuildName] = useState([])\n\n    useEffect(async () => {\n        console.log(id + \"in Use Eff first row\")\n        console.log()\n        await axios(`/building/building/id/${id}`)\n            .then(response => {\n                console.log(response.data, \"in response\")\n                setBuildName(response.data[0].buildingName)\n\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n\n\n    }, []);\n\n    useEffect(() => {\n        setArrayFloor(props.allFloor)\n        // axios('/building/rooms/1')\n        //     .then(response => {\n        //         // console.log(\"hi\" + response.data)\n        //         setAllroom(response.data);\n        //     })\n        //     .catch(error => {\n        //         console.log('Error getting fake data: ' + error);\n        //     })\n        // console.log(\"In useeffect\")\n    },[]);\n\n    // building/floor-room/building/5\n\n\n    const api = axios.create({\n        baseURL: `/building/floor-room/building/${id}`\n    })\n\n    const addFloorandRoom = async () => {\n        let res = await api.post('/',\n            arrayFloor\n        ).then(response => {\n            alert(\"Add Room successfully\")\n            window.location.href = `/st_initialize/${id}`;\n        })\n            .catch(error => {\n                alert(\"Fail\")\n                console.log('Error getting fake data: ' + error);\n            })\n\n    }\n\n    function handlerClick() {\n        const a = 100\n        // inputRoomToAdd\n        // allroom\n        const roomObject = {\n            \"room_number\": \"101\"\n        }\n        // console.log(allroom)\n\n        for (var i = 0; i < arrayFloor.length; i++) {\n\n            for (var j = 0; j < parseInt(inputRoomToAdd); j++) {\n                const formattedNumber = (\"0\" + (j + 1)).slice(-2)\n                const roomNumber = String(i + 1) + formattedNumber\n                const roomObject = {\n                    \"room_number\": roomNumber\n                }\n                arrayFloor[i].Rooms.push(roomObject)\n                console.log(roomNumber)\n            }\n        }\n\n        setArrayFloor(arrayFloor)\n        console.log(arrayFloor)\n\n        console.log(\"end\")\n\n    }\n\n    return (\n        <div style={{ width: '100%' }}>\n            <ScrollView>\n\n                <div className=\"container \">\n                    <div style={{ width: '100%', height: '650px' }}>\n                        <div style={{ width: '100%', height: '550px' }}>\n\n                            {/* <Link to='/st_initialize'> */}\n                            {/* <button onClick={() => console.log(arrayFloor)}>\n\n                            </button> */}\n                            {/* </Link> */}\n\n\n                            <Card className={classes.Card} variant=\"outlined\">\n                                <Table aria-label=\"caption table\">\n                                    <TableHead >\n                                        <TableRow>\n                                            <TableCell className={classes.heder}>\n                                                <div style={{ display: 'flex' }}>\n                                                    <h4>Rooms</h4>\n                                                    <input\n                                                        placeholder=\"No of Room\"\n                                                        type=\"number\"\n                                                        // value={inputfloorToAdd}\n                                                        onChange={(e) => setInputRoomToAdd(parseInt(e.currentTarget.value))}\n                                                    />\n\n                                                    <Button className={classes.buttongenerate}\n                                                        size=\"small\" variant=\"contained\" color=\"primary\" disableElevation\n                                                        style={{ backgroundColor: '#485D84' }}\n                                                        onClick={() =>\n                                                            handlerClick()\n                                                        }\n                                                    >Generate Floor</Button>\n                                                </div>\n\n                                            </TableCell>\n\n                                        </TableRow>\n                                    </TableHead>\n\n                                    <TableBody>\n\n                                        <div className=\"container\">\n                                            <h5 className={classes.heder}> {buildingName}</h5>\n\n                                            {arrayFloor != undefined && arrayFloor.length > 0 ? arrayFloor.map((set) => {\n                                                { console.log(set) }\n                                                return (\n\n                                                    <div>\n                                                        <div style={{ width: \"100%\", minHeight: \"200px\", border: \"1px solid #AAAAAA\", borderRadius: 5 }}>\n                                                            <div style={{ height: \"86.5px\", width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n                                                                <h4> Floor {set.FloorName} </h4>\n                                                            </div>\n                                                            {set.Rooms.map((r, index) => {\n\n                                                                return (\n                                                                    <div style={{ display: 'flex', height: 50, width: \"100%\", borderBottom: \"1px solid #AAAAAA\" }}>\n                                                                        <div>\n                                                                            <h4>  {r.room_number}</h4>\n                                                                        </div>\n\n                                                                        <input\n                                                                            onChange={e => r.room_number = e.target.value}\n                                                                        >\n\n                                                                        </input>\n\n                                                                        <button>\n                                                                            delete\n                                                                        </button>\n                                                                    </div>\n\n\n                                                                )\n                                                            })}\n\n                                                        </div>\n                                                        <div style={{ height: '20px' }}>\n                                                        </div>\n\n\n\n                                                    </div>\n                                                )\n\n\n\n                                            }) : \"\"}\n                                            {/* {arrayFloor.map((set) => {\n                                            return (\n                                                <Card className={classes.Cards} variant=\"outlined\">\n                                                    <h5 className={classes.heder}>{set.FloorName}</h5>\n                                                    <Table>\n                                                        <TableHead >\n                                                            <h5 className={classes.heder}>Floor{set.FloorNumber}</h5>\n\n                                                            <TableRow>\n                                                                <TableCell>Rooms</TableCell>\n                                                                <TableCell align=\"center\">Edit Name Rooms</TableCell>\n                                                                <TableCell>Delete</TableCell>\n                                                            </TableRow>\n\n                                                        </TableHead> */}\n                                            {/* {set.room.map((r) => {\n                                                            return (\n                                                                <TableBody>\n                                                                    <TableRow >\n                                                                        <TableCell align=\"left\">{r.roomNumber}</TableCell>\n                                                                        <TableCell align=\"center\">\n                                                                            <TextField\n                                                                                size=\"small\"\n                                                                                variant=\"outlined\"\n                                                                            />\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            <Button>Delete </Button>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                </TableBody>\n                                                            )\n                                                        })} */}\n                                            {/* </Table>\n                                                </Card>\n                                            )\n                                        })} */}\n                                        </div>\n                                    </TableBody>\n                                </Table>\n                            </Card>\n\n                        </div>\n                        <div>\n                        </div>\n                    </div>\n                </div>\n            </ScrollView>\n\n\n            {/* <Link to=\"/initial\">\n                <Button\n                    onClick={addFloorandRoom}\n                    className={classes.buttonsubmit}\n                    variant=\"contained\" color=\"primary\" disableElevation\n                    style={{ backgroundColor: '#485D84' }} >\n                    Save\n                </Button>\n            </Link> */}\n\n\n            {/* <Link to={`/st_initialize/${id}`}> */}\n            <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n                <Button onClick={addFloorandRoom}\n                    style={{\n                        backgroundColor: \"#485D84\", width: 406,\n                        height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1,\n                        position: 'absolute', left: 540, top: 40\n                    }}>\n                    SAVE\n                </Button>\n                <div style={{\n                    backgroundColor: '#385CA8', opacity: 0.5\n                    , width: \"100%\", height: 200, position: 'relative'\n                }}>\n\n                </div>\n            </div>\n            {/* </Link> */}\n\n        </div>\n\n\n\n    );\n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}