{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/Expens/Expensepage.js\",\n    _s = $RefreshSig$();\n\n// // import React from 'react'\n// // import Floorcard from './Expencompo/Floorcard'\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import Datetoday from '../../Components/AllComponent/Datetoday.js'\n// // import { ScrollView } from 'react-native';\n// // import { useState } from 'react';\n// // import Navbar2 from '../../Components/AllComponent/Navbar2';\n// // const useStyles = makeStyles((theme) => ({\n// //     frame: {\n// //         width: '1163px',\n// //         height: '232px',\n// //         backgroundColor: 'red',\n// //     },\n// //     scrollspace: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 110,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     scrollspace36: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 36,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     footerbtn: {\n// //     }\n// // }));\n// // export default function Expensepage({ isOpened }) {\n// //     const classes = useStyles();\n// //     return (\n// //         <div style={{width: '100%'}}>\n// //             <ScrollView>\n// //                 <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n// //                     <div>\n// //                         <div className={classes.frame}>\n// //                             <Datetoday />\n// //                         </div>\n// //                         <div>\n// //                             <Floorcard />\n// //                         </div>\n// //                     </div>\n// //                 </div>\n// //             </ScrollView>\n// //             {/* <div style={{width: '100%', backgroundColor: 'red', height: '108px'}}>\n// //                 Hivgbhjkhfjjkfkjf\n// //             </div> */}\n// //         </div>\n// //     )\n// // }\n// import { ScrollView } from 'react-native';\n// import React, { useEffect, useState } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Card from '@material-ui/core/Card';\n// import Tab from 'react-bootstrap/Tab'\n// import Nav from 'react-bootstrap/Nav'\n// import axios from \"axios\";\n// import moment from 'moment';\n// import { Button } from '@material-ui/core';\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     // display: 'flex',\n//     // marginTop: '-6%'\n//   },\n//   Cards: {\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     // padding: theme.spacing(2),\n//     // marginTop: \"-7%\",\n//     // margin: 'auto',\n//     // height: \"120%\"\n//   },\n//   heder: {\n//     // width: '90%',\n//     // padding: theme.spacing(2),\n//     // margin: '1%',\n//   },\n//   container: {\n//     // maxHeight: 440,\n//     // width: '100%'\n//   },\n//   Gridmove: {\n//     // marginLeft: 80\n//   },\n//   toolbar: {\n//     // display: 'flex',\n//     // alignItems: 'center',\n//     // justifyContent: 'flex-end',\n//     // padding: theme.spacing(0, 15),\n//     // necessary for content to be below app bar\n//     // ...theme.mixins.toolbar,\n//   },\n//   // content: {\n//   //   flexGrow: 1,\n//   //   padding: theme.spacing(1),\n//   // },\n//   Searchstyle: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 40,\n//     marginTop: -24,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//   },\n//   // Field: {\n//   //   marginTop: \"2%\"\n//   // },\n//   // Heading: {\n//   //   marginTop: \"3%\"\n//   // },\n//   // Btn: {\n//   //   marginLeft: \"60%\",\n//   //   marginTop: \"-8%\"\n//   // },\n//   fabButton: {\n//     width: \"60%\",\n//     //left: 120,\n//     top: 40,\n//     right: 50,\n//     margin: '0 auto',\n//   },\n//   Tabmove: {\n//     marginLeft: \"1%\"\n//   },\n//   Spacing: {\n//     // margin: '1%'\n//   },\n//   scrollspace: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 110,\n//     transition: 'all 0.5s ease'\n//   },\n//   scrollspace36: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 36,\n//     transition: 'all 0.5s ease'\n//   },\n//   segmentbtnBlue: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#8396B9\",\n//     color: \"#FFFFFF\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     fontWeight: 'bold',\n//     position: 'relative'\n//   },\n//   segmentbtnWhite: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#FFFFFF\",\n//     color: \"#4A4A4A\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     position: 'relative'\n//   },\n//   segwrap: {\n//     // border: '1px solid #AAAAAA'\n//     flex: 'wrap'\n//     , display: 'flex'\n//     , width: 'fit-content',\n//     backgroundColor: '#FFFFFF',\n//     borderRadius: 5\n//   },\n//   makeCenterBlue: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#FFFFFF'\n//   },\n//   makeCenterWhite: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#4A4A4A'\n//   },\n//   title2: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 60\n//   }\n//   , title2bl: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 184\n//   },\n//      //floor\n//      root: {\n//       flexGrow: 1,\n//       margin: theme.spacing(1),\n//       marginRight: 40\n//   },\n//   papercard: {\n//       width: '1163px',\n//       boxShadow: \"0px 0px 0px #E8E8E8\",\n//       minHeight: '233px',\n//       //   margin: 'auto',\n//       marginLeft: 0,\n//       marginBottom: \"16px\",\n//       //   backgroundColor:'green',\n//       position: 'relative',\n//       borderRadius: 5,\n//       border: '0.75px solid #AAAAAA'\n//   },\n//   floortext: {\n//       display: 'inline',\n//       marginRight: '113px',\n//       color: '#4A4A4A',\n//       fontSize: '13px',\n//       fontWeight: 'bold',\n//       position: 'relative',\n//   },\n//   headfloor: {\n//       // display: 'block',\n//       color: '#4A4A4A',\n//       fontWeight: 'bold',\n//       fontSize: '16px',\n//       posiotion: 'absolute',\n//       marginLeft: '45px',\n//       paddingTop: '14px'\n//   },\n//   minitext: {\n//       fontSize: '11.3px',\n//       color: '#AAAAAA',\n//       position: 'absolute',\n//       fontWeight: '300',\n//       marginLeft: '643.5px',\n//       top: 0,\n//       marginTop: '25px'\n//   },\n// }));\n// export default function Expensepage({ isOpened }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   const [currenDate, setCurrentDate] = useState(\"\")\n//   const [previousDate, setPreviousDate] = useState(\"2021-07-08\")\n//   const [elecPrevious, setElecPrevious] = useState(\"\")\n//   const [elecCurrent, setElecCurrent] = useState()\n//   const [elecUsage, setElecUsage] = useState(\"\")\n//   const [waterPrevious, setWaterPrevious] = useState(\"\")\n//   const [waterCurrent, setWaterCurrent] = useState(\"\")\n//   const [waterUsage, setWaterUsage] = useState(\"\")\n//   const [startbill, setStartbill] = useState(\"\")\n//   const [endbill, setEndbill] = useState(\"\")\n//   const [roomId, setRoomId] = useState([])\n//   const [expense, setExpense] = useState([])\n//   /*function handlerChangeJSOn() {\n//     xpense[0].buildingName = \"Laila\"\n//     console.log(xpense)\n//   }*/\n//   /* function handlerChangeJSOn() {\n//      xpense[0].buildingName = \"Laila\"\n//      setXpense(xpense[0].floors[0].rooms)\n//    }*/\n//   function handlerChangeJSOn() {\n//     /*xpense[0].buildingName = \"Laila*/\n//     let rooms = []\n//     setKeepstate(xpense[0].floors[0].rooms)\n//     console.log(keepstate)\n//     for (const i in keepstate) {\n//       console.log(i)\n//       console.log(\"hi\")\n//     }\n//   }\n//   const [keepstate, setKeepstate] = useState([])\n//   const [allroom, setAllroom] = useState()\n//   const Expensesave = event => {\n//     event.preventDefault();\n//     const expenseLists = [];\n//     for (let floor in xpense[0].floors) {\n//       for (let room in xpense[0].floors[floor].rooms) {\n//         console.log(room)\n//         console.log('fkdsakjadshgdsahgjadsjhg')\n//         var a = xpense[0].floors[floor].rooms[room];\n//         // a.CurrentDate = new Date().toISOString().substring(0, 10);\n//         //a.CurrentDate = new Date().toISOString()\n//         expenseLists.push(xpense[0].floors[floor].rooms[room]);\n//       }\n//       // console.log(i)\n//       // console.log(\"hi\")\n//     }\n//     console.log('aaaa', expenseLists.length)\n//     console.log(expenseLists);\n//     setKeepstate(expenseLists);\n//     //console.log(keepstate)\n//     //console.log(JSON.stringify(keepstate))\n//     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n//       //allroom\n//       keepstate\n//     ).then((response) => {\n//       console.log('done')\n//       console.log(response);\n//       console.log(keepstate)\n//     })\n//       .catch(error => {\n//         console.log(error.response)\n//       })\n//   };\n//   //get\n//   const [xpense, setXpense] = useState([])\n//   const [isTrue, setIsTrue] = useState(false)\n//   React.useEffect(() => {\n//     const fetchData = () => {\n//       axios.get('/rentingtransaction/electricity-water-expenses/4')\n//         .then(r => {\n//           setXpense(r.data)\n//         })\n//     };\n//     fetchData()\n//   }, [])\n//   console.log(xpense)\n//   console.log(xpense)\n//   return (\n//     // <div className=\"container\">\n//     <div style={{ width: '100%' }}>\n//       <ScrollView>\n//         <div className={isOpened ? classes.scrollspace36 : classes.scrollspace} >\n//           {/* <div style={{width: 1163, position: 'relative', margin:\"auto\"}}> */}\n//           <Tab.Container defaultActiveKey=\"home\">\n//             <div >\n//               {/* <main > */}\n//               {/* <div className={classes.toolbar} /> */}\n//               <div class=\"container d-flex-end\">\n//                 <div class=\"container d-flex-start\" >\n//                   <h4 className={classes.title2}>Expense</h4>\n//                 </div>\n//                 <Table>\n//                   <Nav variant=\"pills\" className={classes.segwrap}>\n//                     <Nav.Item\n//                     // className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#8396B9' } : { backgroundColor: '#FFFFFF' }}\n//                         onClick={() => setIsTrue(true)} eventKey=\"home\">\n//                         <div className={isTrue ? classes.makeCenterBlue : classes.makeCenterWhite}>\n//                           Electricity\n//                         </div>\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                     <Nav.Item\n//                     // className={true ? classes.segmentbtnWhite : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnWhite : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#FFFFFF' } : { backgroundColor: '#8396B9' }}\n//                         onClick={() => setIsTrue(false)} eventKey=\"link-1\">\n//                         <div className={isTrue ? classes.makeCenterWhite : classes.makeCenterBlue} >\n//                           Water\n//                         </div>\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                   </Nav>\n//                   <TableBody>\n//                     <br />\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"home\">\n//                         <input\n//                           type=\"date\" />\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody style={{ width: 2500 }}>\n//                                   {/* <div className=\"container \"> */}\n//                                   {/*<button onClick={()=> xpense}> Test </button>*/}\n//                                   <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                   {build.floors.map((f) => {\n//                                     return (\n//                                       <Card style={{\n//                                         minWidth: '1163px',\n//                                         maxWidth: '1163px',\n//                                       }} variant=\"outlined\">\n//                                         <Table style={{ width: '100%' }}>\n//                                           {/* <TableHead >\n//                                             <h5 className={classes.heder}>Floor{f.floorName}</h5>\n//                                             <TableRow > */}\n//                                             <div className={classes.headfloor} >\n//                                                 Floor \n//                                                 <div style={{ position: 'absolute', paddingTop: '6px' }}>\n//                                                     <text className={classes.floortext}>\n//                                                         Room\n//                                                     </text>\n//                                                     <text className={classes.floortext} style={{ marginRight: '163px' }}>\n//                                                         Bill Period\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previos Date\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previous Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Current Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Usage\n//                                                     </text>\n//                                                 </div>\n//                                             </div>\n//                                             {/* </TableRow>\n//                                           </TableHead> */}\n//                                           {f.rooms.map((r) => {\n//                                             return (\n//                                               <TableBody>\n//                                                 <TableRow>\n//                                                   {/*<TableCell align=\"left\">{r.roomId}</TableCell> */}\n//                                                   <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     { //moment /*(r.billPeriod).format(\"L\")*/\n//                                                       r.billPeriod\n//                                                     }\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\"\n//                                                   /*onChange={(event) =>{\n//                                                         setPreviousDate(event.target.value);\n//                                                         }}*/\n//                                                   >\n//                                                     {moment(r.previousDate).format(\"L\")}\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     {r.electricityPreviousReading}\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     <input\n//                                                       id={r.roomId}\n//                                                       size=\"small\"\n//                                                       type=\"text\"\n//                                                       onChange={(event) => {\n//                                                         /*let newXpense = xpense\n//                                                         const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                         //newXpense[objIndex]= event.target.value \n//                                                         //setXpense(newXpense); \n//                                                         r.electricityCurrentReading = event.target.value\n//                                                         //setElecCurrent(event.target.value); \n//                                                       }}\n//                                                     />\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                   </TableCell>\n//                                                 </TableRow>\n//                                               </TableBody>\n//                                             )\n//                                           })}\n//                                         </Table>\n//                                       </Card>\n//                                     )\n//                                   })}\n//                                   {/* </div> */}\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Button  \n//         style={{position:'absolute'}}\n//             type=\"submit\"   \n//             id=\"1\"          \n//             onClick={Expensesave}>\n//           <Savebtn save=\"save\"/> \n//         </Button> */}\n//                         </div>\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"link-1\">\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody>\n//                                   <div className=\"container \">\n//                                     {/* <button onClick={()=>handlerChangeJSOn()}> BTN  </button>*/}\n//                                     <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                     {build.floors.map((f) => {\n//                                       return (\n//                                         <Card className={classes.Spacing} variant=\"outlined\">\n//                                           <Table aria-label=\"caption table\">\n//                                             <TableHead >\n//                                               <h5 className={classes.heder}>Floor {f.floorName}</h5>\n//                                               <TableRow>\n//                                                 <TableCell>Room</TableCell>\n//                                                 <TableCell>Bill Period</TableCell>\n//                                                 <TableCell>Previous Date</TableCell>\n//                                                 <TableCell>Previous Reaading</TableCell>\n//                                                 <TableCell>Current Reading</TableCell>\n//                                                 <TableCell >Usage</TableCell>\n//                                               </TableRow>\n//                                             </TableHead>\n//                                             {f.rooms.map((r) => {\n//                                               return (\n//                                                 <TableBody>\n//                                                   <TableRow>\n//                                                     <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                     <TableCell align=\"left\">{r.billPeriod}</TableCell>\n//                                                     <TableCell align=\"left\">{r.previousDate}</TableCell>\n//                                                     <TableCell align=\"left\">\n//                                                     </TableCell>\n//                                                     <TableCell>\n//                                                       <input\n//                                                         id={r.roomId}\n//                                                         size=\"small\"\n//                                                         type=\"text\"\n//                                                         onChange={(event) => {\n//                                                           /*let newXpense = xpense\n//                                                           const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                           //newXpense[objIndex]= event.target.value \n//                                                           //setXpense(newXpense); \n//                                                           r['WaterCurrentReading'] = event.target.value\n//                                                           //setElecCurrent(event.target.value); \n//                                                         }}\n//                                                       />\n//                                                     </TableCell>\n//                                                     <TableCell align=\"left\">\n//                                                     </TableCell>\n//                                                   </TableRow>\n//                                                 </TableBody>\n//                                               )\n//                                             })}\n//                                           </Table>\n//                                         </Card>\n//                                       )\n//                                     })}\n//                                   </div>\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Savebtn  \n//                           type=\"submit\"  \n//                           id=\"2\"      \n//                            onClick={Expensesave} \n//                               save=\"save\"\n//        /> */}\n//                         </div>\n//                         { /*Water*/}\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                   </TableBody>\n//                 </Table>\n//               </div>\n//               {/* </main> */}\n//             </div>\n//           </Tab.Container>\n//         </div>\n//       </ScrollView>\n//       <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n//         <Button\n//           type=\"submit\"\n//           id=\"1\"\n//           onClick={Expensesave}\n//           style={{ backgroundColor: \"#485D84\", width: 406, height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1, position: 'absolute', left: 540, top: 40 }}>\n//           SAVE\n//         </Button>\n//         <div style={{\n//           backgroundColor: '#385CA8', opacity: 0.5\n//           , width: \"100%\", height: 200, position: 'relative'\n//         }}>\n//         </div>\n//       </div>\n//     </div>\n//     // </div>\n//   );\n// }\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js';\nimport { ScrollView } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Divider } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    width: '1163px',\n    height: '273px'\n  },\n  scrollspace: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 110,\n    transition: 'all 0.5s ease'\n  },\n  scrollspace36: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 36,\n    transition: 'all 0.5s ease'\n  },\n  footerbtn: {},\n  //floor\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n    marginRight: 40\n  },\n  papercard: {\n    width: '1163px',\n    boxShadow: \"0px 0px 0px #E8E8E8\",\n    minHeight: '233px',\n    //   margin: 'auto',\n    marginLeft: 0,\n    marginBottom: \"16px\",\n    //   backgroundColor:'green',\n    position: 'relative',\n    borderRadius: 5,\n    border: '0.75px solid #AAAAAA'\n  },\n  floortext: {\n    display: 'inline',\n    marginRight: '113px',\n    color: '#4A4A4A',\n    fontSize: '13px',\n    fontWeight: 'bold',\n    position: 'relative'\n  },\n  headfloor: {\n    // display: 'block',\n    color: '#4A4A4A',\n    fontWeight: 'bold',\n    fontSize: '16px',\n    posiotion: 'absolute',\n    marginLeft: '45px',\n    paddingTop: '14px'\n  },\n  minitext: {\n    fontSize: '11.3px',\n    color: '#AAAAAA',\n    position: 'absolute',\n    fontWeight: '300',\n    marginLeft: '643.5px',\n    top: 0,\n    marginTop: '25px'\n  },\n  //segment\n  segmentbtnBlue: {\n    width: 161.8,\n    height: 31.5,\n    backgroundColor: \"#8396B9\",\n    color: \"#FFFFFF\",\n    textTransform: \"none\",\n    borderRadius: 5,\n    fontSize: 16.18,\n    fontWeight: 'bold',\n    position: 'relative'\n  },\n  segmentbtnWhite: {\n    width: 161.8,\n    height: 31.5,\n    backgroundColor: \"#FFFFFF\",\n    color: \"#4A4A4A\",\n    textTransform: \"none\",\n    borderRadius: 5,\n    fontSize: 16.18,\n    position: 'relative'\n  },\n  segwrap: {\n    // border: '1px solid #AAAAAA'\n    flex: 'wrap',\n    display: 'flex',\n    width: 'fit-content',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5\n  },\n  makeCenter: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    top: 3\n  } //\n  ,\n  title2: {\n    fontSize: '19.4px',\n    color: '#4A4A4A',\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 60\n  },\n  title2bl: {\n    fontSize: '19.4px',\n    color: '#4A4A4A',\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 230\n  },\n  //room card\n  paperrow: {\n    margin: 'auto',\n    maxWidth: '1163px',\n    height: '54px',\n    position: 'relative',\n    boxShadow: 'none',\n    borderBottom: '1px solid #D8D8D8'\n  },\n  newdetext: {\n    position: 'absolute',\n    color: '#4A4A4A',\n    fontSize: '13px',\n    marginTop: \"17px\",\n    fontWeight: '400'\n  },\n  infobutton: {\n    position: 'absolute',\n    width: '24px',\n    height: '24px',\n    marginTop: \"14.5px\",\n    marginLeft: \"1086px\",\n    color: \"#485D84\"\n  },\n  inputbox: {\n    position: 'absolute',\n    height: \"24px\",\n    width: \"101px\",\n    fontSize: '13px',\n    fontWeight: '400',\n    color: '#4A4A4A',\n    marginTop: '14.7px'\n  }\n}));\nexport default function Verifypage({\n  isOpened\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [currentSelect, setCurrentSelect] = useState(0);\n  const [allData, setAllData] = useState([]);\n  const [allTransaction, setAllTransaction] = useState([]);\n  const [rentTrans, setRentTrans] = useState([]);\n  useEffect(async () => {\n    console.log(\"in Use Eff first row\");\n    await axios(`/rentingtransaction/electricity-water-expenses/4`).then(response => {\n      console.log(response.data, \"in response\");\n      setAllData(response.data);\n      getAlltrans(response.data[0]);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n\n  function getAlltrans(data) {\n    for (var i = 0; i < data.floors.length; i++) {\n      for (var j = 0; j < data.floors[i].rooms.length; j++) {\n        allTransaction.push(data.floors[i].rooms[j].userRentingTransaction);\n      }\n    }\n\n    setRentTrans(data.floors[0].rooms[0].rentingTransactionId);\n    console.log(rentTrans + \"This is rent trans\");\n    console.log(allTransaction);\n  }\n\n  const sureVeuify = async () => {\n    let res = await axios({\n      url: `/rentingtransaction/verify-electricity-water-expenses`,\n      method: 'post',\n      data: [{\n        \"UserTransactionIds\": allTransaction,\n        \"RentingTransactionId\": parseInt(rentTrans)\n      }]\n    }).then(response => {\n      alert(\"post success\"); // window.location.href = `/feetype_sp/${id}`;\n    }).catch(error => {\n      alert(\"post fail\");\n      console.log('Error getting fake data: ' + error);\n    });\n  }; // https://habitat1.azurewebsites.net/api/v1/rentingtransaction/electricity-water-expenses/4\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ScrollView, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpened ? classes.scrollspace36 : classes.scrollspace,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.frame,\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Datetoday, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title2,\n              children: \"Verificated Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.segwrap,\n              style: {\n                position: 'absolute',\n                top: 101\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: currentSelect == 0 ? classes.segmentbtnBlue : classes.segmentbtnWhite,\n                onClick: () => setCurrentSelect(0),\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: classes.makeCenter,\n                  children: \"Electricity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: currentSelect == 1 ? classes.segmentbtnBlue : classes.segmentbtnWhite,\n                onClick: () => setCurrentSelect(1),\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: classes.makeCenter,\n                  children: \"Water\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title2bl,\n              children: allData.length > 0 ? allData[0].buildingName : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: allData.length > 0 && allData[0].floors.map((floor, index) => {\n                return /*#__PURE__*/_jsxDEV(Paper, {\n                  className: classes.papercard,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.headfloor,\n                    children: [\"Floor \", floor.floorName, /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        position: 'absolute',\n                        paddingTop: '6px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Room\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1002,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        style: {\n                          marginRight: '163px'\n                        },\n                        children: \"Bill Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1005,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Previos Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1008,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Previous Reading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1011,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Current Reading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1014,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: classes.floortext,\n                        children: \"Usage\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1017,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1000,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    style: {\n                      backgroundColor: \"#AAAAAA\",\n                      marginTop: \"50px\",\n                      height: 0.5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 45\n                  }, this), floor.rooms.map((room, i) => {\n                    return /*#__PURE__*/_jsxDEV(Paper, {\n                      className: classes.paperrow,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 45\n                        },\n                        children: room.roomName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1027,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 196\n                        },\n                        children: [moment(room.startTime).format(\"DD/MM/YYYY\"), \"-\", moment(room.endTime).format(\"DD/MM/YYYY\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1031,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          left: 422\n                        },\n                        children: moment(room.previousDate).format(\"DD/MM/YYYY\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1037,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          right: 441\n                        },\n                        children: currentSelect == 0 ? room.electricityPreviousReading : room.waterPreviousReading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.inputbox,\n                        contenteditable: \"true\",\n                        style: {\n                          right: 222,\n                          backgroundColor: 'red'\n                        },\n                        children: currentSelect == 0 ? room.electricityCurrentReading : room.waterCurrentReading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1047,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.newdetext,\n                        style: {\n                          right: 74\n                        },\n                        children: currentSelect == 0 ? room.electricityUsage : room.waterUsage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1050,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1026,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 997,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: 200,\n        top: 655\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: sureVeuify,\n        style: {\n          backgroundColor: \"#485D84\",\n          width: 406,\n          height: 42.87,\n          color: \"#FFFFFF\",\n          fontSize: 21,\n          zIndex: 1,\n          position: 'absolute',\n          left: 540,\n          top: 40\n        },\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#385CA8',\n          opacity: 0.5,\n          width: \"100%\",\n          height: 200,\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 960,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Verifypage, \"/r/A09INRHMTB1MVEZvECrVFiM0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Verifypage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Verifypage\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/Expens/Expensepage.js"],"names":["React","makeStyles","Datetoday","ScrollView","useState","useEffect","Paper","Divider","Button","axios","moment","useStyles","theme","frame","width","height","scrollspace","margin","paddingLeft","transition","scrollspace36","footerbtn","root","flexGrow","spacing","marginRight","papercard","boxShadow","minHeight","marginLeft","marginBottom","position","borderRadius","border","floortext","display","color","fontSize","fontWeight","headfloor","posiotion","paddingTop","minitext","top","marginTop","segmentbtnBlue","backgroundColor","textTransform","segmentbtnWhite","segwrap","flex","makeCenter","left","right","textAlign","title2","title2bl","paperrow","maxWidth","borderBottom","newdetext","infobutton","inputbox","Verifypage","isOpened","classes","currentSelect","setCurrentSelect","allData","setAllData","allTransaction","setAllTransaction","rentTrans","setRentTrans","console","log","then","response","data","getAlltrans","catch","error","i","floors","length","j","rooms","push","userRentingTransaction","rentingTransactionId","sureVeuify","res","url","method","parseInt","alert","buildingName","map","floor","index","floorName","room","roomName","startTime","format","endTime","previousDate","electricityPreviousReading","waterPreviousReading","electricityCurrentReading","waterCurrentReading","electricityUsage","waterUsage","zIndex","opacity"],"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","sourcesContent":["// // import React from 'react'\n// // import Floorcard from './Expencompo/Floorcard'\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import Datetoday from '../../Components/AllComponent/Datetoday.js'\n// // import { ScrollView } from 'react-native';\n// // import { useState } from 'react';\n// // import Navbar2 from '../../Components/AllComponent/Navbar2';\n\n// // const useStyles = makeStyles((theme) => ({\n// //     frame: {\n// //         width: '1163px',\n// //         height: '232px',\n// //         backgroundColor: 'red',\n// //     },\n// //     scrollspace: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 110,\n// //         transition: 'all 0.5s ease'\n// //     },\n// //     scrollspace36: {\n// //         height: \"730px\",\n// //         width: '1163px',\n// //         margin: 'auto',\n// //         paddingLeft: 36,\n// //         transition: 'all 0.5s ease'\n\n// //     },\n// //     footerbtn: {\n\n// //     }\n// // }));\n\n// // export default function Expensepage({ isOpened }) {\n// //     const classes = useStyles();\n\n\n\n// //     return (\n// //         <div style={{width: '100%'}}>\n// //             <ScrollView>\n// //                 <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n// //                     <div>\n// //                         <div className={classes.frame}>\n// //                             <Datetoday />\n// //                         </div>\n// //                         <div>\n// //                             <Floorcard />\n// //                         </div>\n// //                     </div>\n// //                 </div>\n// //             </ScrollView>\n// //             {/* <div style={{width: '100%', backgroundColor: 'red', height: '108px'}}>\n// //                 Hivgbhjkhfjjkfkjf\n// //             </div> */}\n// //         </div>\n\n\n// //     )\n// // }\n\n\n\n// import { ScrollView } from 'react-native';\n// import React, { useEffect, useState } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Card from '@material-ui/core/Card';\n// import Tab from 'react-bootstrap/Tab'\n// import Nav from 'react-bootstrap/Nav'\n// import axios from \"axios\";\n// import moment from 'moment';\n\n// import { Button } from '@material-ui/core';\n\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     // display: 'flex',\n//     // marginTop: '-6%'\n//   },\n\n//   Cards: {\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     // padding: theme.spacing(2),\n//     // marginTop: \"-7%\",\n//     // margin: 'auto',\n//     // height: \"120%\"\n//   },\n\n//   heder: {\n//     // width: '90%',\n//     // padding: theme.spacing(2),\n//     // margin: '1%',\n\n//   },\n\n//   container: {\n//     // maxHeight: 440,\n//     // width: '100%'\n//   },\n\n//   Gridmove: {\n//     // marginLeft: 80\n//   },\n\n//   toolbar: {\n//     // display: 'flex',\n//     // alignItems: 'center',\n//     // justifyContent: 'flex-end',\n//     // padding: theme.spacing(0, 15),\n//     // necessary for content to be below app bar\n//     // ...theme.mixins.toolbar,\n//   },\n//   // content: {\n//   //   flexGrow: 1,\n//   //   padding: theme.spacing(1),\n\n//   // },\n\n//   Searchstyle: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 40,\n//     marginTop: -24,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//   },\n\n//   // Field: {\n//   //   marginTop: \"2%\"\n//   // },\n\n//   // Heading: {\n//   //   marginTop: \"3%\"\n//   // },\n\n//   // Btn: {\n//   //   marginLeft: \"60%\",\n//   //   marginTop: \"-8%\"\n\n//   // },\n\n//   fabButton: {\n//     width: \"60%\",\n//     //left: 120,\n//     top: 40,\n//     right: 50,\n//     margin: '0 auto',\n//   },\n\n//   Tabmove: {\n//     marginLeft: \"1%\"\n//   },\n\n//   Spacing: {\n//     // margin: '1%'\n//   },\n\n//   scrollspace: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n//     margin: 'auto',\n//     paddingLeft: 110,\n//     transition: 'all 0.5s ease'\n//   },\n//   scrollspace36: {\n//     height: \"730px\",\n//     minWidth: '1163px',\n//     maxWidth: '1163px',\n\n//     margin: 'auto',\n//     paddingLeft: 36,\n//     transition: 'all 0.5s ease'\n\n//   },\n//   segmentbtnBlue: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#8396B9\",\n//     color: \"#FFFFFF\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     fontWeight: 'bold',\n//     position: 'relative'\n//   },\n//   segmentbtnWhite: {\n//     width: 161.8,\n//     height: 31.5,\n//     backgroundColor: \"#FFFFFF\",\n//     color: \"#4A4A4A\",\n//     textTransform: \"none\",\n//     borderRadius: 5,\n//     fontSize: 16.18,\n//     position: 'relative'\n//   },\n//   segwrap: {\n//     // border: '1px solid #AAAAAA'\n//     flex: 'wrap'\n//     , display: 'flex'\n//     , width: 'fit-content',\n//     backgroundColor: '#FFFFFF',\n//     borderRadius: 5\n\n//   },\n\n//   makeCenterBlue: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#FFFFFF'\n\n\n//   },\n\n\n//   makeCenterWhite: {\n//     position: 'absolute',\n//     left: 0,\n//     right: 0,\n//     textAlign: 'center',\n//     marginLeft: 'auto',\n//     marginRight: 'auto',\n//     top: 3,\n//     color: '#4A4A4A'\n//   },\n//   title2: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 60\n\n//   }\n\n//   , title2bl: {\n//     fontSize: '19.4px',\n//     color: '#4A4A4A',\n//     fontWeight: 'bold',\n//     position: 'absolute',\n//     top: 184\n//   },\n\n\n\n//      //floor\n\n//      root: {\n//       flexGrow: 1,\n//       margin: theme.spacing(1),\n//       marginRight: 40\n\n//   },\n//   papercard: {\n//       width: '1163px',\n//       boxShadow: \"0px 0px 0px #E8E8E8\",\n//       minHeight: '233px',\n//       //   margin: 'auto',\n//       marginLeft: 0,\n//       marginBottom: \"16px\",\n//       //   backgroundColor:'green',\n//       position: 'relative',\n//       borderRadius: 5,\n//       border: '0.75px solid #AAAAAA'\n\n//   },\n//   floortext: {\n//       display: 'inline',\n//       marginRight: '113px',\n//       color: '#4A4A4A',\n//       fontSize: '13px',\n//       fontWeight: 'bold',\n//       position: 'relative',\n\n//   },\n//   headfloor: {\n//       // display: 'block',\n//       color: '#4A4A4A',\n//       fontWeight: 'bold',\n//       fontSize: '16px',\n//       posiotion: 'absolute',\n//       marginLeft: '45px',\n//       paddingTop: '14px'\n//   },\n//   minitext: {\n//       fontSize: '11.3px',\n//       color: '#AAAAAA',\n//       position: 'absolute',\n//       fontWeight: '300',\n//       marginLeft: '643.5px',\n//       top: 0,\n//       marginTop: '25px'\n//   },\n\n// }));\n\n// export default function Expensepage({ isOpened }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n\n//   const [currenDate, setCurrentDate] = useState(\"\")\n//   const [previousDate, setPreviousDate] = useState(\"2021-07-08\")\n//   const [elecPrevious, setElecPrevious] = useState(\"\")\n//   const [elecCurrent, setElecCurrent] = useState()\n//   const [elecUsage, setElecUsage] = useState(\"\")\n//   const [waterPrevious, setWaterPrevious] = useState(\"\")\n//   const [waterCurrent, setWaterCurrent] = useState(\"\")\n//   const [waterUsage, setWaterUsage] = useState(\"\")\n//   const [startbill, setStartbill] = useState(\"\")\n//   const [endbill, setEndbill] = useState(\"\")\n//   const [roomId, setRoomId] = useState([])\n//   const [expense, setExpense] = useState([])\n\n//   /*function handlerChangeJSOn() {\n//     xpense[0].buildingName = \"Laila\"\n//     console.log(xpense)\n//   }*/\n\n//   /* function handlerChangeJSOn() {\n//      xpense[0].buildingName = \"Laila\"\n//      setXpense(xpense[0].floors[0].rooms)\n//    }*/\n\n//   function handlerChangeJSOn() {\n//     /*xpense[0].buildingName = \"Laila*/\n//     let rooms = []\n\n//     setKeepstate(xpense[0].floors[0].rooms)\n//     console.log(keepstate)\n\n//     for (const i in keepstate) {\n//       console.log(i)\n//       console.log(\"hi\")\n//     }\n//   }\n\n\n//   const [keepstate, setKeepstate] = useState([])\n//   const [allroom, setAllroom] = useState()\n\n//   const Expensesave = event => {\n//     event.preventDefault();\n//     const expenseLists = [];\n\n//     for (let floor in xpense[0].floors) {\n//       for (let room in xpense[0].floors[floor].rooms) {\n//         console.log(room)\n//         console.log('fkdsakjadshgdsahgjadsjhg')\n//         var a = xpense[0].floors[floor].rooms[room];\n//         // a.CurrentDate = new Date().toISOString().substring(0, 10);\n//         //a.CurrentDate = new Date().toISOString()\n//         expenseLists.push(xpense[0].floors[floor].rooms[room]);\n//       }\n//       // console.log(i)\n//       // console.log(\"hi\")\n//     }\n\n//     console.log('aaaa', expenseLists.length)\n//     console.log(expenseLists);\n\n\n//     setKeepstate(expenseLists);\n//     //console.log(keepstate)\n//     //console.log(JSON.stringify(keepstate))\n//     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n//       //allroom\n//       keepstate\n\n\n//     ).then((response) => {\n//       console.log('done')\n//       console.log(response);\n//       console.log(keepstate)\n//     })\n//       .catch(error => {\n//         console.log(error.response)\n//       })\n\n//   };\n\n//   //get\n//   const [xpense, setXpense] = useState([])\n//   const [isTrue, setIsTrue] = useState(false)\n\n//   React.useEffect(() => {\n//     const fetchData = () => {\n//       axios.get('/rentingtransaction/electricity-water-expenses/4')\n//         .then(r => {\n//           setXpense(r.data)\n//         })\n//     };\n//     fetchData()\n//   }, [])\n//   console.log(xpense)\n\n//   console.log(xpense)\n\n//   return (\n//     // <div className=\"container\">\n//     <div style={{ width: '100%' }}>\n//       <ScrollView>\n//         <div className={isOpened ? classes.scrollspace36 : classes.scrollspace} >\n//           {/* <div style={{width: 1163, position: 'relative', margin:\"auto\"}}> */}\n\n//           <Tab.Container defaultActiveKey=\"home\">\n//             <div >\n//               {/* <main > */}\n//               {/* <div className={classes.toolbar} /> */}\n//               <div class=\"container d-flex-end\">\n//                 <div class=\"container d-flex-start\" >\n//                   <h4 className={classes.title2}>Expense</h4>\n//                 </div>\n//                 <Table>\n//                   <Nav variant=\"pills\" className={classes.segwrap}>\n//                     <Nav.Item\n//                     // className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnBlue : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#8396B9' } : { backgroundColor: '#FFFFFF' }}\n//                         onClick={() => setIsTrue(true)} eventKey=\"home\">\n\n//                         <div className={isTrue ? classes.makeCenterBlue : classes.makeCenterWhite}>\n//                           Electricity\n//                         </div>\n\n\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                     <Nav.Item\n//                     // className={true ? classes.segmentbtnWhite : classes.segmentbtnWhite}\n//                     >\n//                       <Nav.Link\n//                         className={isTrue ? classes.segmentbtnWhite : classes.segmentbtnWhite} style={isTrue ? { backgroundColor: '#FFFFFF' } : { backgroundColor: '#8396B9' }}\n//                         onClick={() => setIsTrue(false)} eventKey=\"link-1\">\n\n\n//                         <div className={isTrue ? classes.makeCenterWhite : classes.makeCenterBlue} >\n//                           Water\n//                         </div>\n\n//                       </Nav.Link>\n//                     </Nav.Item>\n//                   </Nav>\n\n//                   <TableBody>\n//                     <br />\n\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"home\">\n\n//                         <input\n//                           type=\"date\" />\n\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody style={{ width: 2500 }}>\n//                                   {/* <div className=\"container \"> */}\n\n//                                   {/*<button onClick={()=> xpense}> Test </button>*/}\n//                                   <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                   {build.floors.map((f) => {\n//                                     return (\n//                                       <Card style={{\n//                                         minWidth: '1163px',\n//                                         maxWidth: '1163px',\n//                                       }} variant=\"outlined\">\n//                                         <Table style={{ width: '100%' }}>\n//                                           {/* <TableHead >\n//                                             <h5 className={classes.heder}>Floor{f.floorName}</h5>\n//                                             <TableRow > */}\n//                                             <div className={classes.headfloor} >\n//                                                 Floor \n//                                                 <div style={{ position: 'absolute', paddingTop: '6px' }}>\n\n//                                                     <text className={classes.floortext}>\n//                                                         Room\n//                                                     </text>\n//                                                     <text className={classes.floortext} style={{ marginRight: '163px' }}>\n//                                                         Bill Period\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previos Date\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Previous Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Current Reading\n//                                                     </text>\n//                                                     <text className={classes.floortext}>\n//                                                         Usage\n//                                                     </text>\n\n//                                                 </div>\n//                                             </div>\n//                                             {/* </TableRow>\n//                                           </TableHead> */}\n//                                           {f.rooms.map((r) => {\n//                                             return (\n//                                               <TableBody>\n//                                                 <TableRow>\n//                                                   {/*<TableCell align=\"left\">{r.roomId}</TableCell> */}\n//                                                   <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                   <TableCell align=\"left\">\n//                                                     { //moment /*(r.billPeriod).format(\"L\")*/\n//                                                       r.billPeriod\n//                                                     }\n//                                                   </TableCell>\n//                                                   <TableCell align=\"left\"\n//                                                   /*onChange={(event) =>{\n//                                                         setPreviousDate(event.target.value);\n//                                                         }}*/\n//                                                   >\n//                                                     {moment(r.previousDate).format(\"L\")}\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n//                                                     {r.electricityPreviousReading}\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n//                                                     <input\n//                                                       id={r.roomId}\n//                                                       size=\"small\"\n//                                                       type=\"text\"\n//                                                       onChange={(event) => {\n\n//                                                         /*let newXpense = xpense\n//                                                         const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                         //newXpense[objIndex]= event.target.value \n//                                                         //setXpense(newXpense); \n//                                                         r.electricityCurrentReading = event.target.value\n//                                                         //setElecCurrent(event.target.value); \n\n//                                                       }}\n//                                                     />\n//                                                   </TableCell>\n\n//                                                   <TableCell align=\"left\">\n\n//                                                   </TableCell>\n\n//                                                 </TableRow>\n//                                               </TableBody>\n//                                             )\n//                                           })}\n//                                         </Table>\n//                                       </Card>\n//                                     )\n//                                   })}\n//                                   {/* </div> */}\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Button  \n//         style={{position:'absolute'}}\n//             type=\"submit\"   \n//             id=\"1\"          \n//             onClick={Expensesave}>\n//           <Savebtn save=\"save\"/> \n//         </Button> */}\n//                         </div>\n//                       </Tab.Pane>\n//                     </Tab.Content>\n\n\n//                     <Tab.Content>\n//                       <Tab.Pane eventKey=\"link-1\">\n//                         <div className=\"App\">\n//                           <Table aria-label=\"caption table\">\n//                             {xpense.map((build) => {\n//                               return (\n//                                 <TableBody>\n//                                   <div className=\"container \">\n//                                     {/* <button onClick={()=>handlerChangeJSOn()}> BTN  </button>*/}\n\n//                                     <h4 className={classes.Tabmove}>{build.buildingName}</h4>\n//                                     {build.floors.map((f) => {\n//                                       return (\n//                                         <Card className={classes.Spacing} variant=\"outlined\">\n//                                           <Table aria-label=\"caption table\">\n//                                             <TableHead >\n//                                               <h5 className={classes.heder}>Floor {f.floorName}</h5>\n//                                               <TableRow>\n//                                                 <TableCell>Room</TableCell>\n//                                                 <TableCell>Bill Period</TableCell>\n//                                                 <TableCell>Previous Date</TableCell>\n//                                                 <TableCell>Previous Reaading</TableCell>\n//                                                 <TableCell>Current Reading</TableCell>\n//                                                 <TableCell >Usage</TableCell>\n//                                               </TableRow>\n//                                             </TableHead>\n//                                             {f.rooms.map((r) => {\n//                                               return (\n//                                                 <TableBody>\n//                                                   <TableRow>\n//                                                     <TableCell align=\"left\">{r.roomName}</TableCell>\n//                                                     <TableCell align=\"left\">{r.billPeriod}</TableCell>\n//                                                     <TableCell align=\"left\">{r.previousDate}</TableCell>\n//                                                     <TableCell align=\"left\">\n\n//                                                     </TableCell>\n\n//                                                     <TableCell>\n//                                                       <input\n//                                                         id={r.roomId}\n//                                                         size=\"small\"\n//                                                         type=\"text\"\n//                                                         onChange={(event) => {\n\n\n//                                                           /*let newXpense = xpense\n//                                                           const objIndex = newXpense.findIndex((obj=> obj.roomId ==event.target.id))*/\n//                                                           //newXpense[objIndex]= event.target.value \n//                                                           //setXpense(newXpense); \n//                                                           r['WaterCurrentReading'] = event.target.value\n//                                                           //setElecCurrent(event.target.value); \n\n//                                                         }}\n\n//                                                       />\n//                                                     </TableCell>\n//                                                     <TableCell align=\"left\">\n\n//                                                     </TableCell>\n//                                                   </TableRow>\n\n//                                                 </TableBody>\n//                                               )\n//                                             })}\n//                                           </Table>\n//                                         </Card>\n//                                       )\n//                                     })}\n//                                   </div>\n//                                 </TableBody>\n//                               )\n//                             })}\n//                           </Table>\n//                           {/*<Savebtn  \n//                           type=\"submit\"  \n//                           id=\"2\"      \n//                            onClick={Expensesave} \n//                               save=\"save\"\n//        /> */}\n\n//                         </div>\n//                         { /*Water*/}\n//                       </Tab.Pane>\n//                     </Tab.Content>\n//                   </TableBody>\n//                 </Table>\n//               </div>\n//               {/* </main> */}\n\n//             </div>\n\n//           </Tab.Container>\n//         </div>\n//       </ScrollView>\n//       <div style={{ position: 'absolute', width: '100%', height: 200, top: 620 }}>\n//         <Button\n//           type=\"submit\"\n//           id=\"1\"\n//           onClick={Expensesave}\n//           style={{ backgroundColor: \"#485D84\", width: 406, height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1, position: 'absolute', left: 540, top: 40 }}>\n//           SAVE\n//         </Button>\n//         <div style={{\n//           backgroundColor: '#385CA8', opacity: 0.5\n//           , width: \"100%\", height: 200, position: 'relative'\n//         }}>\n\n//         </div>\n//       </div>\n//     </div>\n\n\n//     // </div>\n//   );\n// }\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js'\nimport { ScrollView } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Divider } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    frame: {\n        width: '1163px',\n        height: '273px',\n    },\n    scrollspace: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 110,\n        transition: 'all 0.5s ease'\n    },\n    scrollspace36: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 36,\n        transition: 'all 0.5s ease'\n\n    },\n    footerbtn: {\n\n    },\n\n\n    //floor\n\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(1),\n        marginRight: 40\n\n    },\n    papercard: {\n        width: '1163px',\n        boxShadow: \"0px 0px 0px #E8E8E8\",\n        minHeight: '233px',\n        //   margin: 'auto',\n        marginLeft: 0,\n        marginBottom: \"16px\",\n        //   backgroundColor:'green',\n        position: 'relative',\n        borderRadius: 5,\n        border: '0.75px solid #AAAAAA'\n\n    },\n    floortext: {\n        display: 'inline',\n        marginRight: '113px',\n        color: '#4A4A4A',\n        fontSize: '13px',\n        fontWeight: 'bold',\n        position: 'relative',\n\n    },\n    headfloor: {\n        // display: 'block',\n        color: '#4A4A4A',\n        fontWeight: 'bold',\n        fontSize: '16px',\n        posiotion: 'absolute',\n        marginLeft: '45px',\n        paddingTop: '14px'\n    },\n    minitext: {\n        fontSize: '11.3px',\n        color: '#AAAAAA',\n        position: 'absolute',\n        fontWeight: '300',\n        marginLeft: '643.5px',\n        top: 0,\n        marginTop: '25px'\n    },\n\n    //segment\n\n    segmentbtnBlue: {\n        width: 161.8,\n        height: 31.5,\n        backgroundColor: \"#8396B9\",\n        color: \"#FFFFFF\",\n        textTransform: \"none\",\n        borderRadius: 5,\n        fontSize: 16.18,\n        fontWeight: 'bold',\n        position: 'relative'\n    },\n    segmentbtnWhite: {\n        width: 161.8,\n        height: 31.5,\n        backgroundColor: \"#FFFFFF\",\n        color: \"#4A4A4A\",\n        textTransform: \"none\",\n        borderRadius: 5,\n        fontSize: 16.18,\n        position: 'relative'\n    },\n    segwrap: {\n        // border: '1px solid #AAAAAA'\n        flex: 'wrap'\n        , display: 'flex'\n        , width: 'fit-content',\n        backgroundColor: '#FFFFFF',\n        borderRadius: 5\n\n    },\n\n    makeCenter: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        top: 3\n    }\n\n    //\n\n    , title2: {\n        fontSize: '19.4px',\n        color: '#4A4A4A',\n        fontWeight: 'bold',\n        position: 'absolute',\n        top: 60\n\n    }\n\n    , title2bl: {\n        fontSize: '19.4px',\n        color: '#4A4A4A',\n        fontWeight: 'bold',\n        position: 'absolute',\n        top: 230\n    },\n\n    //room card\n    paperrow: {\n        margin: 'auto',\n        maxWidth: '1163px',\n        height: '54px',\n        position: 'relative',\n        boxShadow: 'none',\n        borderBottom: '1px solid #D8D8D8',\n    },\n    newdetext: {\n        position: 'absolute',\n        color: '#4A4A4A',\n        fontSize: '13px',\n        marginTop: \"17px\",\n        fontWeight: '400'\n    },\n    infobutton: {\n        position: 'absolute',\n        width: '24px',\n        height: '24px',\n        marginTop: \"14.5px\",\n        marginLeft: \"1086px\",\n        color: \"#485D84\"\n    },\n    inputbox: {\n        position: 'absolute',\n        height: \"24px\",\n        width: \"101px\",\n        fontSize: '13px',\n        fontWeight: '400',\n        color: '#4A4A4A',\n        marginTop: '14.7px'\n\n    }\n\n}));\n\nexport default function Verifypage({ isOpened }) {\n    const classes = useStyles();\n\n    const [currentSelect, setCurrentSelect] = useState(0)\n    const [allData, setAllData] = useState([])\n    const [allTransaction, setAllTransaction] = useState([])\n    const [rentTrans, setRentTrans] = useState([])\n\n    useEffect(async () => {\n        console.log(\"in Use Eff first row\")\n\n        await axios(`/rentingtransaction/electricity-water-expenses/4`)\n            .then(response => {\n                console.log(response.data, \"in response\")\n                setAllData(response.data)\n                getAlltrans(response.data[0])\n\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n\n    }, []);\n\n    function getAlltrans(data) {\n        for (var i = 0; i < data.floors.length; i++) {\n\n            for (var j = 0; j < data.floors[i].rooms.length; j++) {\n                allTransaction.push(data.floors[i].rooms[j].userRentingTransaction)\n            }\n\n        }\n        setRentTrans(data.floors[0].rooms[0].rentingTransactionId)\n        console.log(rentTrans + \"This is rent trans\")\n        console.log(allTransaction)\n    }\n\n    const sureVeuify = async () => {\n\n        let res = await axios({\n            url: `/rentingtransaction/verify-electricity-water-expenses`,\n            method: 'post',\n            data: [\n                {\n                    \"UserTransactionIds\": allTransaction,\n                    \"RentingTransactionId\": parseInt(rentTrans)\n                }\n            ]\n\n        }).then(response => {\n            alert(\"post success\")\n            // window.location.href = `/feetype_sp/${id}`;\n        })\n            .catch(error => {\n                alert(\"post fail\")\n                console.log('Error getting fake data: ' + error);\n            })\n\n    }\n\n\n\n    // https://habitat1.azurewebsites.net/api/v1/rentingtransaction/electricity-water-expenses/4\n\n    return (\n        <div style={{ width: '100%' }}>\n            <ScrollView>\n                <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n                    <div>\n                        <div className={classes.frame} style={{ position: 'relative' }}>\n                            <Datetoday />\n                            <div className={classes.title2} >\n                                Verificated Expense\n                            </div>\n\n                            <div className={classes.segwrap} style={{ position: 'absolute', top: 101 }}>\n                                <div className={currentSelect == 0 ? classes.segmentbtnBlue : classes.segmentbtnWhite}\n                                    onClick={() => setCurrentSelect(0)}>\n\n                                    <text className={classes.makeCenter}>\n                                        Electricity\n                                    </text>\n\n                                </div>\n\n                                <div className={currentSelect == 1 ? classes.segmentbtnBlue : classes.segmentbtnWhite} onClick={() => setCurrentSelect(1)}>\n                                    <text className={classes.makeCenter}>\n                                        Water\n                                    </text>\n                                </div>\n\n                            </div>\n\n                            <div className={classes.title2bl}>\n                                {allData.length > 0 ? allData[0].buildingName : \"\"}\n                            </div>\n                        </div>\n\n                        <div>\n                            <div>\n                                {allData.length > 0 && allData[0].floors.map((floor, index) => {\n                                    return (\n                                        <Paper className={classes.papercard}>\n                                            <div className={classes.headfloor} >\n                                                Floor {floor.floorName}\n                                                <div style={{ position: 'absolute', paddingTop: '6px' }}>\n\n                                                    <text className={classes.floortext}>\n                                                        Room\n                                                    </text>\n                                                    <text className={classes.floortext} style={{ marginRight: '163px' }}>\n                                                        Bill Period\n                                                    </text>\n                                                    <text className={classes.floortext}>\n                                                        Previos Date\n                                                    </text>\n                                                    <text className={classes.floortext}>\n                                                        Previous Reading\n                                                    </text>\n                                                    <text className={classes.floortext}>\n                                                        Current Reading\n                                                    </text>\n                                                    <text className={classes.floortext}>\n                                                        Usage\n                                                    </text>\n\n                                                </div>\n                                            </div>\n                                            <Divider style={{ backgroundColor: \"#AAAAAA\", marginTop: \"50px\", height: 0.5 }} />\n                                            {floor.rooms.map((room, i) => {\n                                                return (\n                                                    <Paper className={classes.paperrow}>\n                                                        <div className={classes.newdetext} style={{ left: 45 }}>\n                                                            {/* {props.roomid} */}\n                                                            {room.roomName}\n                                                        </div>\n                                                        <div className={classes.newdetext} style={{ left: 196 }}>\n                                                            {/* 27/03/21-27/03/21 */}\n                                                            { moment(room.startTime).format(\"DD/MM/YYYY\")}-{moment(room.endTime).format(\"DD/MM/YYYY\")}\n\n                                                            \n                                                        </div>\n                                                        <div className={classes.newdetext} style={{ left: 422 }}>\n                                                            {/* 27/04/2021 */}\n                                                            {/* {room.previousDate} */}\n                                                            {/* {moment(room.previousDate.replace(/[^a-zA-Z0-9]/g, \"\")).format(\"L\")} */}\n                                                            { moment(room.previousDate).format(\"DD/MM/YYYY\")}\n\n                                                        </div>\n                                                        <div className={classes.newdetext} style={{ right: 441 }}>\n                                                            {currentSelect == 0 ? room.electricityPreviousReading : room.waterPreviousReading}\n                                                        </div>\n                                                        <div className={classes.inputbox} contenteditable={\"true\"} style={{ right: 222, backgroundColor:'red' }}>\n                                                            {currentSelect == 0 ? room.electricityCurrentReading : room.waterCurrentReading}\n                                                        </div>\n                                                        <div className={classes.newdetext} style={{ right: 74 }}>\n                                                            {currentSelect == 0 ? room.electricityUsage : room.waterUsage}\n                                                        </div>\n\n                                                    </Paper>\n                                                )\n                                            })}\n                                            {/* <Roomcard /> */}\n\n                                        </Paper>\n                                    )\n                                })\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{height: 100}}/>\n                </div >\n            </ScrollView >\n\n            <div style={{ position: 'absolute', width: '100%', height: 200, top: 655 }}>\n                <Button\n                    onClick={sureVeuify}\n                    style={{\n                        backgroundColor: \"#485D84\", width: 406,\n                        height: 42.87, color: \"#FFFFFF\", fontSize: 21, zIndex: 1,\n                        position: 'absolute', left: 540, top: 40\n                    }}>\n                    SUBMIT\n                </Button>\n                <div style={{\n                    backgroundColor: '#385CA8', opacity: 0.5\n                    , width: \"100%\", height: 200, position: 'relative'\n                }}>\n\n                </div>\n            </div>\n        </div >\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}