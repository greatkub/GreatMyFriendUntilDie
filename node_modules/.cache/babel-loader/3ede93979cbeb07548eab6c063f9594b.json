{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/Initialize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\nimport { ScrollView } from 'react-native';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  heder: {\n    width: '100%',\n    padding: theme.spacing(1),\n    marginTop: '-2%'\n  },\n  Card: {\n    width: '60%',\n    padding: theme.spacing(3),\n    margin: 'auto'\n  },\n  Cards: {\n    width: '100%',\n    padding: theme.spacing(1),\n    margin: 'auto'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  // title: {\n  //     fontSize: 14,\n  // },\n  pos: {\n    marginBottom: 12\n  },\n  Btn: {\n    marginLeft: \"92%\",\n    marginTop: \"-6%\"\n  },\n  title: {\n    fontSize: '22.6px',\n    color: '#4A4A4A',\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 26.6,\n    left: 42\n  },\n  mainFame: {\n    width: 755,\n    minHeight: 721,\n    backgroundColor: '#FFFFFF',\n    position: 'relative',\n    border: '0.75px solid #AAAAAA',\n    borderRadius: 5 // flexWrap: 'wrap'\n\n  },\n  mainFameHeader: {\n    height: 85,\n    width: \"100%\",\n    borderBottom: '0.75px solid #AAAAAA'\n  },\n  inFame: {\n    width: 605,\n    minHeight: 141.5,\n    position: 'relative',\n    borderRadius: '5px',\n    border: '0.75px solid #AAAAAA'\n  },\n  inFameHeader: {\n    width: \"100%\",\n    height: 86.5,\n    borderBottom: '0.75px solid #AAAAAA'\n  }\n}));\nexport default function Initialize(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 18\n  }, this);\n\n  const [allroom, setAllroom] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [addDate, setAddDate] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios(`/building/rooms/${id}`).then(response => {\n      console.log(\"hi\" + response.data);\n      setAllroom(response.data);\n      insertObj();\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n      setLoading(false);\n    });\n  }, [isLoading]);\n  /*const [stroom, setStroom] = useState([])\n    React.useEffect(() => {\n      const fetchData = () =>{\n       axios.get('/building/rooms/1')\n      .then(r => {  \n        \n      setStroom(r.data)\n       for (const data in r.data) {\n        for (const floor in data){\n          for (const room in floor.room)    \n          {\n            let Initial ={\n                id: \"1\",\n                roomNumber: \"1\"  \n                }\n                stroom.push(Calculate)\n            }  \n          }\n         }    \n      })\n      \n    };\n    fetchData()\n  }, [])*/\n\n  function handlerChangeJSOn() {\n    allroom[0].buildingName = \"Laila\";\n    setKeepstate(allroom[3].floors[0].rooms);\n    console.log(keepstate);\n  }\n\n  const [newArray, setNewArray] = useState([]);\n  const [onlyRoom, setOnlyRoom] = useState([]);\n\n  function insertObj() {\n    for (var i = 0; i < allroom.length; i++) {\n      for (var j = 0; j < allroom[i].room.length; j++) {\n        // var a = addObjToRoom(allroom[i].room[j],'SetupDate', '22')\n        // console.log(a)\n        allroom[i].room[j] = {\n          \"roomId\": parseInt(allroom[i].room[j].id),\n          \"SetupDate\": \"2021-09-16\",\n          \"roomNumber\": allroom[i].room[j].roomNumber,\n          \"ElectricityReading\": \"12\",\n          \"WaterReading\": \"14\"\n        };\n      }\n    }\n\n    console.log(\"huffe\" + allroom);\n    setNewArray(allroom);\n    setLoading(false);\n  }\n\n  const api = axios.create({\n    baseURL: `/InitializeExpenses/initialize-expenses/`\n  });\n\n  const addWaterElec = async () => {\n    console.log(finalroom);\n    let res = await axios({\n      url: `/InitializeExpenses/initialize-expenses/`,\n      method: 'post',\n      data: finalroom\n    }).then(response => {\n      alert(\"post success\");\n      window.location.href = `/feetype_sp/${id}`;\n    }).catch(error => {\n      alert(\"post fail\");\n      console.log('Error getting fake data: ' + error);\n    }); // let res = await api.post('/',\n    //     finalroom\n    // ).then(response => {\n    //     alert(\"post success\")\n    // })\n    // .catch(error => {\n    //     alert(\"post fail\")\n    //     console.log('Error getting fake data: ' + error);\n    // })\n  };\n\n  const [keepstate, setKeepstate] = useState([]);\n  const [finalroom, setfinalroom] = useState(); // const Expensesave = event => {\n  //     event.preventDefault();\n  //     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n  //         keepstate\n  //     ).then((response) => {\n  //         console.log(response);\n  //     })\n  // };\n\n  function handleaddDateChange(r, e) {\n    r.SetupDate = String(addDate);\n    r.ElectricityReading = String(e);\n  }\n\n  function handleaddDateChange2(r, e) {\n    r.SetupDate = String(addDate);\n    r.WaterReading = String(e);\n  }\n\n  async function handlesubmit() {\n    setOnlyRoom([]);\n\n    for (let i = 0; i < newArray.length; i++) {\n      for (let j = 0; j < newArray[i].room.length; j++) {\n        onlyRoom.push(newArray[i].room[j]);\n      }\n    }\n\n    console.log(onlyRoom);\n    setfinalroom(onlyRoom); // await addWaterElec()\n  }\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ScrollView, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: '650px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.mainFame,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"aria-label\": \"caption table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        className: classes.mainFameHeader,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: classes.title,\n                          children: \"Initial Expense\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          type: \"date\",\n                          size: \"small\",\n                          variant: \"outlined\",\n                          onChange: e => {\n                            setAddDate(e.target.value);\n                            handlesubmit();\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"container\",\n                      children: newArray.map(set => {\n                        return /*#__PURE__*/_jsxDEV(Card, {\n                          className: classes.inFame,\n                          variant: \"outlined\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            className: classes.inFa,\n                            children: set.FloorName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 305,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Table, {\n                            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                                className: classes.heder,\n                                children: [\"Floor \", set.floorName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 308,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                  children: \"Rooms\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 311,\n                                  columnNumber: 73\n                                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                  align: \"center\",\n                                  children: \"Electricity Reading\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 73\n                                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                  align: \"center\",\n                                  children: \"Water Reading\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 313,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 310,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 307,\n                              columnNumber: 65\n                            }, this), set.room.map(r => {\n                              return /*#__PURE__*/_jsxDEV(TableBody, {\n                                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                    align: \"left\",\n                                    children: r.roomNumber\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 321,\n                                    columnNumber: 81\n                                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                    align: \"center\",\n                                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                      size: \"small\",\n                                      variant: \"outlined\",\n                                      onChange: e => handleaddDateChange(r, e.target.value)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 323,\n                                      columnNumber: 85\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 322,\n                                    columnNumber: 81\n                                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                    align: \"center\",\n                                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                      size: \"small\",\n                                      variant: \"outlined\",\n                                      onChange: e => handleaddDateChange2(r, e.target.value)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 331,\n                                      columnNumber: 85\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 330,\n                                    columnNumber: 81\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 320,\n                                  columnNumber: 77\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 319,\n                                columnNumber: 73\n                              }, this);\n                            })]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: 200\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          bottom: -20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: \"#485D84\",\n            width: 406,\n            height: 42.87,\n            color: \"#FFFFFF\",\n            fontSize: 21,\n            zIndex: 1,\n            position: 'absolute',\n            left: 540,\n            top: 40\n          } // onClick={() => handlesubmit()}\n          ,\n          onClick: addWaterElec,\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#385CA8',\n            opacity: 0.5,\n            width: \"100%\",\n            height: 140,\n            position: 'relative'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Initialize, \"vbU5lzYwXurEBC0AKSjyUQDrMmY=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Initialize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Initialize\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/Initialize.js"],"names":["React","useEffect","useState","makeStyles","Card","Button","Typography","TableHead","TableRow","TableBody","TableCell","Table","DeleteOutlinedIcon","TextField","DeleteSweepOutlinedIcon","ScrollView","useParams","axios","BrowserRouter","Rounter","Route","Link","NavLink","Switch","useStyles","theme","root","minWidth","heder","width","padding","spacing","marginTop","margin","Cards","bullet","display","transform","pos","marginBottom","Btn","marginLeft","title","fontSize","color","fontWeight","position","top","left","mainFame","minHeight","backgroundColor","border","borderRadius","mainFameHeader","height","borderBottom","inFame","inFameHeader","Initialize","props","classes","bull","allroom","setAllroom","isLoading","setLoading","addDate","setAddDate","id","then","response","console","log","data","insertObj","catch","error","handlerChangeJSOn","buildingName","setKeepstate","floors","rooms","keepstate","newArray","setNewArray","onlyRoom","setOnlyRoom","i","length","j","room","parseInt","roomNumber","api","create","baseURL","addWaterElec","finalroom","res","url","method","alert","window","location","href","setfinalroom","handleaddDateChange","r","e","SetupDate","String","ElectricityReading","handleaddDateChange2","WaterReading","handlesubmit","push","target","value","map","set","inFa","FloorName","floorName","bottom","zIndex","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\nimport { ScrollView } from 'react-native';\nimport { useParams } from 'react-router';\n\nimport axios from 'axios';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n\n    heder: {\n        width: '100%',\n        padding: theme.spacing(1),\n        marginTop: '-2%',\n    },\n\n    Card: {\n        width: '60%',\n        padding: theme.spacing(3),\n        margin: 'auto',\n    },\n\n    Cards: {\n        width: '100%',\n        padding: theme.spacing(1),\n        margin: 'auto',\n    },\n\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    // title: {\n    //     fontSize: 14,\n    // },\n\n    pos: {\n        marginBottom: 12,\n    },\n\n    Btn: {\n        marginLeft: \"92%\",\n        marginTop: \"-6%\",\n    },\n    title: {\n        fontSize: '22.6px',\n        color: '#4A4A4A',\n        fontWeight: 'bold',\n        position: 'absolute',\n        top: 26.6,\n        left: 42\n    },\n    mainFame: {\n        width: 755,\n        minHeight: 721,\n        backgroundColor: '#FFFFFF',\n        position: 'relative',\n        border: '0.75px solid #AAAAAA',\n        borderRadius: 5,\n        // flexWrap: 'wrap'\n\n    },\n    mainFameHeader: {\n        height: 85,\n        width: \"100%\",\n        borderBottom: '0.75px solid #AAAAAA'\n    },\n    inFame: {\n        width: 605,\n        minHeight: 141.5,\n        position: 'relative',\n        borderRadius: '5px',\n        border: '0.75px solid #AAAAAA'\n\n    },\n    inFameHeader: {\n        width: \"100%\",\n        height: 86.5,\n        borderBottom: '0.75px solid #AAAAAA',\n\n    },\n}));\n\nexport default function Initialize(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [allroom, setAllroom] = useState([]);\n    const [isLoading, setLoading] = useState(true)\n    const [addDate, setAddDate] = useState(\"\")\n    const { id } = useParams()\n\n    useEffect(() => {\n        axios(`/building/rooms/${id}`)\n            .then(response => {\n                console.log(\"hi\" + response.data)\n                setAllroom(response.data);\n                insertObj()\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n                setLoading(false)\n            })\n    }, [isLoading]);\n\n\n\n\n    /*const [stroom, setStroom] = useState([])\n      React.useEffect(() => {\n        const fetchData = () =>{\n         axios.get('/building/rooms/1')\n        .then(r => {  \n          \n        setStroom(r.data)\n         for (const data in r.data) {\n          for (const floor in data){\n            for (const room in floor.room)    \n            {\n              let Initial ={\n                  id: \"1\",\n                  roomNumber: \"1\"  \n                  }\n                  stroom.push(Calculate)\n              }  \n            }\n           }    \n        })\n        \n      };\n      fetchData()\n    }, [])*/\n\n\n\n    function handlerChangeJSOn() {\n        allroom[0].buildingName = \"Laila\"\n        setKeepstate(allroom[3].floors[0].rooms)\n        console.log(keepstate)\n    }\n\n\n    const [newArray, setNewArray] = useState([])\n    const [onlyRoom, setOnlyRoom] = useState([])\n\n    function insertObj() {\n        for (var i = 0; i < allroom.length; i++) {\n\n\n            for (var j = 0; j < allroom[i].room.length; j++) {\n                // var a = addObjToRoom(allroom[i].room[j],'SetupDate', '22')\n                // console.log(a)\n                allroom[i].room[j] = {\n                    \"roomId\": parseInt(allroom[i].room[j].id),\n                    \"SetupDate\": \"2021-09-16\",\n                    \"roomNumber\": allroom[i].room[j].roomNumber,\n                    \"ElectricityReading\": \"12\",\n                    \"WaterReading\": \"14\"\n                }\n\n            }\n\n        }\n        console.log(\"huffe\" + allroom)\n        setNewArray(allroom)\n        setLoading(false)\n\n    }\n    const api = axios.create({\n        baseURL: `/InitializeExpenses/initialize-expenses/`\n    })\n\n\n    const addWaterElec = async () => {\n        console.log(finalroom)\n\n        let res = await axios({\n            url: `/InitializeExpenses/initialize-expenses/`,\n            method: 'post',\n            data: finalroom\n\n        }).then(response => {\n            alert(\"post success\")\n            window.location.href = `/feetype_sp/${id}`;\n        })\n            .catch(error => {\n                alert(\"post fail\")\n                console.log('Error getting fake data: ' + error);\n            })\n\n\n\n        // let res = await api.post('/',\n\n        //     finalroom\n\n        // ).then(response => {\n        //     alert(\"post success\")\n        // })\n        // .catch(error => {\n        //     alert(\"post fail\")\n        //     console.log('Error getting fake data: ' + error);\n        // })\n    }\n\n\n    const [keepstate, setKeepstate] = useState([])\n\n    const [finalroom, setfinalroom] = useState()\n    // const Expensesave = event => {\n    //     event.preventDefault();\n    //     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n\n    //         keepstate\n\n    //     ).then((response) => {\n    //         console.log(response);\n    //     })\n    // };\n\n\n\n    function handleaddDateChange(r, e) {\n        r.SetupDate = String(addDate)\n        r.ElectricityReading = String(e)\n    }\n\n    function handleaddDateChange2(r, e) {\n        r.SetupDate = String(addDate)\n        r.WaterReading = String(e)\n    }\n\n    async function handlesubmit() {\n        setOnlyRoom([])\n        for (let i = 0; i < newArray.length; i++) {\n            for (let j = 0; j < newArray[i].room.length; j++) {\n                onlyRoom.push(newArray[i].room[j])\n            }\n        }\n        console.log(onlyRoom)\n\n        setfinalroom(onlyRoom)\n\n\n        // await addWaterElec()\n\n    }\n\n\n    if (!isLoading) {\n\n\n        return (\n            <div style={{ width: '100%', position: 'relative' }}>\n                <ScrollView>\n\n                    <div className=\"container\">\n                        {/* <button onClick={() => console.log(finalroom)}>\n\n                        </button> */}\n                        <div>\n                            <div style={{ width: '100%', height: '650px' }}>\n\n                                <div className={classes.mainFame}>\n                                    <Table aria-label=\"caption table\">\n                                        <TableHead >\n                                            <TableRow>\n                                                <TableCell className={classes.mainFameHeader}>\n                                                    <div className={classes.title}>Initial Expense</div>\n                                                    <br />\n                                                    <TextField\n                                                        type=\"date\"\n                                                        size=\"small\"\n                                                        variant=\"outlined\"\n                                                        onChange={e => { setAddDate(e.target.value); handlesubmit() }}\n                                                    />\n\n\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n\n                                            <div className=\"container\">\n                                                {/* <h4>{set.building}</h4> */}\n                                                {newArray.map((set) => {\n                                                    return (\n\n                                                        <Card className={classes.inFame} variant=\"outlined\">\n                                                            <h5 className={classes.inFa}>{set.FloorName}</h5>\n                                                            <Table>\n                                                                <TableHead >\n                                                                    <h5 className={classes.heder}>Floor {set.floorName}</h5>\n\n                                                                    <TableRow>\n                                                                        <TableCell>Rooms</TableCell>\n                                                                        <TableCell align=\"center\">Electricity Reading</TableCell>\n                                                                        <TableCell align=\"center\">Water Reading</TableCell>\n                                                                    </TableRow>\n\n                                                                </TableHead>\n                                                                {set.room.map((r) => {\n                                                                    return (\n                                                                        <TableBody>\n                                                                            <TableRow>\n                                                                                <TableCell align=\"left\">{r.roomNumber}</TableCell>\n                                                                                <TableCell align=\"center\">\n                                                                                    <input\n                                                                                        size=\"small\"\n                                                                                        variant=\"outlined\"\n                                                                                        onChange={e => handleaddDateChange(r, e.target.value)}\n                                                                                    />\n                                                                                </TableCell>\n\n                                                                                <TableCell align=\"center\">\n                                                                                    <input\n                                                                                        size=\"small\"\n                                                                                        variant=\"outlined\"\n                                                                                        onChange={e => handleaddDateChange2(r, e.target.value)}\n                                                                                    />\n                                                                                </TableCell>\n                                                                            </TableRow>\n                                                                        </TableBody>\n                                                                    )\n                                                                })}\n\n                                                            </Table>\n\n\n                                                        </Card>\n\n                                                    )\n                                                })}\n                                            </div>\n\n                                        </TableBody>\n\n                                    </Table>\n                                </div>\n\n                                <div style={{ height: 200 }}>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </ScrollView>\n                <div style={{ position: 'absolute', width: '100%', bottom: -20 }}>\n                    {/* <Link to='/feetype_sp' style={{ textDecoration: \"none\" }}> */}\n                    <Button style={{\n                        backgroundColor: \"#485D84\",\n                        width: 406, height: 42.87, color: \"#FFFFFF\",\n                        fontSize: 21, zIndex: 1,\n                        position: 'absolute', left: 540, top: 40\n                    }}\n                        // onClick={() => handlesubmit()}\n                        onClick={addWaterElec}\n                    >\n                        SAVE\n                    </Button>\n                    {/* </Link > */}\n\n                    <div\n                        style={{\n                            backgroundColor: '#385CA8',\n                            opacity: 0.5, width: \"100%\", height: 140, position: 'relative'\n                        }}>\n                    </div>\n                </div>\n            </div>\n\n        );\n    } else {\n        return (\n            <div >\n                Loading . . .\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}