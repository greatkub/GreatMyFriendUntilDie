{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/Initialize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\nimport { ScrollView } from 'react-native';\nimport Backdrop from '@mui/material/Backdrop';\nimport axios from 'axios';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  heder: {\n    width: '100%',\n    padding: theme.spacing(1),\n    marginTop: '-2%'\n  },\n  Card: {\n    width: '60%',\n    padding: theme.spacing(3),\n    margin: 'auto'\n  },\n  Cards: {\n    width: '100%',\n    padding: theme.spacing(1),\n    margin: 'auto'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  Btn: {\n    marginLeft: \"92%\",\n    marginTop: \"-6%\"\n  }\n}));\nexport default function Initialize(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 18\n  }, this);\n\n  const [allroom, setAllroom] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [addDate, setAddDate] = useState(\"\");\n  useEffect(() => {\n    axios('/building/rooms/4').then(response => {\n      console.log(\"hi\" + response.data);\n      setAllroom(response.data);\n      insertObj();\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n      setLoading(false);\n    });\n  }, [isLoading]);\n  /*const [stroom, setStroom] = useState([])\n    React.useEffect(() => {\n      const fetchData = () =>{\n       axios.get('/building/rooms/1')\n      .then(r => {  \n        \n      setStroom(r.data)\n       for (const data in r.data) {\n        for (const floor in data){\n          for (const room in floor.room)    \n          {\n            let Initial ={\n                id: \"1\",\n                roomNumber: \"1\"  \n                }\n                stroom.push(Calculate)\n            }  \n          }\n         }    \n      })\n      \n    };\n    fetchData()\n  }, [])*/\n\n  function handlerChangeJSOn() {\n    allroom[0].buildingName = \"Laila\";\n    setKeepstate(allroom[3].floors[0].rooms);\n    console.log(keepstate);\n  }\n\n  const [newArray, setNewArray] = useState([]);\n  const [onlyRoom, setOnlyRoom] = useState([]);\n\n  function insertObj() {\n    for (var i = 0; i < allroom.length; i++) {\n      for (var j = 0; j < allroom[i].room.length; j++) {\n        // var a = addObjToRoom(allroom[i].room[j],'SetupDate', '22')\n        // console.log(a)\n        allroom[i].room[j] = {\n          \"roomId\": parseInt(allroom[i].room[j].id),\n          \"SetupDate\": \"2021-09-16\",\n          \"roomNumber\": allroom[i].room[j].roomNumber,\n          \"ElectricityReading\": \"12\",\n          \"WaterReading\": \"14\"\n        };\n      }\n    }\n\n    console.log(\"huffe\" + allroom);\n    setNewArray(allroom);\n    setLoading(false);\n  }\n\n  const api = axios.create({\n    baseURL: `/InitializeExpenses/initialize-expenses/`\n  });\n\n  const addWaterElec = async () => {\n    console.log(finalroom);\n    let res = await axios({\n      url: `/InitializeExpenses/initialize-expenses/`,\n      method: 'post',\n      data: finalroom\n    }).then(response => {\n      alert(\"post success\");\n    }).catch(error => {\n      alert(\"post fail\");\n      console.log('Error getting fake data: ' + error);\n    }); // let res = await api.post('/',\n    //     finalroom\n    // ).then(response => {\n    //     alert(\"post success\")\n    // })\n    // .catch(error => {\n    //     alert(\"post fail\")\n    //     console.log('Error getting fake data: ' + error);\n    // })\n  };\n\n  const [keepstate, setKeepstate] = useState([]);\n  const [finalroom, setfinalroom] = useState(); // const Expensesave = event => {\n  //     event.preventDefault();\n  //     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n  //         keepstate\n  //     ).then((response) => {\n  //         console.log(response);\n  //     })\n  // };\n\n  function handleaddDateChange(r, e) {\n    r.SetupDate = String(addDate);\n    r.ElectricityReading = String(e);\n  }\n\n  function handleaddDateChange2(r, e) {\n    r.SetupDate = String(addDate);\n    r.WaterReading = String(e);\n  }\n\n  async function handlesubmit() {\n    setOnlyRoom([]);\n\n    for (let i = 0; i < newArray.length; i++) {\n      for (let j = 0; j < newArray[i].room.length; j++) {\n        onlyRoom.push(newArray[i].room[j]);\n      }\n    }\n\n    console.log(onlyRoom);\n    setfinalroom(onlyRoom); // await addWaterElec()\n  }\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: open,\n      onClick: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ScrollView, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => console.log(finalroom)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100%',\n                  height: '650px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.Card,\n                  variant: \"outlined\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    \"aria-label\": \"caption table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: /*#__PURE__*/_jsxDEV(TableCell, {\n                          className: classes.heder,\n                          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                            children: \"Initial Expense\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 250,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            type: \"date\",\n                            size: \"small\",\n                            variant: \"outlined\",\n                            onChange: e => {\n                              setAddDate(e.target.value);\n                              handlesubmit();\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 251,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"container\",\n                        children: newArray.map(set => {\n                          return /*#__PURE__*/_jsxDEV(Card, {\n                            className: classes.Cards,\n                            variant: \"outlined\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              className: classes.heder,\n                              children: set.FloorName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(Table, {\n                              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                                  className: classes.heder,\n                                  children: [\"Floor\", set.FloorNumber]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 271,\n                                  columnNumber: 73\n                                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                    children: \"Rooms\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 274,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                    align: \"center\",\n                                    children: \"Electricity Reading\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 275,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                    align: \"center\",\n                                    children: \"Water Reading\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 277,\n                                    columnNumber: 77\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 273,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 270,\n                                columnNumber: 69\n                              }, this), set.room.map(r => {\n                                return /*#__PURE__*/_jsxDEV(TableBody, {\n                                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                      align: \"left\",\n                                      children: r.roomNumber\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 285,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                      align: \"center\",\n                                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                        size: \"small\",\n                                        variant: \"outlined\",\n                                        onChange: e => handleaddDateChange(r, e.target.value)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 287,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 286,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                      align: \"center\",\n                                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                        size: \"small\",\n                                        variant: \"outlined\",\n                                        onChange: e => handleaddDateChange2(r, e.target.value)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 295,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 294,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 284,\n                                    columnNumber: 81\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 283,\n                                  columnNumber: 77\n                                }, this);\n                              })]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 269,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 61\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: 200\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            width: '100%',\n            bottom: -20\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"#485D84\",\n              width: 406,\n              height: 42.87,\n              color: \"#FFFFFF\",\n              fontSize: 21,\n              zIndex: 1,\n              position: 'absolute',\n              left: 540,\n              top: 40\n            } // onClick={() => handlesubmit()}\n            ,\n            onClick: addWaterElec,\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#385CA8',\n              opacity: 0.5,\n              width: \"100%\",\n              height: 140,\n              position: 'relative'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Initialize, \"aeVQ0lZKy4lhhmhWB1pZZvs7W78=\", false, function () {\n  return [useStyles];\n});\n\n_c = Initialize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Initialize\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STFloor/Initialize.js"],"names":["React","useEffect","useState","makeStyles","Card","Button","Typography","TableHead","TableRow","TableBody","TableCell","Table","DeleteOutlinedIcon","TextField","DeleteSweepOutlinedIcon","ScrollView","Backdrop","axios","BrowserRouter","Rounter","Route","Link","NavLink","Switch","useStyles","theme","root","minWidth","heder","width","padding","spacing","marginTop","margin","Cards","bullet","display","transform","title","fontSize","pos","marginBottom","Btn","marginLeft","Initialize","props","classes","bull","allroom","setAllroom","isLoading","setLoading","addDate","setAddDate","then","response","console","log","data","insertObj","catch","error","handlerChangeJSOn","buildingName","setKeepstate","floors","rooms","keepstate","newArray","setNewArray","onlyRoom","setOnlyRoom","i","length","j","room","parseInt","id","roomNumber","api","create","baseURL","addWaterElec","finalroom","res","url","method","alert","setfinalroom","handleaddDateChange","r","e","SetupDate","String","ElectricityReading","handleaddDateChange2","WaterReading","handlesubmit","push","color","zIndex","drawer","open","handleClose","position","height","target","value","map","set","FloorName","FloorNumber","bottom","backgroundColor","left","top","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from '@material-ui/core/Table';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\nimport { ScrollView } from 'react-native';\nimport Backdrop from '@mui/material/Backdrop';\n\nimport axios from 'axios';\nimport { BrowserRouter as Rounter, Route, Link, NavLink, Switch } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n\n    heder: {\n        width: '100%',\n        padding: theme.spacing(1),\n        marginTop: '-2%',\n    },\n\n    Card: {\n        width: '60%',\n        padding: theme.spacing(3),\n        margin: 'auto',\n    },\n\n    Cards: {\n        width: '100%',\n        padding: theme.spacing(1),\n        margin: 'auto',\n    },\n\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    title: {\n        fontSize: 14,\n    },\n\n    pos: {\n        marginBottom: 12,\n    },\n\n    Btn: {\n        marginLeft: \"92%\",\n        marginTop: \"-6%\",\n    }\n}));\n\nexport default function Initialize(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [allroom, setAllroom] = useState([]);\n    const [isLoading, setLoading] = useState(true)\n    const [addDate, setAddDate] = useState(\"\")\n\n    useEffect(() => {\n        axios('/building/rooms/4')\n            .then(response => {\n                console.log(\"hi\" + response.data)\n                setAllroom(response.data);\n                insertObj()\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n                setLoading(false)\n            })\n    }, [isLoading]);\n\n    /*const [stroom, setStroom] = useState([])\n      React.useEffect(() => {\n        const fetchData = () =>{\n         axios.get('/building/rooms/1')\n        .then(r => {  \n          \n        setStroom(r.data)\n         for (const data in r.data) {\n          for (const floor in data){\n            for (const room in floor.room)    \n            {\n              let Initial ={\n                  id: \"1\",\n                  roomNumber: \"1\"  \n                  }\n                  stroom.push(Calculate)\n              }  \n            }\n           }    \n        })\n        \n      };\n      fetchData()\n    }, [])*/\n\n\n\n    function handlerChangeJSOn() {\n        allroom[0].buildingName = \"Laila\"\n        setKeepstate(allroom[3].floors[0].rooms)\n        console.log(keepstate)\n    }\n\n\n    const [newArray, setNewArray] = useState([])\n    const [onlyRoom, setOnlyRoom] = useState([])\n\n    function insertObj() {\n        for (var i = 0; i < allroom.length; i++) {\n\n\n            for (var j = 0; j < allroom[i].room.length; j++) {\n                // var a = addObjToRoom(allroom[i].room[j],'SetupDate', '22')\n                // console.log(a)\n                allroom[i].room[j] = {\n                    \"roomId\": parseInt(allroom[i].room[j].id),\n                    \"SetupDate\": \"2021-09-16\",\n                    \"roomNumber\": allroom[i].room[j].roomNumber,\n                    \"ElectricityReading\": \"12\",\n                    \"WaterReading\": \"14\"\n                }\n\n            }\n\n        }\n        console.log(\"huffe\" + allroom)\n        setNewArray(allroom)\n        setLoading(false)\n\n\n    }\n    const api = axios.create({\n        baseURL: `/InitializeExpenses/initialize-expenses/`\n    })\n\n\n    const addWaterElec = async () => {\n        console.log(finalroom)\n\n        let res = await axios({\n            url: `/InitializeExpenses/initialize-expenses/`,\n            method: 'post',\n            data: finalroom\n\n        }).then(response => {\n            alert(\"post success\")\n        })\n            .catch(error => {\n                alert(\"post fail\")\n                console.log('Error getting fake data: ' + error);\n            })\n\n\n\n        // let res = await api.post('/',\n\n        //     finalroom\n\n        // ).then(response => {\n        //     alert(\"post success\")\n        // })\n        // .catch(error => {\n        //     alert(\"post fail\")\n        //     console.log('Error getting fake data: ' + error);\n        // })\n    }\n\n\n    const [keepstate, setKeepstate] = useState([])\n\n    const [finalroom, setfinalroom] = useState()\n    // const Expensesave = event => {\n    //     event.preventDefault();\n    //     axios.post(\"/rentingtransaction/electricity-water-expenses\",\n\n    //         keepstate\n\n    //     ).then((response) => {\n    //         console.log(response);\n    //     })\n    // };\n\n\n\n    function handleaddDateChange(r, e) {\n        r.SetupDate = String(addDate)\n        r.ElectricityReading = String(e)\n    }\n\n    function handleaddDateChange2(r, e) {\n        r.SetupDate = String(addDate)\n        r.WaterReading = String(e)\n    }\n\n    async function handlesubmit() {\n        setOnlyRoom([])\n        for (let i = 0; i < newArray.length; i++) {\n            for (let j = 0; j < newArray[i].room.length; j++) {\n                onlyRoom.push(newArray[i].room[j])\n            }\n        }\n        console.log(onlyRoom)\n\n        setfinalroom(onlyRoom)\n\n\n        // await addWaterElec()\n\n    }\n\n\n    if (!isLoading) {\n\n\n        return (\n            <Backdrop\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={open}\n                onClick={handleClose}\n            >\n                <CircularProgress color=\"inherit\" />\n                <div style={{ width: '100%', position: 'relative' }}>\n                    <ScrollView>\n\n                        <div className=\"container\">\n                            <button onClick={() => console.log(finalroom)}>\n\n                            </button>\n                            <div>\n                                <div style={{ width: '100%', height: '650px' }}>\n\n                                    <Card className={classes.Card} variant=\"outlined\">\n                                        <Table aria-label=\"caption table\">\n                                            <TableHead >\n                                                <TableRow>\n                                                    <TableCell className={classes.heder}>\n                                                        <h4>Initial Expense</h4>\n                                                        <br />\n                                                        <TextField\n                                                            type=\"date\"\n                                                            size=\"small\"\n                                                            variant=\"outlined\"\n                                                            onChange={e => { setAddDate(e.target.value); handlesubmit() }}\n                                                        />\n                                                    </TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n\n                                                <div className=\"container\">\n                                                    {/* <h4>{set.building}</h4> */}\n                                                    {newArray.map((set) => {\n                                                        return (\n\n                                                            <Card className={classes.Cards} variant=\"outlined\">\n                                                                <h5 className={classes.heder}>{set.FloorName}</h5>\n                                                                <Table>\n                                                                    <TableHead >\n                                                                        <h5 className={classes.heder}>Floor{set.FloorNumber}</h5>\n\n                                                                        <TableRow>\n                                                                            <TableCell>Rooms</TableCell>\n                                                                            <TableCell align=\"center\">Electricity Reading</TableCell>\n\n                                                                            <TableCell align=\"center\">Water Reading</TableCell>\n                                                                        </TableRow>\n\n                                                                    </TableHead>\n                                                                    {set.room.map((r) => {\n                                                                        return (\n                                                                            <TableBody>\n                                                                                <TableRow>\n                                                                                    <TableCell align=\"left\">{r.roomNumber}</TableCell>\n                                                                                    <TableCell align=\"center\">\n                                                                                        <input\n                                                                                            size=\"small\"\n                                                                                            variant=\"outlined\"\n                                                                                            onChange={e => handleaddDateChange(r, e.target.value)}\n                                                                                        />\n                                                                                    </TableCell>\n\n                                                                                    <TableCell align=\"center\">\n                                                                                        <input\n                                                                                            size=\"small\"\n                                                                                            variant=\"outlined\"\n                                                                                            onChange={e => handleaddDateChange2(r, e.target.value)}\n                                                                                        />\n                                                                                    </TableCell>\n                                                                                </TableRow>\n                                                                            </TableBody>\n                                                                        )\n                                                                    })}\n\n                                                                </Table>\n\n\n                                                            </Card>\n\n                                                        )\n                                                    })}\n                                                </div>\n\n                                            </TableBody>\n\n                                        </Table>\n                                    </Card>\n\n                                    <div style={{ height: 200 }}>\n\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </ScrollView>\n                    <div style={{ position: 'absolute', width: '100%', bottom: -20 }}>\n                        {/* <Link to='/feetype_sp' style={{ textDecoration: \"none\" }}> */}\n                        <Button style={{\n                            backgroundColor: \"#485D84\",\n                            width: 406, height: 42.87, color: \"#FFFFFF\",\n                            fontSize: 21, zIndex: 1,\n                            position: 'absolute', left: 540, top: 40\n                        }}\n                            // onClick={() => handlesubmit()}\n                            onClick={addWaterElec}\n\n                        >\n                            SAVE\n                        </Button>\n                        {/* </Link > */}\n                        <div\n                            style={{\n                                backgroundColor: '#385CA8',\n                                opacity: 0.5, width: \"100%\", height: 140, position: 'relative'\n                            }}>\n                        </div>\n                    </div>\n                </div>\n            </Backdrop>\n\n\n        );\n    } else {\n        return (\n            <div >\n                Loading . . .\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}