{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STRoom/STRoompage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js';\nimport { ScrollView } from 'react-native';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Floorcom from './STRoomComp/Floorcom.js';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport DisplayDialog from './DisplayDialog.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    width: '1163px',\n    height: '232px',\n    backgroundColor: 'red',\n    position: \"relative\"\n  },\n  scrollspace: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 110,\n    transition: 'all 0.5s ease'\n  },\n  scrollspace36: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 36,\n    transition: 'all 0.5s ease'\n  },\n  texttitle: {\n    fontSize: \"19px\",\n    fontWeight: \"bold\",\n    color: \"#4A4A4A\"\n  }\n}));\nexport default function STRoompage({\n  isOpened\n}) {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => {\n    axios('/room/room-types').then(response => {\n      console.log(response.data);\n      setAllFloor(response.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  const [allFloor, setAllFloor] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [count, setCount] = useState(0); // useEffect(() => {\n  //     findpositionElement()\n  //     console.log(\"ffjefnekjfe\")\n  // }, [])\n\n  function findpositionElement() {\n    for (var i = 0; i < allFloor.length; i++) {\n      if (allFloor[i].floorName == \"2\") {\n        console.log(i);\n        return setCount(i);\n      }\n\n      console.log(i);\n    }\n\n    return 1;\n  } // const [currentSelect, setCurrentSelect] = useState([])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayDialog, {\n      trigger: buttonPopup,\n      setTrigger: setButtonPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollView // scrollEnabled={!buttonPopup}\n    , {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpened ? classes.scrollspace36 : classes.scrollspace,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '58px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.frame,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.texttitle,\n              children: \"Room Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.texttitle,\n              style: {\n                position: 'absolute',\n                bottom: 19\n              },\n              children: \"King Solomon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: false ? allFloor.map((item, index) => /*#__PURE__*/_jsxDEV(Floorcom // key={index}\n            // getcurrentSelect = {currentSelect => setCurrentSelect(currentSelect)}\n            , {\n              setTrigger: setButtonPopup,\n              floorName: item.floorName,\n              allFloor: allFloor[index].rooms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)) : allFloor.filter(floor => floor.floorName == '2').map((item, index) => /*#__PURE__*/_jsxDEV(Floorcom // key={index}\n            // getcurrentSelect = {currentSelect => setCurrentSelect(currentSelect)}\n            , {\n              setTrigger: setButtonPopup,\n              floorName: item.floorName,\n              allFloor: allFloor[findpositionElement()].rooms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(STRoompage, \"gNHO73+RXASZdHWUXtRRU9mPTPo=\", false, function () {\n  return [useStyles];\n});\n\n_c = STRoompage;\n\nvar _c;\n\n$RefreshReg$(_c, \"STRoompage\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STRoom/STRoompage.js"],"names":["React","makeStyles","Datetoday","ScrollView","useState","Link","Floorcom","axios","useEffect","DisplayDialog","useStyles","theme","frame","width","height","backgroundColor","position","scrollspace","margin","paddingLeft","transition","scrollspace36","texttitle","fontSize","fontWeight","color","STRoompage","isOpened","classes","then","response","console","log","data","setAllFloor","catch","error","allFloor","buttonPopup","setButtonPopup","count","setCount","findpositionElement","i","length","floorName","bottom","map","item","index","rooms","filter","floor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js'\nimport { ScrollView } from 'react-native';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Floorcom from './STRoomComp/Floorcom.js';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport DisplayDialog from './DisplayDialog.js';\n\nconst useStyles = makeStyles((theme) => ({\n    frame: {\n        width: '1163px',\n        height: '232px',\n        backgroundColor: 'red',\n        position: \"relative\"\n    },\n\n    scrollspace: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 110,\n        transition: 'all 0.5s ease'\n\n    },\n    scrollspace36: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 36,\n        transition: 'all 0.5s ease'\n\n    },\n    texttitle: {\n        fontSize: \"19px\",\n        fontWeight: \"bold\",\n        color: \"#4A4A4A\"\n    }\n}));\n\nexport default function STRoompage({ isOpened }) {\n    const classes = useStyles();\n    useEffect(() => {\n        axios('/room/room-types')\n            .then(response => {\n                console.log(response.data)\n                setAllFloor(response.data);\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n    }, []);\n    const [allFloor, setAllFloor] = useState([]);\n    const [buttonPopup, setButtonPopup] = useState(false)\n\n    const [count, setCount] = useState(0)\n\n    // useEffect(() => {\n    //     findpositionElement()\n    //     console.log(\"ffjefnekjfe\")\n    // }, [])\n\n    function findpositionElement() {\n        for (var i = 0; i < allFloor.length; i++) {\n            if(allFloor[i].floorName == \"2\") {\n                console.log(i)\n                return setCount(i)\n            }\n           console.log(i)\n\n        } \n        return 1\n    }\n\n    // const [currentSelect, setCurrentSelect] = useState([])\n\n\n    return (\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n            <DisplayDialog\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup} />\n\n            <ScrollView\n            // scrollEnabled={!buttonPopup}\n            >\n                <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n                    <div>\n                        <div style={{ height: '58px' }}></div>\n                        <div className={classes.frame}>\n                            <div className={classes.texttitle}>\n                                Room Types\n                            </div>\n\n                            <div className={classes.texttitle} style={{ position: 'absolute', bottom: 19 }}>\n                                King Solomon\n                            </div>\n                        </div>\n                        <div>\n                            {/* {allFloor.filter(floor => floor.floorName == '2').map((item, index) => ( */}\n                            {false ?\n                                allFloor.map((item, index) => (\n\n                                    <Floorcom\n                                        // key={index}\n                                        // getcurrentSelect = {currentSelect => setCurrentSelect(currentSelect)}\n                                        setTrigger={setButtonPopup}\n                                        floorName={item.floorName}\n                                        allFloor={allFloor[index].rooms}\n                                    />\n                                ))\n                                :\n                                allFloor.filter(floor => floor.floorName == '2').map((item, index) => (\n                                    <Floorcom\n                                        // key={index}\n                                        // getcurrentSelect = {currentSelect => setCurrentSelect(currentSelect)}\n                                        setTrigger={setButtonPopup}\n                                        floorName={item.floorName}\n                                        allFloor={allFloor[findpositionElement()].rooms}\n                                    />\n                                ))}\n\n\n\n                            {/* {allData.map((value, index) => {\n                            return value.type === \"Important News\" ?\n                                <ImpNews\n                                    key={index}\n                                    Name={value.title}\n                                    img={value.imageUrl}\n                                    //cell={value.description}\n                                    Date={value.announceDate}\n                                    ID={value.id} />\n                                : null\n\n                        })} */}\n\n                        </div>\n\n                    </div>\n                </div>\n            </ScrollView>\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}