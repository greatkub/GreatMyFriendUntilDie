{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/testjmae.js\",\n    _s = $RefreshSig$();\n\nimport { storage } from \"./page/RoomManagement/\";\nimport { useState, useEffect } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function testjmae() {\n  _s();\n\n  const [image, setImage] = useState(null);\n\n  const onImageChange = e => {\n    const reader = new FileReader();\n    let file = e.target.files[0]; // get the supplied file\n    // if there is a file, set image to that file\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          console.log(file);\n          setImage(file);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]); // if there is no file, set image back to null\n    } else {\n      setImage(null);\n    }\n  };\n\n  const uploadToFirebase = () => {\n    //1.\n    if (image) {\n      //2.\n      const storageRef = storage.ref(); //3.\n\n      const imageRef = storageRef.child(image.name); //4.\n\n      imageRef.put(image) //5.\n      .then(() => {\n        alert(\"Image uploaded successfully to Firebase.\");\n      });\n    } else {\n      alert(\"Please upload an image first.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/x-png,image/jpeg\",\n      onChange: e => {\n        onImageChange(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Upload to Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(testjmae, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/testjmae.js"],"names":["storage","useState","useEffect","React","testjmae","image","setImage","onImageChange","e","reader","FileReader","file","target","files","onload","readyState","console","log","readAsDataURL","uploadToFirebase","storageRef","ref","imageRef","child","name","put","then","alert"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,QAAIC,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX,CAFyB,CAEK;AAC9B;;AACA,QAAIF,IAAJ,EAAU;AACRF,MAAAA,MAAM,CAACK,MAAP,GAAgB,MAAM;AACpB,YAAIL,MAAM,CAACM,UAAP,KAAsB,CAA1B,EAA6B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAL,UAAAA,QAAQ,CAACK,IAAD,CAAR;AACD;AACF,OALD;;AAMAF,MAAAA,MAAM,CAACS,aAAP,CAAqBV,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB,EAPQ,CAQV;AACC,KATD,MASO;AACLP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAhBH;;AAkBE,QAAMa,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAId,KAAJ,EAAW;AACT;AACA,YAAMe,UAAU,GAAGpB,OAAO,CAACqB,GAAR,EAAnB,CAFS,CAGT;;AACA,YAAMC,QAAQ,GAAGF,UAAU,CAACG,KAAX,CAAiBlB,KAAK,CAACmB,IAAvB,CAAjB,CAJS,CAKT;;AACAF,MAAAA,QAAQ,CAACG,GAAT,CAAapB,KAAb,EACD;AADC,OAEAqB,IAFA,CAEK,MAAM;AACTC,QAAAA,KAAK,CAAC,0CAAD,CAAL;AACH,OAJC;AAKD,KAXD,MAWO;AACLA,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,GAhBD;;AAmBF,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,wBAA1B;AAAmD,MAAA,QAAQ,EAAGnB,CAAD,IAAO;AAACD,QAAAA,aAAa,CAACC,CAAD,CAAb;AAAmB;AAAxF;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAhDuBJ,Q","sourcesContent":["import {storage} from \"./page/RoomManagement/\";\nimport { useState, useEffect } from \"react\";\n\nimport React from 'react'\n\nexport default function testjmae() {\n\n    const [image, setImage] = useState(null);\n    const onImageChange = (e) => {\n        const reader = new FileReader();\n        let file = e.target.files[0]; // get the supplied file\n        // if there is a file, set image to that file\n        if (file) {\n          reader.onload = () => {\n            if (reader.readyState === 2) {\n              console.log(file);\n              setImage(file);\n            }\n          };\n          reader.readAsDataURL(e.target.files[0]);\n        // if there is no file, set image back to null\n        } else {\n          setImage(null);\n        }\n      };\n\n      const uploadToFirebase = () => {\n        //1.\n        if (image) {\n          //2.\n          const storageRef = storage.ref();\n          //3.\n          const imageRef = storageRef.child(image.name);\n          //4.\n          imageRef.put(image)\n         //5.\n         .then(() => {\n            alert(\"Image uploaded successfully to Firebase.\");\n        });\n        } else {\n          alert(\"Please upload an image first.\");\n        }\n      };\n    \n    \n    return (\n        <div>\n            <input type=\"file\" accept=\"image/x-png,image/jpeg\" onChange={(e) => {onImageChange(e); }}/>\n\n            <button>Upload to Firebase</button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}