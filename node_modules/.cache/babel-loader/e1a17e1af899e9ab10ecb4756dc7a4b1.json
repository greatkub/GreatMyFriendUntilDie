{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/Components/Anouncement/Socialcard.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import TextField from '@material-ui/core/TextField';\n// import ImpNews from '../../Components/Anouncement/Important';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import { makeStyles, withStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import MuiDialogTitle from '@material-ui/core/DialogTitle';\n// import MuiDialogContent from '@material-ui/core/DialogContent';\n// import Divider from '@material-ui/core/Divider';\n// import MuiDialogActions from '@material-ui/core/DialogActions';\n// import Dialog from \"@material-ui/core/Dialog\";\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\n// import DialogActions from \"@material-ui/core/DialogActions\";\n// import Typography from '@material-ui/core/Typography';\n// import General from \"../../Components/Anouncement/General\";\n// import Button from '@material-ui/core/Button';\n// import { Link } from \"react-router-dom\";\n// import \"../../Css/Announcement/Socialcard.css\";\n// import { Grid } from '@material-ui/core';\n// import Arraylist from './Arraylist';\n// import Datetoday from '../AllComponent/Datetoday'\n// import moment from 'moment';\n// import ImageIcon from '@material-ui/icons/Image';\n// import { Update } from '@material-ui/icons';\n// import { IconButton } from '@material-ui/core';\n// import DropFloor from '../Dropdown/DropFloor';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 90,\n//     // marginTop: -25,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//     change: {\n//       color: 'black'\n//     },\n//     Font: {\n//       fontFamily: [\n//         '\"Helvetica Neue\"',\n//       ].join(','),\n//     },\n//     Move: {\n//       marginright: '500%',\n//       marginTop: \"-5%\",\n//       display: \"block\",\n//       '& > * + *': {\n//         marginTop: theme.spacing(5),\n//       },\n//       Btn: {\n//         marginleft: '5%',\n//       },\n//     },\n//   },\n//   importimgbtn: {\n//     height: '38px',\n//     width: '38px',\n//     paddingRight: theme.spacing(5),\n//   }\n// }));\n// const useStyles2 = makeStyles({\n//   dialog: {\n//     position: 'absolute',\n//     // left: 0,\n//     // top: 0,\n//     bottom: -33,\n//     right: 10,\n//     minWidth: \"650px\",\n//     minHeight: \"560px\",\n//     maxHeight: \"560px\",\n//     borderRadius: '8px',\n//   },\n//   imgbtn: {\n//     height: '33px',\n//     weight: '33px'\n//   },\n//   importimgbtn: {\n//     height: '38px',\n//     width: '38px',\n//     marginLeft: '28px'\n//   }\n//   // paper: { minWidth: \"500px\" },\n// });\n// const DialogActions2 = withStyles((theme) => ({\n//   root: {\n//     paddingBottom: theme.spacing(5),\n//     paddingRight: theme.spacing(3),\n//   },\n// }))(MuiDialogActions);\n// const api = axios.create({\n//   baseURL: '/announcement/announcement'\n// })\n// function Social() {\n//   const classes2 = useStyles2();\n//   const classes = useStyles();\n//   const [open, setOpen] = React.useState(false);\n//   const [currentAnnounce, setCurrentAnnounce] = useState(0)\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//     // console.log(currentAnnounce)\n//   };\n//   const imagefunction = () => {\n//     console.log(\"CLICKED\");\n//   }\n//   const [allData, setAllData] = useState([]);\n//   const [filteredData, setFilteredData] = useState(allData);\n//   // const handleSearch = (event) => {\n//   //   let value = event.target.value.toLowerCase();\n//   //   let result = [];\n//   //   console.log(value);\n//   //   result = allData.filter((data) => {\n//   //     return data.tite.search(value) != -1;\n//   //   });\n//   //   setFilteredData(result);\n//   // }\n//   useEffect(() => {\n//     // axios('https://60aa459d66f1d000177729b4.mockapi.io/api/v1/announcement')\n//     // axios('https://536a20dd-fe69-4914-8458-6ad1e9b3ce18.mock.pstmn.io/imandgen')\n//     axios('/announcement/announcements')\n//       .then(response => {\n//         console.log(\"hi\" + response.data)\n//         setAllData(response.data);\n//         setFilteredData(response.data);\n//       })\n//       .catch(error => {\n//         console.log('Error getting fake data: ' + error);\n//       })\n//   }, []);\n//   // onClick={this.createNew}\n//   const addNews = async () => {\n//     let res = await api.post('/', {\n//       \"Title\": title,\n//       \"TypeId\": parseInt(currentAnnounce),\n//       \"AnnounceDate\": datecreate,\n//       \"Description\": descrip,\n//       \"ImageUrl\": \"https://cdn.wallpapersafari.com/36/96/7cRSqV.png\",\n//       \"StaffId\": 1\n//     }\n//     ).then(response => {\n//       alert(\"Post Success\")\n//       console.log(response.data)\n//     })\n//       .catch(error => {\n//         alert(\"Post Fail\")\n//       })\n//   }\n//   const [title, setTitle] = useState(\"\")\n//   // const [type, setType] = useState(0)\n//   const [datecreate, setDatecreate] = useState(\"\")\n//   const [descrip, setDescrip] = useState(\"\")\n//   //   const handleChange = (e) => {\n//   //     setTitle({value: e.target.value})\n//   // }\n//   return (\n//     <div>\n//       <div className=\"row\" style={{ marginLeft: '-15px', marginRight: '0px', border: 'none' }}>\n//         <Datetoday />\n//       </div>\n//       {/* <div className=\"col-md-2\"> */}\n//       {/* <div className={classes.Move} > */}\n//       {/* <Button variant=\"contained\" color=\"primary\" disableElevation\n//           style={{ backgroundColor: '#485D84' }}\n//         onClick={handleClickOpen}>\n//         Compose\n//       </Button>    */}\n//       <Dialog\n//         classes={{ paper: classes2.dialog }}\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"edit-apartment\"\n//       >\n//         {/* <DialogTitle id=\"edit-apartment\"> */}\n//         <h5 id=\"newannouncetitle\">  New Announcement </h5>\n//         {/* </DialogTitle> */}\n//         <div className=\"divider\"> </div>\n//         <DialogContent>\n//           <DialogContentText>\n//           </DialogContentText>\n//           <div className=\"movetotop\">\n//             <form noValidate>\n//               <div>\n//                 <p>\n//                   <label id=\"titletitle\"  >Title</label>\n//                   <div className=\"spacing12\"></div>\n//                   <input\n//                     className=\"titleinput\"\n//                     placeholder=\"Title\"\n//                     type=\"Buildingname\"\n//                     name=\"text\"\n//                     noValidate\n//                     onChange={(event) => {\n//                       setTitle(event.target.value)\n//                     }}\n//                   />\n//                 </p>\n//               </div>\n//               <div >\n//                 <form>\n//                   <label id=\"typetitle\" htmlFor=\"Province\" >Type</label>\n//                   <div className=\"spacing9\"></div>\n//                   <Arraylist\n//                     url='/announcement/type-announcements'\n//                     save={currentAnnounce => setCurrentAnnounce(currentAnnounce)}\n//                   />\n//                 </form>\n//               </div>\n//               <div className=\"spacing12\"></div>\n//               <div >\n//                 <p>\n//                   <label id=\"datetitle\" htmlFor=\"Date\">Date</label>\n//                   <div className=\"spacing12\"></div>\n//                   <input\n//                     className=\"dateinput\"\n//                     placeholder=\"Date\"\n//                     type=\"date\"\n//                     name=\"Date\"\n//                     noValidate\n//                     onChange={(event) => {\n//                       setDatecreate(event.target.value)\n//                     }}\n//                   />\n//                 </p>\n//               </div>\n//               <div className=\"Description\">\n//                 <label id=\"descriptiontitle\" htmlFor=\"Date\">Description</label>\n//                 <textarea className=\"Des\"\n//                   placeholder=\"Description\"\n//                   type=\"text\"\n//                   name=\"Description\"\n//                   noValidate\n//                   onChange={(event) => {\n//                     setDescrip(event.target.value)\n//                   }}\n//                 />\n//               </div>\n//             </form>\n//           </div>\n//         </DialogContent>\n//         <DialogActions2 >\n//           <IconButton className={classes.importimgbtn} onClick={imagefunction}>\n//             <ImageIcon className={classes2.importimgbtn} style={{ color: '#4A4A4A' }} /> </IconButton>\n//           {/* <input type=\"file\"></input> */}\n//           <Button id=\"announceBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n//             onClick={addNews}>\n//             <p id=\"textAnnounceBt\"> Announce</p>\n//           </Button>\n//           <div className=\"spacing\" />\n//           <Button id=\"cancelBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n//             onClick={handleClose}>\n//             <p id=\"cancelAnnounceBt\">Cancel</p>\n//           </Button>\n//         </DialogActions2>\n//       </Dialog>\n//       {/* </div> */}\n//       <div>\n//       </div>\n//       {/* </div> */}\n//       <Grid className=\"row colorG grab\">\n//         <div className=\"colorG\">\n//           <div className=\"newH\">\n//             <h5 id=\"announcementheader\" className=\"headAnnounce\" >\n//               Announcement\n//             </h5>\n//           </div>\n//           {/* <div className=\"AppBack\">                     */}\n//           <div className=\"greatcards-container\">\n//             {/* <div className=\"row\">\n//                   </div> */}\n//             <Typography gutterBottom variant=\"h5\" component=\"h1\">\n//               <h5 id=\"importanttitle\">Important News</h5>\n//               <div className=\"divider\" />\n//             </Typography>\n//             {allData.map((value, index) => {\n//               return value.type === \"Important News\" ?\n//                 <Link to={`/detailpage/${value.id}`} onClick={() => console.log(value.id)}>\n//                   <ImpNews\n//                     key={index}\n//                     Name={value.title}\n//                     img={value.imageUrl}\n//                     //cell={value.description}\n//                     Date={value.announceDate}\n//                     ID={value.id} />\n//                 </Link>\n//                 : null\n//             })}\n//           </div>\n//         </div>\n//         {/* </div> */}\n//         <div className=\"colorG\">\n//           <div className=\"newH\" >\n//             <Button id=\"Buttoncompose\" className=\"customButton\" variant=\"contained\" color=\"primary\" disableElevation\n//               style={{ backgroundColor: '#485D84' }}\n//               onClick={handleClickOpen}>\n//               <p id=\"editfontbutton\" className=\"mediumfont\">Compose</p>\n//             </Button>\n//           </div>\n//           {/* <div className=\"AppBack2\">  */}\n//           <div className=\"greatcards-container2\">\n//             <Typography gutterBottom variant=\"h5\" component=\"h1\">\n//               <h5 id=\"generaltitle\">General News</h5>\n//               <div className=\"divider\" />\n//             </Typography>\n//             {allData.map((value, index) => {\n//               return value.type !== \"Important News\" ?\n//                 <General\n//                   key={index}\n//                   Name={value.title}\n//                   //cell={value.description}\n//                   img={value.imageUrl}\n//                   Date={value.announceDate}\n//                 //ID ={index.id}             \n//                 />\n//                 : null\n//             })}\n//           </div>\n//         </div>\n//         {/* </div> */}\n//       </Grid>\n//     </div>\n//   );\n// }\n// export default Social;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport ImpNews from '../../Components/Anouncement/Important';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Divider from '@material-ui/core/Divider';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from '@material-ui/core/Typography';\nimport General from \"../../Components/Anouncement/General\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport \"../../Css/Announcement/Socialcard.css\";\nimport { Grid } from '@material-ui/core';\nimport Arraylist from './Arraylist';\nimport Datetoday from '../AllComponent/Datetoday';\nimport moment from 'moment';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Update } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core'; //import DropFloor from '../Dropdown/DropFloor';\n\nimport { storage } from '../../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#fff\",\n    borderRadius: '8px',\n    width: 200,\n    marginBottom: 90,\n    // marginTop: -25,\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    change: {\n      color: 'black'\n    },\n    Font: {\n      fontFamily: ['\"Helvetica Neue\"'].join(',')\n    },\n    Move: {\n      marginright: '500%',\n      marginTop: \"-5%\",\n      display: \"block\",\n      '& > * + *': {\n        marginTop: theme.spacing(5)\n      },\n      Btn: {\n        marginleft: '5%'\n      }\n    }\n  },\n  importimgbtn: {\n    height: '38px',\n    width: '38px',\n    paddingRight: theme.spacing(5)\n  }\n}));\nconst useStyles2 = makeStyles({\n  dialog: {\n    position: 'absolute',\n    // left: 0,\n    // top: 0,\n    bottom: -33,\n    right: 10,\n    minWidth: \"650px\",\n    minHeight: \"560px\",\n    maxHeight: \"560px\",\n    borderRadius: '8px'\n  },\n  imgbtn: {\n    height: '33px',\n    weight: '33px'\n  },\n  importimgbtn: {\n    height: '38px',\n    width: '38px',\n    marginLeft: '28px'\n  } // paper: { minWidth: \"500px\" },\n\n});\nconst DialogActions2 = withStyles(theme => ({\n  root: {\n    paddingBottom: theme.spacing(5),\n    paddingRight: theme.spacing(3)\n  }\n}))(MuiDialogActions);\nconst api = axios.create({\n  baseURL: '/announcement/announcement'\n});\n\nfunction Social() {\n  _s();\n\n  const classes2 = useStyles2();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [currentAnnounce, setCurrentAnnounce] = useState(0);\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref().child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  console.log(\"image: \", image);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false); // console.log(currentAnnounce)\n  };\n\n  const imagefunction = () => {\n    console.log(\"CLICKED\");\n  };\n\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState(allData); // const handleSearch = (event) => {\n  //   let value = event.target.value.toLowerCase();\n  //   let result = [];\n  //   console.log(value);\n  //   result = allData.filter((data) => {\n  //     return data.tite.search(value) != -1;\n  //   });\n  //   setFilteredData(result);\n  // }\n\n  useEffect(() => {\n    // axios('https://60aa459d66f1d000177729b4.mockapi.io/api/v1/announcement')\n    // axios('https://536a20dd-fe69-4914-8458-6ad1e9b3ce18.mock.pstmn.io/imandgen')\n    axios('/announcement/announcements').then(response => {\n      console.log(\"hi\" + response.data);\n      setAllData(response.data);\n      setFilteredData(response.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []); // onClick={this.createNew}\n\n  const addNews = async () => {\n    let res = await api.post('/', {\n      \"Title\": title,\n      \"TypeId\": parseInt(currentAnnounce),\n      \"AnnounceDate\": datecreate,\n      \"Description\": descrip,\n      //\"ImageUrl\": \"https://cdn.wallpapersafari.com/36/96/7cRSqV.png\",\n      \"ImageUrl\": url,\n      \"Likes\": 0,\n      \"Comments\": 0,\n      \"StaffId\": 1\n    });\n  };\n\n  const DeleteAnnounce = id => {\n    axios.post(`/announcement/announcement/${id}`).then(() => {\n      setAllData(allData.filter(row => {\n        return row.id != id;\n      }));\n    });\n  };\n\n  const [title, setTitle] = useState(\"\"); // const [type, setType] = useState(0)\n\n  const [datecreate, setDatecreate] = useState(\"\");\n  const [descrip, setDescrip] = useState(\"\"); //   const handleChange = (e) => {\n  //     setTitle({value: e.target.value})\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        marginLeft: '-15px',\n        marginRight: '0px',\n        border: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Datetoday, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      classes: {\n        paper: classes2.dialog\n      },\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"edit-apartment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        id: \"newannouncetitle\",\n        children: \"  New Announcement \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movetotop\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"titletitle\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spacing12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"titleinput\",\n                  placeholder: \"Title\",\n                  type: \"Buildingname\",\n                  name: \"text\",\n                  noValidate: true,\n                  onChange: event => {\n                    setTitle(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"typetitle\",\n                  htmlFor: \"Province\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spacing9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Arraylist, {\n                  url: \"/announcement/type-announcements\",\n                  save: currentAnnounce => setCurrentAnnounce(currentAnnounce)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacing12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  id: \"datetitle\",\n                  htmlFor: \"Date\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spacing12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"dateinput\",\n                  placeholder: \"Date\",\n                  type: \"date\",\n                  name: \"Date\",\n                  noValidate: true,\n                  onChange: event => {\n                    setDatecreate(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Description\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                id: \"descriptiontitle\",\n                htmlFor: \"Date\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"Des\",\n                placeholder: \"Description\",\n                type: \"text\",\n                name: \"Description\",\n                noValidate: true,\n                onChange: event => {\n                  setDescrip(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions2, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.importimgbtn,\n          onClick: imagefunction,\n          children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n            className: classes2.importimgbtn,\n            style: {\n              color: '#4A4A4A'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            clasName: classes.Choosefile //size=\"40\"\n            ,\n            type: \"file\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 18\n          }, this), url, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"announceBT\",\n          className: classes.Btn,\n          variant: \"contained\",\n          color: \"primary\",\n          disableElevation: true,\n          onClick: addNews,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"textAnnounceBt\",\n            children: \" Announce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"cancelBT\",\n          className: classes.Btn,\n          variant: \"contained\",\n          color: \"primary\",\n          disableElevation: true,\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"cancelAnnounceBt\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"row colorG grab\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colorG\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newH\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            id: \"announcementheader\",\n            className: \"headAnnounce\",\n            children: \"Announcement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greatcards-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              id: \"importanttitle\",\n              children: \"Important News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), allData.map((value, index) => {\n            return value.type === \"Important News\" ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detailpage/${value.id}`,\n              onClick: () => console.log(value.id),\n              children: /*#__PURE__*/_jsxDEV(ImpNews, {\n                Name: value.title,\n                img: value.imageUrl //cell={value.description}\n                ,\n                Date: value.announceDate,\n                ID: value.id\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this) : null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colorG\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newH\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"Buttoncompose\",\n            className: \"customButton\",\n            variant: \"contained\",\n            color: \"primary\",\n            disableElevation: true,\n            style: {\n              backgroundColor: '#485D84'\n            },\n            onClick: handleClickOpen,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"editfontbutton\",\n              className: \"mediumfont\",\n              children: \"Compose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greatcards-container2\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              id: \"generaltitle\",\n              children: \"General News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), allData.map((value, index) => {\n            return value.type !== \"Important News\" ? /*#__PURE__*/_jsxDEV(General, {\n              Name: value.title //cell={value.description}\n              ,\n              img: value.imageUrl,\n              Date: value.announceDate //ID ={index.id}             \n\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 17\n            }, this) : null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 656,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Social, \"FYTT8kTnuewXWMCkge+2903TZ5w=\", false, function () {\n  return [useStyles2, useStyles];\n});\n\n_c = Social;\nexport default Social;\n\nvar _c;\n\n$RefreshReg$(_c, \"Social\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/Components/Anouncement/Socialcard.js"],"names":["React","useState","useEffect","axios","TextField","ImpNews","Autocomplete","makeStyles","withStyles","Paper","MuiDialogTitle","MuiDialogContent","Divider","MuiDialogActions","Dialog","DialogContentText","DialogContent","DialogTitle","DialogActions","Typography","General","Button","Link","Grid","Arraylist","Datetoday","moment","ImageIcon","Update","IconButton","storage","useStyles","theme","root","backgroundColor","borderRadius","width","marginBottom","marginTop","spacing","change","color","Font","fontFamily","join","Move","marginright","display","Btn","marginleft","importimgbtn","height","paddingRight","useStyles2","dialog","position","bottom","right","minWidth","minHeight","maxHeight","imgbtn","weight","marginLeft","DialogActions2","paddingBottom","api","create","baseURL","Social","classes2","classes","open","setOpen","currentAnnounce","setCurrentAnnounce","image","setImage","url","setUrl","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","handleClickOpen","handleClose","imagefunction","allData","setAllData","filteredData","setFilteredData","response","data","catch","addNews","res","post","title","parseInt","datecreate","descrip","DeleteAnnounce","id","filter","row","setTitle","setDatecreate","setDescrip","marginRight","border","paper","event","value","Choosefile","map","index","type","imageUrl","announceDate"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import TextField from '@material-ui/core/TextField';\n// import ImpNews from '../../Components/Anouncement/Important';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import { makeStyles, withStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import MuiDialogTitle from '@material-ui/core/DialogTitle';\n// import MuiDialogContent from '@material-ui/core/DialogContent';\n// import Divider from '@material-ui/core/Divider';\n// import MuiDialogActions from '@material-ui/core/DialogActions';\n// import Dialog from \"@material-ui/core/Dialog\";\n\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\n// import DialogActions from \"@material-ui/core/DialogActions\";\n// import Typography from '@material-ui/core/Typography';\n// import General from \"../../Components/Anouncement/General\";\n// import Button from '@material-ui/core/Button';\n// import { Link } from \"react-router-dom\";\n\n// import \"../../Css/Announcement/Socialcard.css\";\n// import { Grid } from '@material-ui/core';\n// import Arraylist from './Arraylist';\n// import Datetoday from '../AllComponent/Datetoday'\n// import moment from 'moment';\n// import ImageIcon from '@material-ui/icons/Image';\n// import { Update } from '@material-ui/icons';\n// import { IconButton } from '@material-ui/core';\n// import DropFloor from '../Dropdown/DropFloor';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: '8px',\n//     width: 200,\n//     marginBottom: 90,\n//     // marginTop: -25,\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n\n//     change: {\n//       color: 'black'\n//     },\n\n//     Font: {\n//       fontFamily: [\n//         '\"Helvetica Neue\"',\n\n\n//       ].join(','),\n//     },\n\n//     Move: {\n//       marginright: '500%',\n//       marginTop: \"-5%\",\n//       display: \"block\",\n//       '& > * + *': {\n//         marginTop: theme.spacing(5),\n//       },\n\n//       Btn: {\n//         marginleft: '5%',\n//       },\n\n//     },\n\n//   },\n//   importimgbtn: {\n//     height: '38px',\n//     width: '38px',\n//     paddingRight: theme.spacing(5),\n\n//   }\n\n// }));\n\n// const useStyles2 = makeStyles({\n//   dialog: {\n//     position: 'absolute',\n//     // left: 0,\n//     // top: 0,\n//     bottom: -33,\n//     right: 10,\n//     minWidth: \"650px\",\n//     minHeight: \"560px\",\n//     maxHeight: \"560px\",\n//     borderRadius: '8px',\n//   },\n//   imgbtn: {\n//     height: '33px',\n//     weight: '33px'\n//   },\n//   importimgbtn: {\n//     height: '38px',\n//     width: '38px',\n//     marginLeft: '28px'\n//   }\n//   // paper: { minWidth: \"500px\" },\n// });\n\n\n\n\n\n// const DialogActions2 = withStyles((theme) => ({\n//   root: {\n//     paddingBottom: theme.spacing(5),\n//     paddingRight: theme.spacing(3),\n//   },\n\n// }))(MuiDialogActions);\n\n\n// const api = axios.create({\n//   baseURL: '/announcement/announcement'\n// })\n\n\n\n\n// function Social() {\n\n//   const classes2 = useStyles2();\n//   const classes = useStyles();\n//   const [open, setOpen] = React.useState(false);\n//   const [currentAnnounce, setCurrentAnnounce] = useState(0)\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//     // console.log(currentAnnounce)\n//   };\n\n//   const imagefunction = () => {\n//     console.log(\"CLICKED\");\n//   }\n\n//   const [allData, setAllData] = useState([]);\n//   const [filteredData, setFilteredData] = useState(allData);\n//   // const handleSearch = (event) => {\n//   //   let value = event.target.value.toLowerCase();\n//   //   let result = [];\n//   //   console.log(value);\n//   //   result = allData.filter((data) => {\n//   //     return data.tite.search(value) != -1;\n//   //   });\n//   //   setFilteredData(result);\n//   // }\n\n//   useEffect(() => {\n//     // axios('https://60aa459d66f1d000177729b4.mockapi.io/api/v1/announcement')\n//     // axios('https://536a20dd-fe69-4914-8458-6ad1e9b3ce18.mock.pstmn.io/imandgen')\n\n//     axios('/announcement/announcements')\n//       .then(response => {\n//         console.log(\"hi\" + response.data)\n//         setAllData(response.data);\n//         setFilteredData(response.data);\n//       })\n//       .catch(error => {\n//         console.log('Error getting fake data: ' + error);\n//       })\n//   }, []);\n//   // onClick={this.createNew}\n//   const addNews = async () => {\n//     let res = await api.post('/', {\n//       \"Title\": title,\n//       \"TypeId\": parseInt(currentAnnounce),\n//       \"AnnounceDate\": datecreate,\n//       \"Description\": descrip,\n//       \"ImageUrl\": \"https://cdn.wallpapersafari.com/36/96/7cRSqV.png\",\n//       \"StaffId\": 1\n//     }\n//     ).then(response => {\n//       alert(\"Post Success\")\n//       console.log(response.data)\n//     })\n//       .catch(error => {\n//         alert(\"Post Fail\")\n\n//       })\n//   }\n\n//   const [title, setTitle] = useState(\"\")\n//   // const [type, setType] = useState(0)\n//   const [datecreate, setDatecreate] = useState(\"\")\n//   const [descrip, setDescrip] = useState(\"\")\n\n\n\n//   //   const handleChange = (e) => {\n//   //     setTitle({value: e.target.value})\n//   // }\n\n\n//   return (\n//     <div>\n\n\n\n//       <div className=\"row\" style={{ marginLeft: '-15px', marginRight: '0px', border: 'none' }}>\n//         <Datetoday />\n\n\n\n//       </div>\n\n\n\n//       {/* <div className=\"col-md-2\"> */}\n//       {/* <div className={classes.Move} > */}\n//       {/* <Button variant=\"contained\" color=\"primary\" disableElevation\n//           style={{ backgroundColor: '#485D84' }}\n//         onClick={handleClickOpen}>\n//         Compose\n//       </Button>    */}\n//       <Dialog\n\n\n//         classes={{ paper: classes2.dialog }}\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"edit-apartment\"\n//       >\n//         {/* <DialogTitle id=\"edit-apartment\"> */}\n//         <h5 id=\"newannouncetitle\">  New Announcement </h5>\n//         {/* </DialogTitle> */}\n//         <div className=\"divider\"> </div>\n\n//         <DialogContent>\n//           <DialogContentText>\n//           </DialogContentText>\n//           <div className=\"movetotop\">\n//             <form noValidate>\n//               <div>\n//                 <p>\n//                   <label id=\"titletitle\"  >Title</label>\n//                   <div className=\"spacing12\"></div>\n//                   <input\n//                     className=\"titleinput\"\n//                     placeholder=\"Title\"\n//                     type=\"Buildingname\"\n//                     name=\"text\"\n//                     noValidate\n//                     onChange={(event) => {\n//                       setTitle(event.target.value)\n//                     }}\n//                   />\n//                 </p>\n//               </div>\n\n//               <div >\n//                 <form>\n//                   <label id=\"typetitle\" htmlFor=\"Province\" >Type</label>\n//                   <div className=\"spacing9\"></div>\n//                   <Arraylist\n//                     url='/announcement/type-announcements'\n//                     save={currentAnnounce => setCurrentAnnounce(currentAnnounce)}\n\n//                   />\n//                 </form>\n\n\n//               </div>\n//               <div className=\"spacing12\"></div>\n\n//               <div >\n//                 <p>\n//                   <label id=\"datetitle\" htmlFor=\"Date\">Date</label>\n//                   <div className=\"spacing12\"></div>\n//                   <input\n//                     className=\"dateinput\"\n//                     placeholder=\"Date\"\n//                     type=\"date\"\n//                     name=\"Date\"\n//                     noValidate\n//                     onChange={(event) => {\n//                       setDatecreate(event.target.value)\n//                     }}\n//                   />\n//                 </p>\n//               </div>\n\n//               <div className=\"Description\">\n//                 <label id=\"descriptiontitle\" htmlFor=\"Date\">Description</label>\n\n//                 <textarea className=\"Des\"\n//                   placeholder=\"Description\"\n//                   type=\"text\"\n//                   name=\"Description\"\n//                   noValidate\n//                   onChange={(event) => {\n//                     setDescrip(event.target.value)\n//                   }}\n//                 />\n//               </div>\n\n//             </form>\n//           </div>\n\n//         </DialogContent>\n//         <DialogActions2 >\n\n//           <IconButton className={classes.importimgbtn} onClick={imagefunction}>\n//             <ImageIcon className={classes2.importimgbtn} style={{ color: '#4A4A4A' }} /> </IconButton>\n//           {/* <input type=\"file\"></input> */}\n//           <Button id=\"announceBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n\n//             onClick={addNews}>\n//             <p id=\"textAnnounceBt\"> Announce</p>\n//           </Button>\n//           <div className=\"spacing\" />\n//           <Button id=\"cancelBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n\n//             onClick={handleClose}>\n//             <p id=\"cancelAnnounceBt\">Cancel</p>\n//           </Button>\n//         </DialogActions2>\n//       </Dialog>\n//       {/* </div> */}\n//       <div>\n\n//       </div>\n//       {/* </div> */}\n\n//       <Grid className=\"row colorG grab\">\n//         <div className=\"colorG\">\n//           <div className=\"newH\">\n//             <h5 id=\"announcementheader\" className=\"headAnnounce\" >\n//               Announcement\n//             </h5>\n//           </div>\n//           {/* <div className=\"AppBack\">                     */}\n//           <div className=\"greatcards-container\">\n//             {/* <div className=\"row\">\n\n//                   </div> */}\n//             <Typography gutterBottom variant=\"h5\" component=\"h1\">\n//               <h5 id=\"importanttitle\">Important News</h5>\n//               <div className=\"divider\" />\n//             </Typography>\n//             {allData.map((value, index) => {\n//               return value.type === \"Important News\" ?\n//                 <Link to={`/detailpage/${value.id}`} onClick={() => console.log(value.id)}>\n//                   <ImpNews\n//                     key={index}\n//                     Name={value.title}\n//                     img={value.imageUrl}\n//                     //cell={value.description}\n//                     Date={value.announceDate}\n//                     ID={value.id} />\n\n//                 </Link>\n\n//                 : null\n\n//             })}\n//           </div>\n//         </div>\n//         {/* </div> */}\n\n//         <div className=\"colorG\">\n//           <div className=\"newH\" >\n\n//             <Button id=\"Buttoncompose\" className=\"customButton\" variant=\"contained\" color=\"primary\" disableElevation\n//               style={{ backgroundColor: '#485D84' }}\n//               onClick={handleClickOpen}>\n//               <p id=\"editfontbutton\" className=\"mediumfont\">Compose</p>\n//             </Button>\n//           </div>\n\n//           {/* <div className=\"AppBack2\">  */}\n//           <div className=\"greatcards-container2\">\n\n//             <Typography gutterBottom variant=\"h5\" component=\"h1\">\n//               <h5 id=\"generaltitle\">General News</h5>\n//               <div className=\"divider\" />\n//             </Typography>\n//             {allData.map((value, index) => {\n//               return value.type !== \"Important News\" ?\n\n\n//                 <General\n\n//                   key={index}\n//                   Name={value.title}\n//                   //cell={value.description}\n//                   img={value.imageUrl}\n//                   Date={value.announceDate}\n//                 //ID ={index.id}             \n//                 />\n\n//                 : null\n//             })}\n//           </div>\n\n//         </div>\n//         {/* </div> */}\n//       </Grid>\n//     </div>\n//   );\n// }\n\n// export default Social;\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport ImpNews from '../../Components/Anouncement/Important';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Divider from '@material-ui/core/Divider';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from '@material-ui/core/Typography';\nimport General from \"../../Components/Anouncement/General\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport \"../../Css/Announcement/Socialcard.css\";\nimport { Grid } from '@material-ui/core';\nimport Arraylist from './Arraylist';\nimport Datetoday from '../AllComponent/Datetoday'\nimport moment from 'moment';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Update } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\n//import DropFloor from '../Dropdown/DropFloor';\nimport {storage } from '../../base'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#fff\",\n    borderRadius: '8px',\n    width: 200,\n    marginBottom: 90,\n    // marginTop: -25,\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n\n    change: {\n      color: 'black'\n    },\n\n    Font: {\n      fontFamily: [\n        '\"Helvetica Neue\"',\n\n\n      ].join(','),\n    },\n\n    Move: {\n      marginright: '500%',\n      marginTop: \"-5%\",\n      display: \"block\",\n      '& > * + *': {\n        marginTop: theme.spacing(5),\n      },\n\n      Btn: {\n        marginleft: '5%',\n      },\n    },\n},\n\n  importimgbtn: {\n    height: '38px',\n    width: '38px',\n    paddingRight: theme.spacing(5),\n  }\n\n}));\n\nconst useStyles2 = makeStyles({\n  dialog: {\n    position: 'absolute',\n    // left: 0,\n    // top: 0,\n    bottom: -33,\n    right: 10,\n    minWidth: \"650px\",\n    minHeight: \"560px\",\n    maxHeight: \"560px\",\n    borderRadius: '8px',\n  },\n  imgbtn: {\n    height: '33px',\n    weight: '33px'\n  },\n  importimgbtn: {\n    height: '38px',\n    width: '38px',\n    marginLeft: '28px'\n  }\n  // paper: { minWidth: \"500px\" },\n});\n\nconst DialogActions2 = withStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(5),\n    paddingRight: theme.spacing(3),\n  },\n\n}))(MuiDialogActions);\n\n\nconst api = axios.create({\n  baseURL: '/announcement/announcement'\n})\n\n\nfunction Social() {\n\n  const classes2 = useStyles2();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [currentAnnounce, setCurrentAnnounce] = useState(0)\n\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref()\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url);\n          });\n      }\n    );\n  };\n\n  console.log(\"image: \", image);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    // console.log(currentAnnounce)\n  };\n\n  const imagefunction = () => {\n    console.log(\"CLICKED\");\n  }\n\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState(allData);\n  // const handleSearch = (event) => {\n  //   let value = event.target.value.toLowerCase();\n  //   let result = [];\n  //   console.log(value);\n  //   result = allData.filter((data) => {\n  //     return data.tite.search(value) != -1;\n  //   });\n  //   setFilteredData(result);\n  // }\n\n  useEffect(() => {\n    // axios('https://60aa459d66f1d000177729b4.mockapi.io/api/v1/announcement')\n    // axios('https://536a20dd-fe69-4914-8458-6ad1e9b3ce18.mock.pstmn.io/imandgen')\n\n    axios('/announcement/announcements')\n      .then(response => {\n        console.log(\"hi\" + response.data)\n        setAllData(response.data);\n        setFilteredData(response.data);\n      })\n      .catch(error => {\n        console.log('Error getting fake data: ' + error);\n      })\n  }, []);\n\n  // onClick={this.createNew}\n  const addNews = async () => {\n    let res = await api.post('/', {\n      \"Title\": title,\n      \"TypeId\": parseInt(currentAnnounce),\n      \"AnnounceDate\": datecreate,\n      \"Description\": descrip,\n      //\"ImageUrl\": \"https://cdn.wallpapersafari.com/36/96/7cRSqV.png\",\n      \"ImageUrl\": url,\n      \"Likes\": 0,\n      \"Comments\": 0,\n      \"StaffId\": 1\n    })\n  }\n\n  const DeleteAnnounce =(id)=>{\n    axios.post(`/announcement/announcement/${id}`)\n    .then(()=>{\n      setAllData(\n        allData.filter((row)=>{\n          return row.id !=id;\n        })\n      )\n    })\n\n  }\n\n  const [title, setTitle] = useState(\"\")\n  // const [type, setType] = useState(0)\n  const [datecreate, setDatecreate] = useState(\"\")\n  const [descrip, setDescrip] = useState(\"\")\n\n  //   const handleChange = (e) => {\n  //     setTitle({value: e.target.value})\n  // }\n\n\n  return (\n    <div>\n      <div className=\"row\" style={{ marginLeft: '-15px', marginRight: '0px', border: 'none' }}>\n        <Datetoday />\n      </div>\n\n      {/* <div className=\"col-md-2\"> */}\n      {/* <div className={classes.Move} > */}\n      {/* <Button variant=\"contained\" color=\"primary\" disableElevation\n          style={{ backgroundColor: '#485D84' }}\n        onClick={handleClickOpen}>\n        Compose\n      </Button>    */}\n      <Dialog\n        classes={{ paper: classes2.dialog }}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"edit-apartment\"\n      >\n        {/* <DialogTitle id=\"edit-apartment\"> */}\n        <h5 id=\"newannouncetitle\">  New Announcement </h5>\n        {/* </DialogTitle> */}\n        <div className=\"divider\"> </div>\n\n        <DialogContent>\n          <DialogContentText>\n          </DialogContentText>\n          <div className=\"movetotop\">\n            <form noValidate>\n              <div>\n                <p>\n                  <label id=\"titletitle\"  >Title</label>\n                  <div className=\"spacing12\"></div>\n                  <input\n                    className=\"titleinput\"\n                    placeholder=\"Title\"\n                    type=\"Buildingname\"\n                    name=\"text\"\n                    noValidate\n                    onChange={(event) => {\n                      setTitle(event.target.value)\n                    }}\n                  />\n                </p>\n              </div>\n\n              <div >\n                <form>\n                  <label id=\"typetitle\" htmlFor=\"Province\" >Type</label>\n                  <div className=\"spacing9\"></div>\n                  <Arraylist\n                    url='/announcement/type-announcements'\n                    save={currentAnnounce => setCurrentAnnounce(currentAnnounce)}\n                  />\n                </form>\n\n\n              </div>\n              <div className=\"spacing12\"></div>\n\n              <div >\n                <p>\n                  <label id=\"datetitle\" htmlFor=\"Date\">Date</label>\n                  <div className=\"spacing12\"></div>\n                  <input\n                    className=\"dateinput\"\n                    placeholder=\"Date\"\n                    type=\"date\"\n                    name=\"Date\"\n                    noValidate\n                    onChange={(event) => {\n                      setDatecreate(event.target.value)\n                    }}\n                  />\n                </p>\n              </div>\n\n              <div className=\"Description\">\n                <label id=\"descriptiontitle\" htmlFor=\"Date\">Description</label>\n\n                <textarea className=\"Des\"\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"Description\"\n                  noValidate\n                  onChange={(event) => {\n                    setDescrip(event.target.value)\n                  }}\n                />\n              </div>\n\n            </form>\n          </div>\n\n        </DialogContent>\n        <DialogActions2 >\n\n          <IconButton className={classes.importimgbtn} onClick={imagefunction}>\n            <ImageIcon className={classes2.importimgbtn} style={{ color: '#4A4A4A' }} /> \n            <input clasName={classes.Choosefile}\n                 //size=\"40\"\n                type=\"file\" \n                onChange={handleChange} />\n        \n                <button \n                    onClick={handleUpload}>Upload\n                 </button>\n                 <br/>\n                {url}\n                <br />\n            </IconButton>\n\n\n\n          {/* <input type=\"file\">\n          \n          \n          \n          </input> */}\n          <Button id=\"announceBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n\n            onClick={addNews}>\n            <p id=\"textAnnounceBt\"> Announce</p>\n          </Button>\n\n\n          <div className=\"spacing\" />\n          <Button id=\"cancelBT\" className={classes.Btn} variant=\"contained\" color=\"primary\" disableElevation\n            onClick={handleClose}>\n            <p id=\"cancelAnnounceBt\">Cancel</p>\n          </Button>\n        </DialogActions2>\n      </Dialog>\n      {/* </div> */}\n      <div>\n\n      </div>\n      {/* </div> */}\n\n      <Grid className=\"row colorG grab\">\n        <div className=\"colorG\">\n          <div className=\"newH\">\n            <h5 id=\"announcementheader\" className=\"headAnnounce\" >\n              Announcement\n            </h5>\n          </div>\n          {/* <div className=\"AppBack\">                     */}\n          <div className=\"greatcards-container\">\n            {/* <div className=\"row\">\n                  </div> */}\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n              <h5 id=\"importanttitle\">Important News</h5>\n              <div className=\"divider\" />\n            </Typography>\n            {allData.map((value, index) => {\n              \n              return value.type === \"Important News\" ?\n                <Link to={`/detailpage/${value.id}`} onClick={()=> console.log(value.id)}>\n                  <ImpNews\n                    key={index}\n                    Name={ value.title}\n                    img={value.imageUrl}\n                    //cell={value.description}\n                    Date={value.announceDate}  \n                    ID={value.id}       \n                    />\n                   \n                </Link>\n\n\n                : null\n\n                \n\n\n            })}\n          </div>\n        </div>\n        {/* </div> */}\n\n        <div className=\"colorG\">\n          <div className=\"newH\" >\n\n            <Button id=\"Buttoncompose\" className=\"customButton\" variant=\"contained\" color=\"primary\" disableElevation\n              style={{ backgroundColor: '#485D84' }}\n              onClick={handleClickOpen}>\n              <p id=\"editfontbutton\" className=\"mediumfont\">Compose</p>\n            </Button>\n          </div>\n\n          {/* <div className=\"AppBack2\">  */}\n          <div className=\"greatcards-container2\">\n\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n              <h5 id=\"generaltitle\">General News</h5>\n              <div className=\"divider\" />\n            </Typography>\n            {allData.map((value, index) => {\n              return value.type !== \"Important News\" ?\n                <General\n                  key={index}\n                  Name={value.title}\n                  //cell={value.description}\n                  img={value.imageUrl}\n                  Date={value.announceDate}\n                  //ID ={index.id}             \n                />\n\n                : null\n            })}\n          </div>\n\n        </div>\n        {/* </div> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Social;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}