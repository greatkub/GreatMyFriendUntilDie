{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STRoom/STRoompage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js';\nimport { ScrollView } from 'react-native';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Floorcom from './STRoomComp/Floorcom.js';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport DisplayDialog from './DisplayDialog.js';\nimport DropFloor from '../../Components/Dropdown/DropFloor.js';\nimport Arraylist from '../../Components/Anouncement/Arraylist.js';\nimport DropBuilding from '../../Components/Dropdown/DropFloor.js';\nimport DropStatus from '../../Components/Dropdown/DropStatus.js';\nimport { Button } from '@material-ui/core';\nimport DropIsAvailable from '../../Components/Dropdown/DropIsAvailable.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    width: '1163px',\n    height: '232px',\n    backgroundColor: 'red',\n    position: \"relative\"\n  },\n  scrollspace: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 110,\n    transition: 'all 0.5s ease'\n  },\n  scrollspace36: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 36,\n    transition: 'all 0.5s ease'\n  },\n  texttitle: {\n    fontSize: \"19px\",\n    fontWeight: \"bold\",\n    color: \"#4A4A4A\"\n  },\n  texttitle: {\n    fontSize: \"19px\",\n    fontWeight: \"bold\",\n    color: \"#4A4A4A\"\n  },\n  textDrop: {\n    fontSize: 16,\n    color: \"#4A4A4A\"\n  },\n  titleText: {\n    fontSize: 19.4,\n    fontWeight: 'bold',\n    color: \"#4A4A4A\"\n  },\n  buttontop: {\n    backgroundColor: '#485D84',\n    borderRadius: \"5px\",\n    textTransform: \"none\",\n    fontSize: \"13px\",\n    color: '#fff',\n    fontWeight: 'normal',\n    width: \"107.6px\",\n    height: \"31.5px\",\n    // position: \"absolute\",\n    '&:hover': {\n      backgroundColor: '#687690',\n      color: '#fff',\n      width: \"107.6px\",\n      height: \"31.5px\"\n    }\n  }\n}));\nexport default function STRoompage({\n  isOpened\n}) {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => {\n    axios('/room/room-types/King Solomon').then(response => {\n      console.log(response.data);\n      setAllFloor(response.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  const [allFloor, setAllFloor] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [dropFloorSelect, setDropFloorSelect] = useState(\"2\"); // const [keptAllSelect, setKeptAllSelect] = useState(props.selectArray)\n\n  const [getcurrentSelect, setCurrentSelect] = useState([]);\n\n  function findpositionElement() {\n    for (var i = 0; i < allFloor.length; i++) {\n      if (allFloor[i].floorName == dropFloorSelect) {\n        return i;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayDialog, {\n      allSelcted: getcurrentSelect,\n      trigger: buttonPopup,\n      setTrigger: setButtonPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollView // scrollEnabled={!buttonPopup}\n    , {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpened ? classes.scrollspace36 : classes.scrollspace,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.frame,\n            children: [/*#__PURE__*/_jsxDEV(Datetoday, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.titleText,\n              children: \"Room Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                position: \"absolute\",\n                bottom: 70,\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.textDrop,\n                  children: \"Floor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: 4\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DropFloor, {\n                  url: \"/filter/filter-building/King David\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.textDrop,\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: 4\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DropStatus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.titleText,\n              style: {\n                position: 'absolute',\n                bottom: 0\n              },\n              children: \"King Solomon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: true ? allFloor.map((item, index) => /*#__PURE__*/_jsxDEV(Floorcom // key={index}\n            , {\n              getcurrentSelect: currentSelect => setCurrentSelect(currentSelect),\n              setTrigger: setButtonPopup,\n              floorName: item.floorName,\n              allFloor: allFloor[index].rooms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this)) : allFloor.filter(floor => floor.floorName == dropFloorSelect).map((item, index) => /*#__PURE__*/_jsxDEV(Floorcom // key={index}\n            , {\n              getcurrentSelect: currentSelect => setCurrentSelect(currentSelect),\n              setTrigger: setButtonPopup,\n              floorName: item.floorName,\n              allFloor: allFloor[findpositionElement()].rooms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'red',\n        width: \"100%\",\n        height: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(STRoompage, \"6ihV5Y0eE1eR7Qw/mpaFB6g5I9A=\", false, function () {\n  return [useStyles];\n});\n\n_c = STRoompage;\n\nvar _c;\n\n$RefreshReg$(_c, \"STRoompage\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STRoom/STRoompage.js"],"names":["React","makeStyles","Datetoday","ScrollView","useState","Link","Floorcom","axios","useEffect","DisplayDialog","DropFloor","Arraylist","DropBuilding","DropStatus","Button","DropIsAvailable","useStyles","theme","frame","width","height","backgroundColor","position","scrollspace","margin","paddingLeft","transition","scrollspace36","texttitle","fontSize","fontWeight","color","textDrop","titleText","buttontop","borderRadius","textTransform","STRoompage","isOpened","classes","then","response","console","log","data","setAllFloor","catch","error","allFloor","buttonPopup","setButtonPopup","dropFloorSelect","setDropFloorSelect","getcurrentSelect","setCurrentSelect","findpositionElement","i","length","floorName","display","bottom","map","item","index","currentSelect","rooms","filter","floor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Datetoday from '../../Components/AllComponent/Datetoday.js'\nimport { ScrollView } from 'react-native';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Floorcom from './STRoomComp/Floorcom.js';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport DisplayDialog from './DisplayDialog.js';\nimport DropFloor from '../../Components/Dropdown/DropFloor.js';\nimport Arraylist from '../../Components/Anouncement/Arraylist.js';\nimport DropBuilding from '../../Components/Dropdown/DropFloor.js';\nimport DropStatus from '../../Components/Dropdown/DropStatus.js';\nimport { Button } from '@material-ui/core';\nimport DropIsAvailable from '../../Components/Dropdown/DropIsAvailable.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n    frame: {\n        width: '1163px',\n        height: '232px',\n        backgroundColor: 'red',\n        position: \"relative\"\n    },\n\n    scrollspace: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 110,\n        transition: 'all 0.5s ease'\n\n    },\n    scrollspace36: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 36,\n        transition: 'all 0.5s ease'\n\n    },\n    texttitle: {\n        fontSize: \"19px\",\n        fontWeight: \"bold\",\n        color: \"#4A4A4A\"\n    },\n    texttitle: {\n        fontSize: \"19px\",\n        fontWeight: \"bold\",\n        color: \"#4A4A4A\"\n    },\n    textDrop: {\n        fontSize: 16,\n        color: \"#4A4A4A\"\n\n    },\n    titleText: {\n        fontSize: 19.4,\n        fontWeight: 'bold',\n        color: \"#4A4A4A\"\n\n    },\n    buttontop: {\n        backgroundColor: '#485D84',\n        borderRadius: \"5px\",\n        textTransform: \"none\",\n        fontSize: \"13px\",\n        color: '#fff',\n        fontWeight: 'normal',\n        width: \"107.6px\",\n        height: \"31.5px\",\n        // position: \"absolute\",\n\n        '&:hover': {\n            backgroundColor: '#687690',\n            color: '#fff',\n            width: \"107.6px\",\n            height: \"31.5px\"\n        },\n    }\n}));\n\nexport default function STRoompage({ isOpened }) {\n    const classes = useStyles();\n    useEffect(() => {\n        axios('/room/room-types/King Solomon')\n            .then(response => {\n                console.log(response.data)\n                setAllFloor(response.data);\n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n    }, []);\n    const [allFloor, setAllFloor] = useState([]);\n    const [buttonPopup, setButtonPopup] = useState(false)\n\n\n    const [dropFloorSelect, setDropFloorSelect] = useState(\"2\")\n\n    // const [keptAllSelect, setKeptAllSelect] = useState(props.selectArray)\n    const [getcurrentSelect, setCurrentSelect] = useState([])\n\n    function findpositionElement() {\n        for (var i = 0; i < allFloor.length; i++) {\n            if (allFloor[i].floorName == dropFloorSelect) {\n                return i\n            }\n\n        }\n    }\n\n\n\n\n    return (\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n            <DisplayDialog\n                allSelcted={getcurrentSelect}\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup} />\n\n            <ScrollView\n            // scrollEnabled={!buttonPopup}\n            >\n                <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n                    <div>\n                        <div className={classes.frame}>\n                            <Datetoday />\n                            {/* <Button  style={{backgroundColor: 'blue'}} onClick={() => props.isOpened('Anna')}/> */}\n                            <div className={classes.titleText}>\n                                Room Types\n                            </div>\n                            \n\n                            <div style={{ display: \"flex\", position: \"absolute\", bottom: 70, width: '100%' }}>\n\n\n                                <div>\n                                    <div className={classes.textDrop}>\n                                        Floor\n                                    </div>\n                                    <div style={{ height: 4 }} />\n\n                                    <DropFloor\n                                        url='/filter/filter-building/King David'\n                                    />\n                                </div>\n\n                                <div style={{ width: 12 }} />\n\n\n                                <div>\n                                    <div className={classes.textDrop}>\n                                        Type\n                                    </div>\n                                    <div style={{ height: 4 }} />\n\n                                    <DropStatus />\n                                </div>\n\n\n                            </div>\n\n\n                            <div className={classes.titleText} style={{ position: 'absolute', bottom: 0 }}>\n                                King Solomon\n                            </div>\n\n                            <div style={{ height: '20px' }}>\n\n                            </div>\n                        </div>\n                        <div>\n                            {/* {allFloor.filter(floor => floor.floorName == '2').map((item, index) => ( */}\n                            {true ?\n                                allFloor.map((item, index) => (\n\n                                    <Floorcom\n                                        // key={index}\n                                        getcurrentSelect={currentSelect => setCurrentSelect(currentSelect)}\n                                        setTrigger={setButtonPopup}\n                                        floorName={item.floorName}\n                                        allFloor={allFloor[index].rooms}\n                                    />\n                                ))\n                                :\n                                allFloor.filter(floor => floor.floorName == dropFloorSelect).map((item, index) => (\n                                    <Floorcom\n                                        // key={index}\n                                        getcurrentSelect={currentSelect => setCurrentSelect(currentSelect)}\n                                        setTrigger={setButtonPopup}\n                                        floorName={item.floorName}\n                                        allFloor={allFloor[findpositionElement()].rooms}\n                                    />\n\n                                ))}\n\n\n\n                            {/* {allData.map((value, index) => {\n                            return value.type === \"Important News\" ?\n                                <ImpNews\n                                    key={index}\n                                    Name={value.title}\n                                    img={value.imageUrl}\n                                    //cell={value.description}\n                                    Date={value.announceDate}\n                                    ID={value.id} />\n                                : null\n\n                        })} */}\n\n                        </div>\n\n                    </div>\n                </div>\n            </ScrollView>\n\n            <div style={{backgroundColor: 'red', width: \"100%\", height: 50}}>\n\n            </div>\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}