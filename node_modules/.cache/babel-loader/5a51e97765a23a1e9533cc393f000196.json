{"ast":null,"code":"// import React from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n// import NavLink from \"../../Components/NavLink/NavLink\";\n// import Button from \"@material-ui/core/Button\";\n// import Social from \"../../Components/Anouncement/Socialcard\";\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',    \n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     background:\"#8795b6\"    \n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: 36,\n//   },\n//   Typo:{\n//     textAlign: \"left\",\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//     whiteSpace: 'nowrap',\n//   },\n//   drawerOpen: {\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerClose: {\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     overflowX: 'hidden',\n//     width: theme.spacing(7) + 1,\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing(9) + 1,\n//     },\n//   },\n//   toolbar: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n// }));\n// export default function MiniDrawer() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, {\n//               [classes.hide]: open,\n//             })}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography variant=\"h6\" noWrap>\n//             Habitat\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         variant=\"permanent\"\n//         className={clsx(classes.drawer, {\n//           [classes.drawerOpen]: open,\n//           [classes.drawerClose]: !open,\n//         })}\n//         classes={{\n//           paper: clsx({\n//             [classes.drawerOpen]: open,\n//             [classes.drawerClose]: !open,\n//           }),\n//         }}\n//       >\n//         <div className={classes.toolbar}>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n//           </IconButton>\n//         </div>\n//         <Divider/>\n//         <List>\n//         <NavLink to=\"/login\" icon={InboxIcon}>\n//           Room management\n//           </NavLink>\n//           <NavLink to=\"/about\" icon={MailIcon}>\n//           Bill Payment\n//           </NavLink>\n//           <NavLink to=\"/login\" icon={MailIcon}>\n//           Room management\n//           </NavLink>\n//         </List>\n//         <Divider />\n//         <List>\n//         <NavLink to=\"/login\" icon={MailIcon}>\n//           Logout\n//         </NavLink>\n//         </List>\n//       </Drawer>\n//       <main className={classes.content}>    \n//         <div className={classes.toolbar}/>       \n//         <Typography paragraph>\n//         </Typography>\n//               <Social/>\n//       </main>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/Announcement/Mainpage.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n// import NavLink from \"../../Components/NavLink/NavLink\";\n// import Button from \"@material-ui/core/Button\";\n// import Social from \"../../Components/Anouncement/Socialcard\";\n\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',    \n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     background:\"#8795b6\"    \n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: 36,\n//   },\n\n//   Typo:{\n//     textAlign: \"left\",\n//   },\n\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//     whiteSpace: 'nowrap',\n//   },\n//   drawerOpen: {\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerClose: {\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     overflowX: 'hidden',\n//     width: theme.spacing(7) + 1,\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing(9) + 1,\n//     },\n//   },\n//   toolbar: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n// }));\n\n// export default function MiniDrawer() {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, {\n//               [classes.hide]: open,\n//             })}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography variant=\"h6\" noWrap>\n//             Habitat\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         variant=\"permanent\"\n//         className={clsx(classes.drawer, {\n//           [classes.drawerOpen]: open,\n//           [classes.drawerClose]: !open,\n//         })}\n//         classes={{\n//           paper: clsx({\n//             [classes.drawerOpen]: open,\n//             [classes.drawerClose]: !open,\n//           }),\n//         }}\n//       >\n//         <div className={classes.toolbar}>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n//           </IconButton>\n//         </div>\n//         <Divider/>\n\n//         <List>\n//         <NavLink to=\"/login\" icon={InboxIcon}>\n//           Room management\n//           </NavLink>\n//           <NavLink to=\"/about\" icon={MailIcon}>\n//           Bill Payment\n//           </NavLink>\n//           <NavLink to=\"/login\" icon={MailIcon}>\n//           Room management\n//           </NavLink>\n//         </List>\n//         <Divider />\n//         <List>\n//         <NavLink to=\"/login\" icon={MailIcon}>\n//           Logout\n//         </NavLink>\n//         </List>\n//       </Drawer>\n//       <main className={classes.content}>    \n//         <div className={classes.toolbar}/>       \n//         <Typography paragraph>\n//         </Typography>\n        \n//               <Social/>\n//       </main>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}