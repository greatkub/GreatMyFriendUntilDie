{"ast":null,"code":"var _jsxFileName = \"/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STBuilding/STBuildingpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Cardsection from './Cardsection';\nimport { ScrollView } from 'react-native';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    width: '1163px',\n    height: '113px'\n  },\n  scrollspace: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 110,\n    transition: 'all 0.5s ease'\n  },\n  scrollspace36: {\n    height: \"730px\",\n    width: '1163px',\n    margin: 'auto',\n    paddingLeft: 36,\n    transition: 'all 0.5s ease'\n  },\n  frame: {\n    width: \"100%\",\n    height: \"556.5px\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: \"5px\"\n  },\n  title: {\n    fontSize: \"19.4px\",\n    color: \"#4A4A4A\",\n    fontWeight: \"bold\"\n  },\n  buttontop: {\n    backgroundColor: '#485D84',\n    borderRadius: \"5px\",\n    textTransform: \"none\",\n    fontSize: \"13px\",\n    color: '#fff',\n    fontWeight: 'normal',\n    width: \"107.6px\",\n    height: \"31.5px\",\n    // position: \"absolute\",\n    '&:hover': {\n      backgroundColor: '#687690',\n      color: '#fff',\n      width: \"107.6px\",\n      height: \"31.5px\"\n    }\n  },\n  fametop: {\n    height: \"123px\",\n    width: \"100%\",\n    position: \"relative\"\n  },\n  allfame: {\n    width: \"1163px\",\n    height: \"679.5px\"\n  }\n}));\nexport default function STBuildingpage({\n  isOpened,\n  props\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [building, setBuilding] = useState([]);\n  const [nowId, setNowId] = useState([]);\n  useEffect(() => {\n    axios('/building/buildings').then(response => {\n      console.log(response.data);\n      setBuilding(response.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(nowId);\n  }, [nowId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOpened ? classes.scrollspace36 : classes.scrollspace,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.allfame,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fametop,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              paddingTop: \"52px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title,\n              children: [\"Residence\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => console.log(nowId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"41px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/addbuilding\",\n              style: {\n                textDecoration: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.buttontop,\n                children: \"Add Building\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.frame,\n          style: {\n            display: \"flex\",\n            flexWrap: 'wrap',\n            paddingLeft: 79,\n            paddingTop: 48.54\n          },\n          children: /*#__PURE__*/_jsxDEV(ScrollView, {\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexWrap: 'wrap'\n              },\n              children: building.map((value, index) => /*#__PURE__*/_jsxDEV(Cardsection, {\n                buildingName: value.buildingName,\n                numberOfRoom: value.numberOfRoom,\n                tenant: value.tenant,\n                overdue: value.overdue,\n                vacant: value.vacant,\n                id: value.id // getid={nowId => setNowId(nowId)}\n                ,\n                Manage:\n                /*#__PURE__*/\n                // <Link to='/setting2' onClick={()=>  console.log(nowId)}\n                // style={{ textDecoration: \"none\" }}>\n                _jsxDEV(Button, {\n                  className: classes.buttontop,\n                  onClick: () => setNowId(value.id),\n                  children: \"Manage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 49\n                }, this) //  </Link> \n                ,\n                Edit: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `editbuilding_sp/${value.id}`,\n                  style: {\n                    textDecoration: \"none\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.buttontop,\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(STBuildingpage, \"AVr6dk7uoh8iCRLjCeXmvCGS/Go=\", false, function () {\n  return [useStyles];\n});\n\n_c = STBuildingpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"STBuildingpage\");","map":{"version":3,"sources":["/Users/krittametchuwongworaphinit/Desktop/react_project/GreatApp/src/page/STBuilding/STBuildingpage.js"],"names":["React","useState","useEffect","makeStyles","withStyles","Button","Link","axios","Cardsection","ScrollView","Redirect","useStyles","theme","frame","width","height","scrollspace","margin","paddingLeft","transition","scrollspace36","backgroundColor","borderRadius","title","fontSize","color","fontWeight","buttontop","textTransform","fametop","position","allfame","STBuildingpage","isOpened","props","classes","building","setBuilding","nowId","setNowId","then","response","console","log","data","catch","error","display","paddingTop","textDecoration","flexWrap","map","value","index","buildingName","numberOfRoom","tenant","overdue","vacant","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Cardsection from './Cardsection';\nimport { ScrollView } from 'react-native';\nimport { Redirect } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    frame: {\n        width: '1163px',\n        height: '113px',\n    },\n    scrollspace: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 110,\n        transition: 'all 0.5s ease'\n    },\n    scrollspace36: {\n        height: \"730px\",\n        width: '1163px',\n        margin: 'auto',\n        paddingLeft: 36,\n        transition: 'all 0.5s ease'\n    },\n    frame: {\n        width: \"100%\",\n        height: \"556.5px\",\n        backgroundColor: \"#FFFFFF\",\n        borderRadius: \"5px\"\n    },\n    title: {\n        fontSize: \"19.4px\",\n        color: \"#4A4A4A\",\n        fontWeight: \"bold\"\n    },\n    buttontop: {\n        backgroundColor: '#485D84',\n        borderRadius: \"5px\",\n        textTransform: \"none\",\n        fontSize: \"13px\",\n        color: '#fff',\n        fontWeight: 'normal',\n        width: \"107.6px\",\n        height: \"31.5px\",\n        // position: \"absolute\",\n\n        '&:hover': {\n            backgroundColor: '#687690',\n            color: '#fff',\n            width: \"107.6px\",\n            height: \"31.5px\"\n        },\n    },\n    fametop: {\n        height: \"123px\",\n        width: \"100%\",\n        position: \"relative\"\n    },\n    allfame: {\n        width: \"1163px\",\n        height: \"679.5px\"\n    }\n\n}));\n\nexport default function STBuildingpage({ isOpened, props }) {\n\n    const classes = useStyles();\n    const [building, setBuilding] = useState([])\n    const [nowId, setNowId] = useState([])\n\n    useEffect(() => {\n        axios('/building/buildings')\n            .then(response => {\n                console.log(response.data)\n                setBuilding(response.data);\n                \n            })\n            .catch(error => {\n                console.log('Error getting fake data: ' + error);\n            })\n    }, []);\n\n    useEffect(() => {\n        console.log(nowId)\n        \n\n    }, [nowId])\n\n    return (\n        <div style={{ width: '100%' }}>\n\n            <div className={isOpened ? classes.scrollspace36 : classes.scrollspace}>\n                <div className={classes.allfame}>\n                    <div className={classes.fametop}>\n                        <div style={{ display: \"flex\", paddingTop: \"52px\" }}>\n                            <div className={classes.title}>\n                                Residence\n                                <button onClick={()=> console.log(nowId)}>\n\n                                </button>\n                            </div>\n                            <div style={{ width: \"41px\" }} />\n                            <Link to='/addbuilding' style={{ textDecoration: \"none\" }}>\n                                <Button className={classes.buttontop}>\n                                    Add Building\n                                </Button>\n                            </Link>\n                        </div>\n\n                    </div>\n\n                    <div className={classes.frame} style={{ display: \"flex\", flexWrap: 'wrap', paddingLeft: 79, paddingTop: 48.54 }}>\n                        <ScrollView style={{ width: \"100%\", height: \"100%\" }}>\n                            <div style={{ display: \"flex\", flexWrap: 'wrap' }}>\n                                {building.map((value, index) => (\n                                    <Cardsection\n                                        buildingName={value.buildingName}\n                                        numberOfRoom={value.numberOfRoom}\n                                        tenant={value.tenant}\n                                        overdue={value.overdue}\n                                        vacant={value.vacant}\n                                        id={value.id}\n                                        // getid={nowId => setNowId(nowId)}\n                                        Manage={\n                                            // <Link to='/setting2' onClick={()=>  console.log(nowId)}\n\n\n                                                // style={{ textDecoration: \"none\" }}>\n\n                                                <Button className={classes.buttontop} onClick={()=>  setNowId(value.id)}>\n\n                                                    Manage\n\n                                                </Button>\n\n                                            //  </Link> \n                                        }\n                                        Edit={\n\n                                            <Link to={`editbuilding_sp/${value.id}`}\n\n                                                style={{ textDecoration: \"none\" }}>\n\n                                                <Button className={classes.buttontop}>\n\n                                                    Edit\n\n                                                </Button>\n\n                                            </Link>\n\n                                        }\n                                    />\n                                ))}\n                            </div>\n\n                        </ScrollView>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}